{"meta":{"exported_on":1411473475958,"version":"002"},"data":{"posts":[{"id":2,"uuid":"babc4a9c-306a-447b-b31f-01dec49e33fd","title":"...A blog about technology, how original(not)!","slug":"-a-blog-about-technology-how-originalnot","markdown":"#### Introduction (who am I?)\nHello, Tommy here. I work at [vistaprint](http://vistaprint.com). I spend most of my time monitoring a website, writing internal tools, and doing things some would consider \"Devops\".\n\nI'm not very qualified as a blogger, quite frankly my English skills are terrible.\n\nMy perspective is not very unique at this point. The industry is full of developer/sysadmin employees, and devops has become an industry movement. This movement has created in my opinion a 'trendy effect' to what some would consider little more than a buzz word.\n\n\n#### DevOps the modern exorcist?\n\n\n Many years ago the catholic church would perform exorcisms on people whom they deemed to be possessed by the devil. The people who would do these works, were not high up in the ranks of the church. However the work they did both mysterious, and possibly dangerous is at the same time totally enticing. This lead to the popularization of what we see now as an exorcist.\n \n Currently DevOps is starting to take on the same popularity. The chance to tackle a problem such as proper monitoring, task automation, etc. really seems sexy to other developers. Having to work on the same website, or the same payments system every day, becomes tedious. However, coming into the office and tackling real infrastructure problems, at break neck speed is   very desirable for traditional developers. People must understand, that DevOps personnel are not far superior than sysadmin/developer/qa, but simply tackling 3 jobs at the same time. \n\n\n#### Technology today, and Service Oriented Arch.\n\nCurrently, the industry is making the transition from traditional monolithic infrastructures, to a more services based world. If you are working at an indie start-up, or a big company that really planned ahead, you are probably thinking **that I am blogging in the past**. We have all heard the [success stories ](https://engineering.groupon.com/2013/node-js/geekon-i-tier/), however with each success there are 5 failures you didn't know about (90% of statistics made up), and some companies are starting to feel the pains of moving both culturally, and technologically to a service world. The obvious problem is that the **traditional way of doing things cannot continue**, but the movement of change can kill an organization just as fast.\n\n\n#### So what makes you so qualified to talk on these topics?\n\nNothing really, most of this blog will be ranting about things I dislike, or pointing out not so interesting things about Computers. I'm not much of a business leader, and unfortunatly for the readers of this blog I am one of those sysadmin's whom thinks they can code. I hope some of you find my perspective useful, and feel free to leave comments at will.","html":"<h4 id=\"introductionwhoami\">Introduction (who am I?)</h4>\n\n<p>Hello, Tommy here. I work at <a href=\"http://vistaprint.com\">vistaprint</a>. I spend most of my time monitoring a website, writing internal tools, and doing things some would consider \"Devops\".</p>\n\n<p>I'm not very qualified as a blogger, quite frankly my English skills are terrible.</p>\n\n<p>My perspective is not very unique at this point. The industry is full of developer/sysadmin employees, and devops has become an industry movement. This movement has created in my opinion a 'trendy effect' to what some would consider little more than a buzz word.</p>\n\n<h4 id=\"devopsthemodernexorcist\">DevOps the modern exorcist?</h4>\n\n<p>Many years ago the catholic church would perform exorcisms on people whom they deemed to be possessed by the devil. The people who would do these works, were not high up in the ranks of the church. However the work they did both mysterious, and possibly dangerous is at the same time totally enticing. This lead to the popularization of what we see now as an exorcist.</p>\n\n<p>Currently DevOps is starting to take on the same popularity. The chance to tackle a problem such as proper monitoring, task automation, etc. really seems sexy to other developers. Having to work on the same website, or the same payments system every day, becomes tedious. However, coming into the office and tackling real infrastructure problems, at break neck speed is   very desirable for traditional developers. People must understand, that DevOps personnel are not far superior than sysadmin/developer/qa, but simply tackling 3 jobs at the same time. </p>\n\n<h4 id=\"technologytodayandserviceorientedarch\">Technology today, and Service Oriented Arch.</h4>\n\n<p>Currently, the industry is making the transition from traditional monolithic infrastructures, to a more services based world. If you are working at an indie start-up, or a big company that really planned ahead, you are probably thinking <strong>that I am blogging in the past</strong>. We have all heard the <a href=\"https://engineering.groupon.com/2013/node-js/geekon-i-tier/\">success stories </a>, however with each success there are 5 failures you didn't know about (90% of statistics made up), and some companies are starting to feel the pains of moving both culturally, and technologically to a service world. The obvious problem is that the <strong>traditional way of doing things cannot continue</strong>, but the movement of change can kill an organization just as fast.</p>\n\n<h4 id=\"sowhatmakesyousoqualifiedtotalkonthesetopics\">So what makes you so qualified to talk on these topics?</h4>\n\n<p>Nothing really, most of this blog will be ranting about things I dislike, or pointing out not so interesting things about Computers. I'm not much of a business leader, and unfortunatly for the readers of this blog I am one of those sysadmin's whom thinks they can code. I hope some of you find my perspective useful, and feel free to leave comments at will.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1392588837172,"created_by":1,"updated_at":1392920140702,"updated_by":1,"published_at":1392611673264,"published_by":1},{"id":4,"uuid":"bbed0254-7ebc-47df-9e68-c21294810c41","title":"About","slug":"about","markdown":"I work at vistaprint where I monitor our websites, and do DevOps type things while trying to avoid using the word DevOps.\n\nI dont claim to be good at english, and I often make spelling mistakes (sorry!), however I believe I have a lot to say about Technology.\n\n![](/content/images/2014/Apr/MTA_2013-rgb-_1427.png) <a href=\"http://www.linkedin.com/pub/tommy-parnell/24/722/63a\">\n<img src=\"https://static.licdn.com/scds/common/u/img/webpromo/btn_myprofile_160x33.png\" width=\"160\" height=\"33\" border=\"0\" alt=\"View Tommy Parnell's profile on LinkedIn\">     \n</a>","html":"<p>I work at vistaprint where I monitor our websites, and do DevOps type things while trying to avoid using the word DevOps.</p>\n\n<p>I dont claim to be good at english, and I often make spelling mistakes (sorry!), however I believe I have a lot to say about Technology.</p>\n\n<p><img src=\"/content/images/2014/Apr/MTA_2013-rgb-_1427.png\" alt=\"\" title=\"\" /> <a href=\"http://www.linkedin.com/pub/tommy-parnell/24/722/63a\">\n<img src=\"https://static.licdn.com/scds/common/u/img/webpromo/btn_myprofile_160x33.png\" width=\"160\" height=\"33\" border=\"0\" alt=\"View Tommy Parnell's profile on LinkedIn\"> <br />\n</a></p>","image":null,"featured":0,"page":1,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1392599342836,"created_by":1,"updated_at":1396739885191,"updated_by":1,"published_at":1392599342848,"published_by":1},{"id":5,"uuid":"395b47a0-d3ca-41fb-924c-99a85dc7c93c","title":"You're doing it wrong! (Recruiter Edition)","slug":"youre-doing-it-wrong-recruiter-edition","markdown":"Recruiting, I am sure is a tough job (I wouldn't actually know), but often being on the other end I see pitfalls that a lot of recruiters fall into. So for all of you recruiters, please do not do these things.\n\n### The Linkedin Summary\n\nWe all know that a major way to find candidates is through social media, the top one is [Linkedin](http://linkedin.com). Linkedin allows you to instantly find candidates that have the skills you are looking for. \n\nIn Linkedin the summary is really a place for a person to express who they are, where they would like to be in 5 years, and how they wish to get there. This is usually a good place where people leave information for recruiters. \n\nIf you find a candidate with qualifications that are suitable, spend the 5 minutes to read their summary. Their summary could include information that will help in your efforts to recruit this person. Showing that you spent the few minutes to read their summary in your initial contact message will go far. Ignoring their summary will most certainly be your recruitment downfall.\n\n\n### The Problem\n\nAt the end of the day, a developer wants to solve a problem. Developers want to solve interesting problems, or problems which not many people can solve. Sending an email saying *hey im looking for xyz candidate with experience in ruby* will probably not get much attention.\n\nThink for a moment about why you are hiring someone. You hire people, because your company has a problem, and that problem needs to be solved. \n\nSending an email stating a problem you have, and why you need this person to help solve it, will ultimately prove better than a list of standard qualifications necessary for the position.\n\nUltimately you should try to get them excited to work at your company. Free beer, and pizza is not a recruiting tool, just a way to disguise what could be a poor environment to work in.\n\n### First Contact\n\n{<1>}![First Contact](/content/images/2014/Feb/968full_star_trek__first_contact_screenshot.jpg)\n\n####Do\n* Address the candidate with the name they have listed on websites/resumes\n* Present clearly what you are looking for, and what you are not looking for\n* Ask them what their future goals are\n* Ask them if they know anyone whom would be interested (if they are not)\n* Tell them why your company is worth working for. Be honest, provide stories from your own experiences\n* Be honest about the job, they will leave if they find out it was not what you said it was\n\n\n####Don'ts\n* Assume their name is a nickname (ex. addressing someone named Dave, as David)\n* Contact someone asking for qualifications that are clearly not listed on their resume\n* Being unprepared during an interview (phone or otherwise)\n* Sell them your company with offers of free gifts (both before, and during employment)\n\n...and if they turn you down, be polite. Leave a lasting impression. You only get one shot to show your organizations value. Even if they turn you down, they may refer others to you.","html":"<p>Recruiting, I am sure is a tough job (I wouldn't actually know), but often being on the other end I see pitfalls that a lot of recruiters fall into. So for all of you recruiters, please do not do these things.</p>\n\n<h3 id=\"thelinkedinsummary\">The Linkedin Summary</h3>\n\n<p>We all know that a major way to find candidates is through social media, the top one is <a href=\"http://linkedin.com\">Linkedin</a>. Linkedin allows you to instantly find candidates that have the skills you are looking for. </p>\n\n<p>In Linkedin the summary is really a place for a person to express who they are, where they would like to be in 5 years, and how they wish to get there. This is usually a good place where people leave information for recruiters. </p>\n\n<p>If you find a candidate with qualifications that are suitable, spend the 5 minutes to read their summary. Their summary could include information that will help in your efforts to recruit this person. Showing that you spent the few minutes to read their summary in your initial contact message will go far. Ignoring their summary will most certainly be your recruitment downfall.</p>\n\n<h3 id=\"theproblem\">The Problem</h3>\n\n<p>At the end of the day, a developer wants to solve a problem. Developers want to solve interesting problems, or problems which not many people can solve. Sending an email saying <em>hey im looking for xyz candidate with experience in ruby</em> will probably not get much attention.</p>\n\n<p>Think for a moment about why you are hiring someone. You hire people, because your company has a problem, and that problem needs to be solved. </p>\n\n<p>Sending an email stating a problem you have, and why you need this person to help solve it, will ultimately prove better than a list of standard qualifications necessary for the position.</p>\n\n<p>Ultimately you should try to get them excited to work at your company. Free beer, and pizza is not a recruiting tool, just a way to disguise what could be a poor environment to work in.</p>\n\n<h3 id=\"firstcontact\">First Contact</h3>\n\n<p><img src=\"/content/images/2014/Feb/968full_star_trek__first_contact_screenshot.jpg\" alt=\"First Contact\" /></p>\n\n<h4 id=\"do\">Do</h4>\n\n<ul>\n<li>Address the candidate with the name they have listed on websites/resumes</li>\n<li>Present clearly what you are looking for, and what you are not looking for</li>\n<li>Ask them what their future goals are</li>\n<li>Ask them if they know anyone whom would be interested (if they are not)</li>\n<li>Tell them why your company is worth working for. Be honest, provide stories from your own experiences</li>\n<li>Be honest about the job, they will leave if they find out it was not what you said it was</li>\n</ul>\n\n<h4 id=\"donts\">Don'ts</h4>\n\n<ul>\n<li>Assume their name is a nickname (ex. addressing someone named Dave, as David)</li>\n<li>Contact someone asking for qualifications that are clearly not listed on their resume</li>\n<li>Being unprepared during an interview (phone or otherwise)</li>\n<li>Sell them your company with offers of free gifts (both before, and during employment)</li>\n</ul>\n\n<p>...and if they turn you down, be polite. Leave a lasting impression. You only get one shot to show your organizations value. Even if they turn you down, they may refer others to you.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1392617308296,"created_by":1,"updated_at":1392893765423,"updated_by":1,"published_at":1392620206751,"published_by":1},{"id":6,"uuid":"6c9ed978-a3bd-4005-9592-13ed215efbbd","title":"Xamarin For Android The Good: (Part 1 of 4)","slug":"xamarin-the-good-the-bad-and-the-ugly","markdown":"## Introduction\n\n* Part One\n* [Part Two](http://blog.tommyparnell.com/xamarin-for-android-the-bad-part-2-of-4/)\n* [Part Three](https://blog.tommyparnell.com/xamarin-for-android-the-ugly-part-3-of-4/)\n* [Part Four](https://blog.tommyparnell.com/xamarin-the-conclusion-part-4-of-4/)\n\nThis will be a series of blog entries where I discuss the Xamarin platform for Android.\n\nI really enjoy C# programming language *(JavaScript second)*....Linq, Generics, anonymous methods, and Visual Studio are just some of the reasons I like it. [Xamarin](http://xamarin.com/) is a platform that gives you the ability you to write Android applications in c#.\n\nWhen I heard about [Xamarin](http://xamarin.com/) I naturally, wanted to give it a shot. Having tried Eclipse, and Android Studio for android development I was no idiot when it came to the platform. So I got a license, and did nothing with it for six months, until a few weeks ago. After only 3 days I created [Ultimate Gravatar Sync](https://play.google.com/store/apps/details?id=ultimategravatarsync.ultimategravatarsyncfree). An app that sync's your contacts gravatar images to their picture in your phone.\n\n## C# with no compromise\nThe [Xamarin](http://xamarin.com/) platform uses mono, and some kind of voodoo bindings to the Java libraries to make it work. I wont go in depth, but the native features of the C# language are there to use. I never felt like my hands had been tied, that all of a sudden I couldn't use a library that is normally part of the [GAC](http://msdn.microsoft.com/en-us/library/yf1d93sz(v=vs.110).aspx) (Global Assembly Cache). When I needed multi-threading, System.Threading was there, and when I needed to use C# Generics I had no issues implementing them.\n\n{<1>}![Xamarin execution](/content/images/2014/Feb/architecture1.png)\n\n## Manage Android Manifest files\nOne of the things that blew me away about the platform, was that I never had to add anything to my manifest file. For those of you whom don't know, Android requires an XML config detailing the permissions you require, and the classes you have in your application.\n\nSimple decoration such as:\n\n\n\n```c#\n[Activity(Label = \"Label\", MainLauncher = true, Icon = \"@drawable/Icon\")]\n```\n\nWill Generate in your manifest file as:\n\n<pre>\n< activity\nandroid:label=\"Label\"\n             android:name=\".logoActivity\" >\n            < intent-filter >\n                < action android:name=\"android.intent.action.MAIN\" />\n                < category android:name=\"android.intent.category.LAUNCHER\" />\n            < /intent-filter>\n        < /activity>\n    </pre>\nAdding permissions is also easy:\n\n```c#\n[assembly: UsesPermission(Android.Manifest.Permission.Internet)]\n```\n\n\n## Using Java Libraries\n[Xamarin](http://xamarin.com/) provides some kind of crazy visual studio project, that will essentially provide c# bindings to Java libraries you require. To bind Simply create a Java Binding project, adding the .Jar files, and then build. Watch the magic happen. They do [note](http://docs.xamarin.com/guides/android/advanced_topics/java_integration_overview/binding_a_java_library_(.jar)/) that you sometimes need to do some configuration for certain libraries, however I had no issues with the one I tried. On top of that if you really needed to, you could access the [Java Native Interface](http://docs.xamarin.com/guides/android/advanced_topics/java_integration_overview/working_with_jni/) for even more power.","html":"<h2 id=\"introduction\">Introduction</h2>\n\n<ul>\n<li>Part One</li>\n<li><a href=\"http://blog.tommyparnell.com/xamarin-for-android-the-bad-part-2-of-4/\">Part Two</a></li>\n<li><a href=\"https://blog.tommyparnell.com/xamarin-for-android-the-ugly-part-3-of-4/\">Part Three</a></li>\n<li><a href=\"https://blog.tommyparnell.com/xamarin-the-conclusion-part-4-of-4/\">Part Four</a></li>\n</ul>\n\n<p>This will be a series of blog entries where I discuss the Xamarin platform for Android.</p>\n\n<p>I really enjoy C# programming language <em>(JavaScript second)</em>....Linq, Generics, anonymous methods, and Visual Studio are just some of the reasons I like it. <a href=\"http://xamarin.com/\">Xamarin</a> is a platform that gives you the ability you to write Android applications in c#.</p>\n\n<p>When I heard about <a href=\"http://xamarin.com/\">Xamarin</a> I naturally, wanted to give it a shot. Having tried Eclipse, and Android Studio for android development I was no idiot when it came to the platform. So I got a license, and did nothing with it for six months, until a few weeks ago. After only 3 days I created <a href=\"https://play.google.com/store/apps/details?id=ultimategravatarsync.ultimategravatarsyncfree\">Ultimate Gravatar Sync</a>. An app that sync's your contacts gravatar images to their picture in your phone.</p>\n\n<h2 id=\"cwithnocompromise\">C# with no compromise</h2>\n\n<p>The <a href=\"http://xamarin.com/\">Xamarin</a> platform uses mono, and some kind of voodoo bindings to the Java libraries to make it work. I wont go in depth, but the native features of the C# language are there to use. I never felt like my hands had been tied, that all of a sudden I couldn't use a library that is normally part of the <a href=\"http://msdn.microsoft.com/en-us/library/yf1d93sz(v=vs.110).aspx\">GAC</a> (Global Assembly Cache). When I needed multi-threading, System.Threading was there, and when I needed to use C# Generics I had no issues implementing them.</p>\n\n<p><img src=\"/content/images/2014/Feb/architecture1.png\" alt=\"Xamarin execution\" /></p>\n\n<h2 id=\"manageandroidmanifestfiles\">Manage Android Manifest files</h2>\n\n<p>One of the things that blew me away about the platform, was that I never had to add anything to my manifest file. For those of you whom don't know, Android requires an XML config detailing the permissions you require, and the classes you have in your application.</p>\n\n<p>Simple decoration such as:</p>\n\n<pre><code class=\"c#\">[Activity(Label = \"Label\", MainLauncher = true, Icon = \"@drawable/Icon\")]\n</code></pre>\n\n<p>Will Generate in your manifest file as:</p>\n\n<pre>\n< activity\nandroid:label=\"Label\"\n             android:name=\".logoActivity\" >\n            < intent-filter >\n                < action android:name=\"android.intent.action.MAIN\" />\n                < category android:name=\"android.intent.category.LAUNCHER\" />\n            < /intent-filter>\n        < /activity>\n    </pre>\n\n<p>Adding permissions is also easy:</p>\n\n<pre><code class=\"c#\">[assembly: UsesPermission(Android.Manifest.Permission.Internet)]\n</code></pre>\n\n<h2 id=\"usingjavalibraries\">Using Java Libraries</h2>\n\n<p><a href=\"http://xamarin.com/\">Xamarin</a> provides some kind of crazy visual studio project, that will essentially provide c# bindings to Java libraries you require. To bind Simply create a Java Binding project, adding the .Jar files, and then build. Watch the magic happen. They do <a href=\"http://docs.xamarin.com/guides/android/advanced_topics/java_integration_overview/binding_a_java_library_(.jar)/\">note</a> that you sometimes need to do some configuration for certain libraries, however I had no issues with the one I tried. On top of that if you really needed to, you could access the <a href=\"http://docs.xamarin.com/guides/android/advanced_topics/java_integration_overview/working_with_jni/\">Java Native Interface</a> for even more power.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1392706716398,"created_by":1,"updated_at":1393307399649,"updated_by":1,"published_at":1392709979703,"published_by":1},{"id":7,"uuid":"d8defcce-3ff4-4184-a97b-ec46b8d7eb28","title":"Xamarin For Android The Bad: (Part 2 of 4)","slug":"xamarin-for-android-the-bad-part-2-of-4","markdown":"* [Part One](https://blog.tommyparnell.com/xamarin-the-good-the-bad-and-the-ugly/)\n* Part Two\n* [Part Three](https://blog.tommyparnell.com/xamarin-for-android-the-ugly-part-3-of-4/)\n* [Part Four](https://blog.tommyparnell.com/xamarin-the-conclusion-part-4-of-4/)\n\n[Xamarin](http://xamarin.com/) is a very good platform, but like everything it has parts that are not so great.\n\n## Documentation\n\nOne thing that was really hard for me, was to find documentation that was newer than 2012. Android has made great strides with Ice Cream Sandwich, and Jelly Bean. New features such as [fragments](http://developer.android.com/guide/components/fragments.html) have breathed life into the platform.\n\nThe [Xamarin](http://xamarin.com/) documentation provides examples even with the newest features, but there is something about it that feels lacking. Almost like it was thrown together at the last minute. They have been doing webcasts to improve the knowledge out in the wild, but googling the answer to your problem just won't do. Part of the problem is that most developers write in Java, and only bigger companies can afford the [hefty license fees](https://store.xamarin.com/) that come with full support.\n\nThe user community was helpful at times, but I often found myself wandering though [GitHub](http://github.com) hoping my answer could be found in some mystical repo; Eventually having to study the full implementation to find the answer I needed.\n\n## Finding help\n\nAlthough [Xamarin](http://xamarin.com) has a forum where helpful users help each other, there are not nearly as many people coding on [Xamarin](http://xamarin.com) than regular Java. Figuring out how to get something complicated working, was a nightmare. I'd look at a Java implementation, and then try to translate it into its [Xamarin](http://xamarin.com) counterpart, which sometimes was far removed than the Java code. There are some examples of [Xamarin](http://xamarin.com) for android out there, but nothing that really delves deep into manipulating the inner workings of the phone. I saw this especially when trying to edit contacts programatically. [Xamarin](http://xamarin.com) support seemed helpful, but far too expensive for most freelance developers. This was a pretty huge put-off. If I went the Java route my questions would be answered with a simple search of [stack overflow](http://stackoverflow.com).\n\n## Boilerplate\n\nLike most things Java, Android requires a lot of boilerplate. For a developer like myself, whom avoids Java this was a problem. I would have thought that [Xamarin](http://xamarin.com/) would have abstracted out more of the boilerplate than they did. On the one had, having my code look somewhat familiar when I see Java examples was nice, but on the other hand because the API is still different often the Java versions would not be close enough to fully help. My main problem with this, is if I really wanted to write boilerplate I would have used the Java libraries myself. They did make a start for this by generating the manifest file automatically, but I feel it needs to go further to fully mature this platform as a viable alternative to Java.\n\n","html":"<ul>\n<li><a href=\"https://blog.tommyparnell.com/xamarin-the-good-the-bad-and-the-ugly/\">Part One</a></li>\n<li>Part Two</li>\n<li><a href=\"https://blog.tommyparnell.com/xamarin-for-android-the-ugly-part-3-of-4/\">Part Three</a></li>\n<li><a href=\"https://blog.tommyparnell.com/xamarin-the-conclusion-part-4-of-4/\">Part Four</a></li>\n</ul>\n\n<p><a href=\"http://xamarin.com/\">Xamarin</a> is a very good platform, but like everything it has parts that are not so great.</p>\n\n<h2 id=\"documentation\">Documentation</h2>\n\n<p>One thing that was really hard for me, was to find documentation that was newer than 2012. Android has made great strides with Ice Cream Sandwich, and Jelly Bean. New features such as <a href=\"http://developer.android.com/guide/components/fragments.html\">fragments</a> have breathed life into the platform.</p>\n\n<p>The <a href=\"http://xamarin.com/\">Xamarin</a> documentation provides examples even with the newest features, but there is something about it that feels lacking. Almost like it was thrown together at the last minute. They have been doing webcasts to improve the knowledge out in the wild, but googling the answer to your problem just won't do. Part of the problem is that most developers write in Java, and only bigger companies can afford the <a href=\"https://store.xamarin.com/\">hefty license fees</a> that come with full support.</p>\n\n<p>The user community was helpful at times, but I often found myself wandering though <a href=\"http://github.com\">GitHub</a> hoping my answer could be found in some mystical repo; Eventually having to study the full implementation to find the answer I needed.</p>\n\n<h2 id=\"findinghelp\">Finding help</h2>\n\n<p>Although <a href=\"http://xamarin.com\">Xamarin</a> has a forum where helpful users help each other, there are not nearly as many people coding on <a href=\"http://xamarin.com\">Xamarin</a> than regular Java. Figuring out how to get something complicated working, was a nightmare. I'd look at a Java implementation, and then try to translate it into its <a href=\"http://xamarin.com\">Xamarin</a> counterpart, which sometimes was far removed than the Java code. There are some examples of <a href=\"http://xamarin.com\">Xamarin</a> for android out there, but nothing that really delves deep into manipulating the inner workings of the phone. I saw this especially when trying to edit contacts programatically. <a href=\"http://xamarin.com\">Xamarin</a> support seemed helpful, but far too expensive for most freelance developers. This was a pretty huge put-off. If I went the Java route my questions would be answered with a simple search of <a href=\"http://stackoverflow.com\">stack overflow</a>.</p>\n\n<h2 id=\"boilerplate\">Boilerplate</h2>\n\n<p>Like most things Java, Android requires a lot of boilerplate. For a developer like myself, whom avoids Java this was a problem. I would have thought that <a href=\"http://xamarin.com/\">Xamarin</a> would have abstracted out more of the boilerplate than they did. On the one had, having my code look somewhat familiar when I see Java examples was nice, but on the other hand because the API is still different often the Java versions would not be close enough to fully help. My main problem with this, is if I really wanted to write boilerplate I would have used the Java libraries myself. They did make a start for this by generating the manifest file automatically, but I feel it needs to go further to fully mature this platform as a viable alternative to Java.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1392710083192,"created_by":1,"updated_at":1396408681810,"updated_by":1,"published_at":1392778700920,"published_by":1},{"id":8,"uuid":"bab211a0-8784-4724-aeac-07bf396399d5","title":"Xamarin For Android The Ugly: (Part 3 of 4)","slug":"xamarin-for-android-the-ugly-part-3-of-4","markdown":"* [Part One](https://blog.tommyparnell.com/xamarin-the-good-the-bad-and-the-ugly/)\n* [Part Two](http://blog.tommyparnell.com/xamarin-for-android-the-bad-part-2-of-4/)\n* Part Three\n* [Part Four](https://blog.tommyparnell.com/xamarin-the-conclusion-part-4-of-4/)\n\nI had some problems with Xamarin. Somethings are ugly, but with plastic surgery almost anything can become beautiful.\n\n## Components\n\nXamarin has its own software packages available for download. I tried a lot of them out, some were good others not so much. One of my biggest gripes was that Google Play Services currently has a [bug](http://stackoverflow.com/questions/20125720/xamarin-android-builds-deployments-are-very-slow-how-to-speed-them-up) that makes builds **really** slow. Other packages were either genius, or were simply unimpressive. The components have their own package manager, and it does do a decent job of keeping them in order. I have to admit though Xamarin has its own set of componants that do [in-app billing](http://components.xamarin.com/gettingstarted/xamarin.inappbilling), and [access phone data](http://components.xamarin.com/view/xamarin.mobile) without having to lift much of a finger.\n\n{<1>}![Moving at the build speed of Play Services](/content/images/2014/Feb/turtle_Alan_Rees.jpg)\n\n### Component Documentation\n\nA real put down is that only some of the components have adequate documentation. For instance for me to get [admob](http://www.google.com/ads/admob/) working with play services; I had to look at the Java documentation, and try to figure out how its supposed to be done on Xamarin. This wasn't to difficult, but admob is well used. I would have assumed the documentation would have covered it, but couldn't find anything.\n\n## Visual Studio Designer\n\nThe Visual studio designer for Android at first seemed like the best thing since sliced bread! I was able to get a UI up and running in no time. Making my app work for tablets, and mobile phones alike was simple. However, once in a while it would be stubborn, and stop working. I'm not sure if it was something I was doing, but I felt like it would bomb out and I would have to restore the XAML file to continue. \n\nThe editor really isn't great for designing ListViews, working with fragments, or making something that will scale easily. Often it made things exact pixel widths instead of using dots per inch. To keep it short, I still had to do plenty of editing of the source manually (which was not too bad). Making the theme stick on the default view was a pain, until I realized that I could ignore the editor, and decorate my MainActivity with the theme I wanted to use.\n\n<pre>[Activity(Label = \"Label\", MainLauncher = true, Icon = \"@drawable/Icon\", Theme = \"@android:style/Theme.Holo.Light\")]</pre>","html":"<ul>\n<li><a href=\"https://blog.tommyparnell.com/xamarin-the-good-the-bad-and-the-ugly/\">Part One</a></li>\n<li><a href=\"http://blog.tommyparnell.com/xamarin-for-android-the-bad-part-2-of-4/\">Part Two</a></li>\n<li>Part Three</li>\n<li><a href=\"https://blog.tommyparnell.com/xamarin-the-conclusion-part-4-of-4/\">Part Four</a></li>\n</ul>\n\n<p>I had some problems with Xamarin. Somethings are ugly, but with plastic surgery almost anything can become beautiful.</p>\n\n<h2 id=\"components\">Components</h2>\n\n<p>Xamarin has its own software packages available for download. I tried a lot of them out, some were good others not so much. One of my biggest gripes was that Google Play Services currently has a <a href=\"http://stackoverflow.com/questions/20125720/xamarin-android-builds-deployments-are-very-slow-how-to-speed-them-up\">bug</a> that makes builds <strong>really</strong> slow. Other packages were either genius, or were simply unimpressive. The components have their own package manager, and it does do a decent job of keeping them in order. I have to admit though Xamarin has its own set of componants that do <a href=\"http://components.xamarin.com/gettingstarted/xamarin.inappbilling\">in-app billing</a>, and <a href=\"http://components.xamarin.com/view/xamarin.mobile\">access phone data</a> without having to lift much of a finger.</p>\n\n<p><img src=\"/content/images/2014/Feb/turtle_Alan_Rees.jpg\" alt=\"Moving at the build speed of Play Services\" /></p>\n\n<h3 id=\"componentdocumentation\">Component Documentation</h3>\n\n<p>A real put down is that only some of the components have adequate documentation. For instance for me to get <a href=\"http://www.google.com/ads/admob/\">admob</a> working with play services; I had to look at the Java documentation, and try to figure out how its supposed to be done on Xamarin. This wasn't to difficult, but admob is well used. I would have assumed the documentation would have covered it, but couldn't find anything.</p>\n\n<h2 id=\"visualstudiodesigner\">Visual Studio Designer</h2>\n\n<p>The Visual studio designer for Android at first seemed like the best thing since sliced bread! I was able to get a UI up and running in no time. Making my app work for tablets, and mobile phones alike was simple. However, once in a while it would be stubborn, and stop working. I'm not sure if it was something I was doing, but I felt like it would bomb out and I would have to restore the XAML file to continue. </p>\n\n<p>The editor really isn't great for designing ListViews, working with fragments, or making something that will scale easily. Often it made things exact pixel widths instead of using dots per inch. To keep it short, I still had to do plenty of editing of the source manually (which was not too bad). Making the theme stick on the default view was a pain, until I realized that I could ignore the editor, and decorate my MainActivity with the theme I wanted to use.</p>\n\n<pre>[Activity(Label = \"Label\", MainLauncher = true, Icon = \"@drawable/Icon\", Theme = \"@android:style/Theme.Holo.Light\")]</pre>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1392711377666,"created_by":1,"updated_at":1392920128284,"updated_by":1,"published_at":1392889543578,"published_by":1},{"id":9,"uuid":"f27c5d1a-363b-4d68-b1ed-7e0799126e39","title":"Xamarin For Android The Conclusion: (Part 4 of 4)","slug":"xamarin-the-conclusion-part-4-of-4","markdown":"* [Part One](https://blog.tommyparnell.com/xamarin-the-good-the-bad-and-the-ugly/)\n* [Part Two](http://blog.tommyparnell.com/xamarin-for-android-the-bad-part-2-of-4/)\n* [Part Three](https://blog.tommyparnell.com/xamarin-for-android-the-ugly-part-3-of-4/)\n* Part Four\n\nWell verdict is in boys, and girls. Personally, I thought the platform needs to mature more. For those people who can pay for the business edition ($1000 USD/developer), and really prefer c#; then go for it. For most of us that can either do c# or Java; you may want to stick with Java. \n\n## C# vs. Java for Android\n\nEssentially [Xamarin](http://Xamarin.com)  is a competing product with using Java. I felt that the hefty price tag, and the lack of free support means the ROI for [Xamarin](http://Xamarin.com)  will be low.\n\n>If [Xamarin](http://Xamarin.com)  provided more in the way of automation tools, and documentation; it would be the clear winner\n\nThe fact is going straight to Java for most people is probably a must. Even if you are more comfortable with c#, finding help on the internet is much easier. As the platform matures, and more features are added hopefully things will change.\n\n## License cost deterrent\n\nOne of my biggest gripes with [Xamarin](http://Xamarin.com)  is the very inflexible [license schemes](https://store.xamarin.com/). You can get by with the $300 indie edition, but it is pretty clear they want people to go the $1000 business edition route.\n\n>The biggest deterrent to the [Xamarin](http://Xamarin.com)  platform is the high cost of licensing.\n\nWith no sliding scale prices based on organization size, or project scope [Xamarin](http://Xamarin.com)  is a tough sell *(especially for open source projects)*.\n\n### Student Discount\n\nXamarin, does provide a student discount. They give 90% off for enterprise edition, and for those of you whom go to school this is almost a must buy. You could probably make it back with this simple formula. \n\n>Flappy bird-like animal + Mario pipes + admob = $$$\n\n## Verdict\n\nPersonally I like [Xamarin](http://Xamarin.com)  platform. The ability to re-use code for multiple mobile platforms can be helpful. For most of us tinkerers out there [Android Studio](http://developer.android.com/sdk/installing/studio.html) is probably enough. For serious businesses, with a major focus on c#; [Xamarin](http://Xamarin.com)  is probably the prefered method of development.\n\n### Room for improvement\n\nBefore I can fully back [Xamarin](http://Xamarin.com)  I'd like to see better componants that provide more mobile platform abstraction, increased automation tools (visual studio macros could help here), and better documentation. From the activity of there web pages, I suspect all of these things are coming.","html":"<ul>\n<li><a href=\"https://blog.tommyparnell.com/xamarin-the-good-the-bad-and-the-ugly/\">Part One</a></li>\n<li><a href=\"http://blog.tommyparnell.com/xamarin-for-android-the-bad-part-2-of-4/\">Part Two</a></li>\n<li><a href=\"https://blog.tommyparnell.com/xamarin-for-android-the-ugly-part-3-of-4/\">Part Three</a></li>\n<li>Part Four</li>\n</ul>\n\n<p>Well verdict is in boys, and girls. Personally, I thought the platform needs to mature more. For those people who can pay for the business edition ($1000 USD/developer), and really prefer c#; then go for it. For most of us that can either do c# or Java; you may want to stick with Java. </p>\n\n<h2 id=\"cvsjavaforandroid\">C# vs. Java for Android</h2>\n\n<p>Essentially <a href=\"http://Xamarin.com\">Xamarin</a>  is a competing product with using Java. I felt that the hefty price tag, and the lack of free support means the ROI for <a href=\"http://Xamarin.com\">Xamarin</a>  will be low.</p>\n\n<blockquote>\n  <p>If <a href=\"http://Xamarin.com\">Xamarin</a>  provided more in the way of automation tools, and documentation; it would be the clear winner</p>\n</blockquote>\n\n<p>The fact is going straight to Java for most people is probably a must. Even if you are more comfortable with c#, finding help on the internet is much easier. As the platform matures, and more features are added hopefully things will change.</p>\n\n<h2 id=\"licensecostdeterrent\">License cost deterrent</h2>\n\n<p>One of my biggest gripes with <a href=\"http://Xamarin.com\">Xamarin</a>  is the very inflexible <a href=\"https://store.xamarin.com/\">license schemes</a>. You can get by with the $300 indie edition, but it is pretty clear they want people to go the $1000 business edition route.</p>\n\n<blockquote>\n  <p>The biggest deterrent to the <a href=\"http://Xamarin.com\">Xamarin</a>  platform is the high cost of licensing.</p>\n</blockquote>\n\n<p>With no sliding scale prices based on organization size, or project scope <a href=\"http://Xamarin.com\">Xamarin</a>  is a tough sell <em>(especially for open source projects)</em>.</p>\n\n<h3 id=\"studentdiscount\">Student Discount</h3>\n\n<p>Xamarin, does provide a student discount. They give 90% off for enterprise edition, and for those of you whom go to school this is almost a must buy. You could probably make it back with this simple formula. </p>\n\n<blockquote>\n  <p>Flappy bird-like animal + Mario pipes + admob = $$$</p>\n</blockquote>\n\n<h2 id=\"verdict\">Verdict</h2>\n\n<p>Personally I like <a href=\"http://Xamarin.com\">Xamarin</a>  platform. The ability to re-use code for multiple mobile platforms can be helpful. For most of us tinkerers out there <a href=\"http://developer.android.com/sdk/installing/studio.html\">Android Studio</a> is probably enough. For serious businesses, with a major focus on c#; <a href=\"http://Xamarin.com\">Xamarin</a>  is probably the prefered method of development.</p>\n\n<h3 id=\"roomforimprovement\">Room for improvement</h3>\n\n<p>Before I can fully back <a href=\"http://Xamarin.com\">Xamarin</a>  I'd like to see better componants that provide more mobile platform abstraction, increased automation tools (visual studio macros could help here), and better documentation. From the activity of there web pages, I suspect all of these things are coming.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1392759234600,"created_by":1,"updated_at":1392949802895,"updated_by":1,"published_at":1392889554294,"published_by":1},{"id":10,"uuid":"3f4db213-6dab-462e-a51e-e17a7d69ec0c","title":"Setting up Secured (https:) Browsing with Nginx","slug":"setting-up-secured-https-browsing-with-nginx","markdown":"","html":"","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1392890390133,"created_by":1,"updated_at":1392890390398,"updated_by":1,"published_at":null,"published_by":null},{"id":11,"uuid":"5fccd796-da58-4d84-969d-37556fc58b25","title":"You're doing it wrong (software testing)","slug":"softwaretesting","markdown":"One of the major systems that will stop you from losing money is your testing environment. The ability to properly test patches before they are put into production is a must. \n\n\n## Hardware Symmetry\n\n> Our test environment does not have nearly the same CPU/Memory that production servers have\n\nThe discrepancy between test and and prod adds unnecessary variables to your testing. Your testing environment needs to be a mirror hardware-wise as your production environment. The ability to accurately test the memory increases, and CPU impact is critical to the success of your code in production.\n\nFor instance if you have multiple worker processes in production, that each hold a cache of data and that cache is increased by 2GBb. This may be seen in a non-prod environment as a small increase. However, if your production environment is running 4 times the worker processes as your non prod the small 2GB rise becomes 8GB very quickly. \n\nThis large increase in memory usage could destabilize your platform (or not), but the unpredictability of this fact is scary. Tests should be [scientific](http://en.wikipedia.org/wiki/Scientific_method), and a radical difference between the two environments causes unnecessary variables.\n\n## Testing in prod as a last resort\n\n>We can't test this in test, because our *(insert discrepancy of the day)* in test is not good enough\n\nIf you suspect that a patch is causing performance problems, but you are unable to fully test it in a non-prod environment. Try to get the right hardware provisioned, or see what can be done for effective testing. The cost of serious performance degradation in production can be far worse than getting the right hardware, or pushing back at other developers.\n\nIf you have to test in prod try to patch a few servers and see what happens. Going all the way can also be more costly, then applying something on a few machines and rolling back. Make sure that potentially destructive tests are performed when all teams are in the office. Provide communication, and get everyone involved. If testing in prod requires a pow-wow of 10+ people you will quickly see those kinds of tests end fast.\n\n{<1>}![](/content/images/2014/Feb/9689481.jpg)\n\n\n\n## Learn from your mistakes\n\n>Continuous Improvement is not only an improvement of code, but also an evolution of philosophies. ~[Norm Maclennan](https://blog.normmaclennan.com)\n\nWhen problems occur in prod, you sometimes hear why did QA not catch this? When really the question should be, why was this not caught in test. One of the huge differences between these two statements is the first tries to blame a person, while the other constructively finds ways to improve and evolve.\n\n>Everyone in the organization should take ownership of testing, and testing environments. ~ [Tommy Parnell](http://blog.tommyparnell.com)\n\nThis is a huge key to success. Realize that if you write code, you probably write test cases. You should make sure you understand the release process, how code is tested, and how QA performs tests. Making sure QA can accurately test your code will ultimately prove beneficial to both you, your team, and your organization.\n\n##Inconsistent Releases\n\nReleases to test should be performed in the same manor as releases to prod. Any deviation from the documented process should be addressed immediately. Code changes should be managed properly, and scientifically for formal testing to be effective. \n\nPatches should also follow a consistent pattern from one software upgrade to the next. Hearing *this patch is going to be weird* from a Release Engineer is basically a red flag for *this is going to go wrong, but we don't want to take the blame for it*\n\n\n\n\n\n\n","html":"<p>One of the major systems that will stop you from losing money is your testing environment. The ability to properly test patches before they are put into production is a must. </p>\n\n<h2 id=\"hardwaresymmetry\">Hardware Symmetry</h2>\n\n<blockquote>\n  <p>Our test environment does not have nearly the same CPU/Memory that production servers have</p>\n</blockquote>\n\n<p>The discrepancy between test and and prod adds unnecessary variables to your testing. Your testing environment needs to be a mirror hardware-wise as your production environment. The ability to accurately test the memory increases, and CPU impact is critical to the success of your code in production.</p>\n\n<p>For instance if you have multiple worker processes in production, that each hold a cache of data and that cache is increased by 2GBb. This may be seen in a non-prod environment as a small increase. However, if your production environment is running 4 times the worker processes as your non prod the small 2GB rise becomes 8GB very quickly. </p>\n\n<p>This large increase in memory usage could destabilize your platform (or not), but the unpredictability of this fact is scary. Tests should be <a href=\"http://en.wikipedia.org/wiki/Scientific_method\">scientific</a>, and a radical difference between the two environments causes unnecessary variables.</p>\n\n<h2 id=\"testinginprodasalastresort\">Testing in prod as a last resort</h2>\n\n<blockquote>\n  <p>We can't test this in test, because our <em>(insert discrepancy of the day)</em> in test is not good enough</p>\n</blockquote>\n\n<p>If you suspect that a patch is causing performance problems, but you are unable to fully test it in a non-prod environment. Try to get the right hardware provisioned, or see what can be done for effective testing. The cost of serious performance degradation in production can be far worse than getting the right hardware, or pushing back at other developers.</p>\n\n<p>If you have to test in prod try to patch a few servers and see what happens. Going all the way can also be more costly, then applying something on a few machines and rolling back. Make sure that potentially destructive tests are performed when all teams are in the office. Provide communication, and get everyone involved. If testing in prod requires a pow-wow of 10+ people you will quickly see those kinds of tests end fast.</p>\n\n<p><img src=\"/content/images/2014/Feb/9689481.jpg\" alt=\"\" /></p>\n\n<h2 id=\"learnfromyourmistakes\">Learn from your mistakes</h2>\n\n<blockquote>\n  <p>Continuous Improvement is not only an improvement of code, but also an evolution of philosophies. ~<a href=\"https://blog.normmaclennan.com\">Norm Maclennan</a></p>\n</blockquote>\n\n<p>When problems occur in prod, you sometimes hear why did QA not catch this? When really the question should be, why was this not caught in test. One of the huge differences between these two statements is the first tries to blame a person, while the other constructively finds ways to improve and evolve.</p>\n\n<blockquote>\n  <p>Everyone in the organization should take ownership of testing, and testing environments. ~ <a href=\"http://blog.tommyparnell.com\">Tommy Parnell</a></p>\n</blockquote>\n\n<p>This is a huge key to success. Realize that if you write code, you probably write test cases. You should make sure you understand the release process, how code is tested, and how QA performs tests. Making sure QA can accurately test your code will ultimately prove beneficial to both you, your team, and your organization.</p>\n\n<h2 id=\"inconsistentreleases\">Inconsistent Releases</h2>\n\n<p>Releases to test should be performed in the same manor as releases to prod. Any deviation from the documented process should be addressed immediately. Code changes should be managed properly, and scientifically for formal testing to be effective. </p>\n\n<p>Patches should also follow a consistent pattern from one software upgrade to the next. Hearing <em>this patch is going to be weird</em> from a Release Engineer is basically a red flag for <em>this is going to go wrong, but we don't want to take the blame for it</em></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1392890457733,"created_by":1,"updated_at":1393076327195,"updated_by":1,"published_at":1393050860483,"published_by":1},{"id":12,"uuid":"6fb7fde1-4035-484e-b461-30fbda837556","title":"Getting started with backbone.js","slug":"getting-started-with-backbone-js","markdown":"","html":"","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1392920222656,"created_by":1,"updated_at":1392920222656,"updated_by":1,"published_at":null,"published_by":null},{"id":13,"uuid":"d035f0d5-048b-44bb-93c3-9ba8a17d55eb","title":"Parsing, and Nesting Models in backbone.js","slug":"nested-models-in-backbone-js","markdown":"\n## The Parse Function\nThe parse function allows you to do some pre-processing of the data sent from the server before the model is created. Parse should return an object containing the values that will make up this models attribues. This is called after the fetch command has recieved the data, but before the response is put into the model. The example below parses dates to local time before adding them to the model using  [moment](http://momentjs.com/).\n\n```javascript\n\nnamespace.Model = Backbone.Model.extend({\n    urlRoot: '/api/',\n    parse: function(response, options){\n    \tvar attr = {};\n        attr.date = moment().utc(response.date).local()  \n        attr.OtherData = response.OtherData\n        return attr;\n    }\n});\n```\n\n##Nesting Models (aka model within a model)\n\nWe will use the same parse function as above to create models within this model from data retrieved by the server. You could even loop through an array's keys and values to convert them to a model if need be.\n\n\n```javascript\n\nnamespace.Model = Backbone.Model.extend({\n    urlRoot: '/api/',\n    parse: function(response, options){\n    \tvar attr = {};\n        var submodel = new namespace.otherModel({value1: response.subModelArray.value1, value2: response.subModelArray.value2 });\n        attr.SubModel = submodel;\n        return attr;\n    }\n});\n```","html":"<h2 id=\"theparsefunction\">The Parse Function</h2>\n\n<p>The parse function allows you to do some pre-processing of the data sent from the server before the model is created. Parse should return an object containing the values that will make up this models attribues. This is called after the fetch command has recieved the data, but before the response is put into the model. The example below parses dates to local time before adding them to the model using  <a href=\"http://momentjs.com/\">moment</a>.</p>\n\n<pre><code class=\"javascript\">namespace.Model = Backbone.Model.extend({  \n    urlRoot: '/api/',\n    parse: function(response, options){\n        var attr = {};\n        attr.date = moment().utc(response.date).local()  \n        attr.OtherData = response.OtherData\n        return attr;\n    }\n});\n</code></pre>\n\n<h2 id=\"nestingmodelsakamodelwithinamodel\">Nesting Models (aka model within a model)</h2>\n\n<p>We will use the same parse function as above to create models within this model from data retrieved by the server. You could even loop through an array's keys and values to convert them to a model if need be.</p>\n\n<pre><code class=\"javascript\">namespace.Model = Backbone.Model.extend({  \n    urlRoot: '/api/',\n    parse: function(response, options){\n        var attr = {};\n        var submodel = new namespace.otherModel({value1: response.subModelArray.value1, value2: response.subModelArray.value2 });\n        attr.SubModel = submodel;\n        return attr;\n    }\n});\n</code></pre>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1393226331174,"created_by":1,"updated_at":1393810124082,"updated_by":1,"published_at":1393287783893,"published_by":1},{"id":14,"uuid":"39797acd-b23e-4075-9006-e78e55babe07","title":"Providing feedback (without being an asshole)...","slug":"providing-feedback-without-being-an-asshole","markdown":"<span style=\"float: right\">[<i class=\"fa fa-hand-o-right\"></i> Recieving feedback](https://blog.tommyparnell.com/receiving-feedback-without-being-an-asshole/)</span><br />\n\nGiving and receiving feedback, allows us to maintain our strengths while improving our weaknesses. There are two major types of feedback, constructive, and reinforcing. Constructive feedback is asking someone to change behavior, while reinforcing is acknowledging good behavior.\n\n\n\n## Giving Constructive Feedback\n\nConstructive feedback is the hardest type of feedback to deliver. This is the feedback where you are asking someone to change their behavior. You may be delivering feedback that is for skill, or behavior change. \n\n> feedback, it is not yelling at someone for 20 minutes, nor is it judging them. Feedback helps improve someones weakness, someones professional relationships, and their stance in the organization.\n\n### The Delivery \n\nTo start ask the person to talk in private. This gives the conversation some level of privacy, and will make this person less embarrassed. Thank them for sitting down and talking to you. Once the formalities are over, begin paraphrasing the offending behavior. \n\n>Do not pull other people into the conversation. Stating Stacie has this same issue with this person, puts them on the defensive. Give them your perspective only.\n\nAfter you have paraphrased the offending behavior from your point of view, give examples of how this behavior affects yourself negatively, and possibly the team. This is the chance to really voice why this behavior needs to stop. Make sure they fully understand your perspectives, and why they are being given this feedback. \n\nLet them respond to your feedback. Fully listen to their explinations, and allow them to ask questions. Their explanation can help bridge you're differences. Toward the end of the conversation provide the person with ways how they can stop, or how they can try to stop. Also let them know what the consequences would be (if any) if they continue to do this behavior. **Always** give this person a chance to talk, as they gave you. Fully acknowledge their perspectives, ask questions about it, and if you disagree let them know why.\n\nRemember this is a person you are talking to. People should still be talked to with dignity, and respect no matter what. This could be a simple misunderstanding, for which you wouldn't want to upset anyone over.\n\n\n## Giving Reinforcing Feedback\nReinforcing feedback is the kind of feedback that is easy to deliver. This acknowledges the value that person's behavior brings to the organization. \n\n### The Delivery\n\n>Be specific in your feedback. Just remember you are reinforcing a positive behavior, not touting how *genius* they are. \n\nThis kind of feedback can be addressed to both the employee's manager (if that person is not you), and the employee directly. This should start with a summary of what the employee did that was great, how it affected you, and how it could potentially affect others in a positive manor. Don't ever compare the person to another (ie. this guy is amazing as *insert employee of the month*). Just remember saying *hard-worker, always in the office, etc* is not constructive to the conversation, and should be avoided. \n\n\n\n## Being asked for Feedback by your boss\n\nSometimes feedback is asked of you by your boss. This person is coming to you, asking how he/she is doing at his/her job. This is not the time to play suck-up, this is the time to be honest. Provide real feedback using the techniques I have outlined above. Letting them know what they could change is the kind of advise they are looking for.\n\n## Who should I give feedback to?\n\nUsually it is appropriate for managers to give feedback to subordinates. As long as the culture of your company is not terrible; You should provide feedback to your peers, subordinates, and managers alike. Giving feedback to your boss, allows this person to see things from your perspective, which could be invaluable to someone running a large team. Remember your boss is just as human as you. He/she could be doing the wrong thing over and over again without realizing. Providing him feedback could ultimately improve your working environment, your team, and your companies culture as a whole. \n\n\n\n\n\n","html":"<p><span style=\"float: right\"><a href=\"https://blog.tommyparnell.com/receiving-feedback-without-being-an-asshole/\"><i class=\"fa fa-hand-o-right\"></i> Recieving feedback</a></span><br /></p>\n\n<p>Giving and receiving feedback, allows us to maintain our strengths while improving our weaknesses. There are two major types of feedback, constructive, and reinforcing. Constructive feedback is asking someone to change behavior, while reinforcing is acknowledging good behavior.</p>\n\n<h2 id=\"givingconstructivefeedback\">Giving Constructive Feedback</h2>\n\n<p>Constructive feedback is the hardest type of feedback to deliver. This is the feedback where you are asking someone to change their behavior. You may be delivering feedback that is for skill, or behavior change. </p>\n\n<blockquote>\n  <p>feedback, it is not yelling at someone for 20 minutes, nor is it judging them. Feedback helps improve someones weakness, someones professional relationships, and their stance in the organization.</p>\n</blockquote>\n\n<h3 id=\"thedelivery\">The Delivery</h3>\n\n<p>To start ask the person to talk in private. This gives the conversation some level of privacy, and will make this person less embarrassed. Thank them for sitting down and talking to you. Once the formalities are over, begin paraphrasing the offending behavior. </p>\n\n<blockquote>\n  <p>Do not pull other people into the conversation. Stating Stacie has this same issue with this person, puts them on the defensive. Give them your perspective only.</p>\n</blockquote>\n\n<p>After you have paraphrased the offending behavior from your point of view, give examples of how this behavior affects yourself negatively, and possibly the team. This is the chance to really voice why this behavior needs to stop. Make sure they fully understand your perspectives, and why they are being given this feedback. </p>\n\n<p>Let them respond to your feedback. Fully listen to their explinations, and allow them to ask questions. Their explanation can help bridge you're differences. Toward the end of the conversation provide the person with ways how they can stop, or how they can try to stop. Also let them know what the consequences would be (if any) if they continue to do this behavior. <strong>Always</strong> give this person a chance to talk, as they gave you. Fully acknowledge their perspectives, ask questions about it, and if you disagree let them know why.</p>\n\n<p>Remember this is a person you are talking to. People should still be talked to with dignity, and respect no matter what. This could be a simple misunderstanding, for which you wouldn't want to upset anyone over.</p>\n\n<h2 id=\"givingreinforcingfeedback\">Giving Reinforcing Feedback</h2>\n\n<p>Reinforcing feedback is the kind of feedback that is easy to deliver. This acknowledges the value that person's behavior brings to the organization. </p>\n\n<h3 id=\"thedelivery\">The Delivery</h3>\n\n<blockquote>\n  <p>Be specific in your feedback. Just remember you are reinforcing a positive behavior, not touting how <em>genius</em> they are. </p>\n</blockquote>\n\n<p>This kind of feedback can be addressed to both the employee's manager (if that person is not you), and the employee directly. This should start with a summary of what the employee did that was great, how it affected you, and how it could potentially affect others in a positive manor. Don't ever compare the person to another (ie. this guy is amazing as <em>insert employee of the month</em>). Just remember saying <em>hard-worker, always in the office, etc</em> is not constructive to the conversation, and should be avoided. </p>\n\n<h2 id=\"beingaskedforfeedbackbyyourboss\">Being asked for Feedback by your boss</h2>\n\n<p>Sometimes feedback is asked of you by your boss. This person is coming to you, asking how he/she is doing at his/her job. This is not the time to play suck-up, this is the time to be honest. Provide real feedback using the techniques I have outlined above. Letting them know what they could change is the kind of advise they are looking for.</p>\n\n<h2 id=\"whoshouldigivefeedbackto\">Who should I give feedback to?</h2>\n\n<p>Usually it is appropriate for managers to give feedback to subordinates. As long as the culture of your company is not terrible; You should provide feedback to your peers, subordinates, and managers alike. Giving feedback to your boss, allows this person to see things from your perspective, which could be invaluable to someone running a large team. Remember your boss is just as human as you. He/she could be doing the wrong thing over and over again without realizing. Providing him feedback could ultimately improve your working environment, your team, and your companies culture as a whole. </p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1393288166214,"created_by":1,"updated_at":1394128311853,"updated_by":1,"published_at":1393795744369,"published_by":1},{"id":15,"uuid":"40ceabe8-7545-40eb-923a-053ef051d5db","title":"iPhone or Android (From a guy living with both)","slug":"iphone-or-android-from-a-guy-living-with-both","markdown":"I know, I know the very first question you ask is going to be *why do you have two phones*, the answer being One is for work, the other is for my personal life. Now that we are done with that subject, we can get on with the review...\n\n## Warning: I am a self-Proclaimed Android Fan-boy\n\nBefore I really get into it, I will warn you all that I am apart of the Android User Master Race. Some bias opinion **will** occur.\n\n## What phones?\n\nI will mostly be reviewing the [iPhone 5c](http://www.apple.com/iphone-5c/), against the [Nexus 5](https://play.google.com/store/devices/details/Nexus_5_16GB_White?id=nexus_5_white_16gb&hl=en). \n\n## What no flashy graphs?\n\nUnlike most reviews this wont have a bunch of data touting the disk read speeds during mid-day under controlled duress. This is a simple review of my experience with the two devices. \n\n## Build Quality <i class=\"fa fa-apple\"></i>\n\n### iPhone 5c \nThe first time I held the 5c, I thought it felt like a kids toy. Although that feeling still lingers with me today, I have noticed since that the quality of the build is fantastic. The buttons feel like they were made to last 1000 years, and the plastic does not feel cheap. I get the feeling it would survive a nasty fall. Although the phone is small, it does not make me wish I had a bigger one. On a side note I was more blown away by the iPhone headphones. These ear buds are actually great value for $30 (free with iPhone). They sound amazing, and they can take a beating. I plug them into my Nexus 5 to make phone calls a lot.\n\n### Nexus 5\n\nThe Nexus 5 features a much bigger screen than the iPhone 5c, but not so large it does not make it harder to handle. The white back looks very nice, and the buttons feel solid. Power button on the side is my preference. My one gripe with it, is when you hold it you don't get the feeling you are holding the greatness of [google](http://google.com) in your hand. I'm not sure what hidden element I am talking about, but it feels pretty plain as you hold it. That being said I do feel like I can bend space-time with the phone.\n\n## Operating System <i class=\"fa fa-android\"></i>\n\n### iPhone 5c\n\nWe all know iOS is pretty much amazing to those who love apple. For me I have some gripes.\n\n* iPhone keyboard always shows capitalized letters, regardless if you are typing lower case or upper case\n* I wish my home page was not the app tray\n* The notifications pull down menu is not intuative, and sometimes clicking the close button is unresponsive\n\n### Nexus 5\n\nAndroid OS is pretty awesome as well but there are some flaws. On a side note I'd like to say that touchwiz and other 3rd party customizations really make Android suck. The one thing that really impresses me about Android is the notifications menu. The menu is clean, and only notifies you on things you care about. If you want widgets, put 'em on the home screen. There is a real seperation of concerns in Android that feels missing in iPhone.\n\n* Some of the home screen widgets really eat battery life\n* Some of the older Anroid applications feel out of place on newer devices *ie not using the holo theme*\n\n\n## Finding Applications <i class=\"fa fa-apple\"></i>\n\n\nI got to give this one to apple. I'm not sure of the Apple stores size, but I felt the store contained better quality apps. The Android app store is really good if you want [Confucius quotes](https://play.google.com/store/apps/details?id=com.Quotes.ConfuciusQuotes&hl=en), apps made in [3 days or less](https://play.google.com/store/apps/details?id=ultimategravatarsync.ultimategravatarsyncfree&hl=en), or apps that show hot asian babes. [Apple](http://www.apple.com/) has done a good job at keeping the quality high. I never found an app that had no value to the phone. \n\n## Battery <i class=\"fa fa-apple\"></i>\n\nThe iPhones battery is the most impressive part. The Nexus 5 will give me a full day, but will need a charge at the end of the day. The 5c's battery usage is very low. the phone will go all day, and most of the night on one change. The iPhone also charges much faster than the Nexus 5. The one thing that pissed me off, was the Apple charging cable costs $19. I really like Android's use of the universal microUSB.\n\n## Siri vs Google Now <i class=\"fa fa-android\"></i>\n\nI'm not going into to much depth here, but as a user I much prefered Google Now. Although Siri had some nice qualities, I felt like google now was more accurate on searching, and provided better context in my queries. Google Now feels much snappier, and responds only when you need it *(ok google)*. \n\n## Trend Factor <i class=\"fa fa-android\"></i>\n\nI think apple always use to win this category, however with google wallet and NFC payment I have to give this to the Nexus 5. I have baught many things with my phone, and every time people are amazed. When you are at McDonalds and the only thing standing between you and a big Mac is a simple NFC tap, people think you are gods gift to the earth. One woman asked me out on a date after buying something at the pharmacy (I'm not kidding...it really happend). She was in utter amazement about how suave I was with my phone. Apple has really slipped in years, now more than ever people are interested in Android phones.\n\n## Verdict\n\n![Android Won](/content/images/2014/Feb/115580-1.png)\nThe iPhone, while being a real contender is far from perfect. I have give this to the Nexus 5. That being the case my dream phone would be an iPhone running Android software. I really prefer the software of Android, but retina display, and camera really makes me like the iPhone a lot. My only serious gripe with Android is the quality of the apps. However it does not override the iPhones terrible keyboard.\n\n\n","html":"<p>I know, I know the very first question you ask is going to be <em>why do you have two phones</em>, the answer being One is for work, the other is for my personal life. Now that we are done with that subject, we can get on with the review...</p>\n\n<h2 id=\"warningiamaselfproclaimedandroidfanboy\">Warning: I am a self-Proclaimed Android Fan-boy</h2>\n\n<p>Before I really get into it, I will warn you all that I am apart of the Android User Master Race. Some bias opinion <strong>will</strong> occur.</p>\n\n<h2 id=\"whatphones\">What phones?</h2>\n\n<p>I will mostly be reviewing the <a href=\"http://www.apple.com/iphone-5c/\">iPhone 5c</a>, against the <a href=\"https://play.google.com/store/devices/details/Nexus_5_16GB_White?id=nexus_5_white_16gb&amp;hl=en\">Nexus 5</a>. </p>\n\n<h2 id=\"whatnoflashygraphs\">What no flashy graphs?</h2>\n\n<p>Unlike most reviews this wont have a bunch of data touting the disk read speeds during mid-day under controlled duress. This is a simple review of my experience with the two devices. </p>\n\n<h2 id=\"buildqualityiclassfafaapplei\">Build Quality <i class=\"fa fa-apple\"></i></h2>\n\n<h3 id=\"iphone5c\">iPhone 5c</h3>\n\n<p>The first time I held the 5c, I thought it felt like a kids toy. Although that feeling still lingers with me today, I have noticed since that the quality of the build is fantastic. The buttons feel like they were made to last 1000 years, and the plastic does not feel cheap. I get the feeling it would survive a nasty fall. Although the phone is small, it does not make me wish I had a bigger one. On a side note I was more blown away by the iPhone headphones. These ear buds are actually great value for $30 (free with iPhone). They sound amazing, and they can take a beating. I plug them into my Nexus 5 to make phone calls a lot.</p>\n\n<h3 id=\"nexus5\">Nexus 5</h3>\n\n<p>The Nexus 5 features a much bigger screen than the iPhone 5c, but not so large it does not make it harder to handle. The white back looks very nice, and the buttons feel solid. Power button on the side is my preference. My one gripe with it, is when you hold it you don't get the feeling you are holding the greatness of <a href=\"http://google.com\">google</a> in your hand. I'm not sure what hidden element I am talking about, but it feels pretty plain as you hold it. That being said I do feel like I can bend space-time with the phone.</p>\n\n<h2 id=\"operatingsystemiclassfafaandroidi\">Operating System <i class=\"fa fa-android\"></i></h2>\n\n<h3 id=\"iphone5c\">iPhone 5c</h3>\n\n<p>We all know iOS is pretty much amazing to those who love apple. For me I have some gripes.</p>\n\n<ul>\n<li>iPhone keyboard always shows capitalized letters, regardless if you are typing lower case or upper case</li>\n<li>I wish my home page was not the app tray</li>\n<li>The notifications pull down menu is not intuative, and sometimes clicking the close button is unresponsive</li>\n</ul>\n\n<h3 id=\"nexus5\">Nexus 5</h3>\n\n<p>Android OS is pretty awesome as well but there are some flaws. On a side note I'd like to say that touchwiz and other 3rd party customizations really make Android suck. The one thing that really impresses me about Android is the notifications menu. The menu is clean, and only notifies you on things you care about. If you want widgets, put 'em on the home screen. There is a real seperation of concerns in Android that feels missing in iPhone.</p>\n\n<ul>\n<li>Some of the home screen widgets really eat battery life</li>\n<li>Some of the older Anroid applications feel out of place on newer devices <em>ie not using the holo theme</em></li>\n</ul>\n\n<h2 id=\"findingapplicationsiclassfafaapplei\">Finding Applications <i class=\"fa fa-apple\"></i></h2>\n\n<p>I got to give this one to apple. I'm not sure of the Apple stores size, but I felt the store contained better quality apps. The Android app store is really good if you want <a href=\"https://play.google.com/store/apps/details?id=com.Quotes.ConfuciusQuotes&amp;hl=en\">Confucius quotes</a>, apps made in <a href=\"https://play.google.com/store/apps/details?id=ultimategravatarsync.ultimategravatarsyncfree&amp;hl=en\">3 days or less</a>, or apps that show hot asian babes. <a href=\"http://www.apple.com/\">Apple</a> has done a good job at keeping the quality high. I never found an app that had no value to the phone. </p>\n\n<h2 id=\"batteryiclassfafaapplei\">Battery <i class=\"fa fa-apple\"></i></h2>\n\n<p>The iPhones battery is the most impressive part. The Nexus 5 will give me a full day, but will need a charge at the end of the day. The 5c's battery usage is very low. the phone will go all day, and most of the night on one change. The iPhone also charges much faster than the Nexus 5. The one thing that pissed me off, was the Apple charging cable costs $19. I really like Android's use of the universal microUSB.</p>\n\n<h2 id=\"sirivsgooglenowiclassfafaandroidi\">Siri vs Google Now <i class=\"fa fa-android\"></i></h2>\n\n<p>I'm not going into to much depth here, but as a user I much prefered Google Now. Although Siri had some nice qualities, I felt like google now was more accurate on searching, and provided better context in my queries. Google Now feels much snappier, and responds only when you need it <em>(ok google)</em>. </p>\n\n<h2 id=\"trendfactoriclassfafaandroidi\">Trend Factor <i class=\"fa fa-android\"></i></h2>\n\n<p>I think apple always use to win this category, however with google wallet and NFC payment I have to give this to the Nexus 5. I have baught many things with my phone, and every time people are amazed. When you are at McDonalds and the only thing standing between you and a big Mac is a simple NFC tap, people think you are gods gift to the earth. One woman asked me out on a date after buying something at the pharmacy (I'm not kidding...it really happend). She was in utter amazement about how suave I was with my phone. Apple has really slipped in years, now more than ever people are interested in Android phones.</p>\n\n<h2 id=\"verdict\">Verdict</h2>\n\n<p><img src=\"/content/images/2014/Feb/115580-1.png\" alt=\"Android Won\" />\nThe iPhone, while being a real contender is far from perfect. I have give this to the Nexus 5. That being the case my dream phone would be an iPhone running Android software. I really prefer the software of Android, but retina display, and camera really makes me like the iPhone a lot. My only serious gripe with Android is the quality of the apps. However it does not override the iPhones terrible keyboard.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1393288183478,"created_by":1,"updated_at":1393358296195,"updated_by":1,"published_at":1393306427523,"published_by":null},{"id":16,"uuid":"6de23675-05d7-4ed2-b3e3-65ae615a4e3a","title":"Setting up robots.txt for your ghost powered blog","slug":"setting-up-robots-txt-for-your-ghost-powered-blog","markdown":"Setting up your robots.txt file for your blog is easy, by adding a file called robots.txt in the root of your current themes directory.\n\n`~/blogFolder/content/theme/Casper`\n\nIf you are unfamiliar with linux, to do this simply cd to the directory and run the command `sudo vi robots.txt` Press i (for insert mode), type your entry (example farther down in this blog), press esc, then type `:wq` (w stands for write, q stands for quit). Then hit enter\n\nYou should probably point sitemap to your rss feed. Most bots (including googlebot) can use the rss feed as a sitemap\n\n```\n\nSitemap: http://yourdomain/rss\nUser-agent: *\n\n```\n\nAs a side note, in the robots.txt file you must specify the full URL to your sitemap file.","html":"<p>Setting up your robots.txt file for your blog is easy, by adding a file called robots.txt in the root of your current themes directory.</p>\n\n<p><code>~/blogFolder/content/theme/Casper</code></p>\n\n<p>If you are unfamiliar with linux, to do this simply cd to the directory and run the command <code>sudo vi robots.txt</code> Press i (for insert mode), type your entry (example farther down in this blog), press esc, then type <code>:wq</code> (w stands for write, q stands for quit). Then hit enter</p>\n\n<p>You should probably point sitemap to your rss feed. Most bots (including googlebot) can use the rss feed as a sitemap</p>\n\n<pre><code>Sitemap: http://yourdomain/rss  \nUser-agent: *\n</code></pre>\n\n<p>As a side note, in the robots.txt file you must specify the full URL to your sitemap file.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1393363386029,"created_by":1,"updated_at":1393721344189,"updated_by":1,"published_at":1393363463335,"published_by":1},{"id":17,"uuid":"526290b6-6b4f-4a9e-a967-90655754a686","title":"Setting up Nagios configurations through Puppet","slug":"setting-up-nagios-configurations-through-puppet","markdown":"","html":"","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1393629253661,"created_by":1,"updated_at":1393629253661,"updated_by":1,"published_at":null,"published_by":null},{"id":18,"uuid":"f2f1dd1e-7510-4756-9cb8-979115e7683c","title":"Installing NodeBB on CentOS 6.5","slug":"installing-nodebb-on-centos-6-5","markdown":"\n[NodeBB](https://nodebb.org/) is forum software written on [Node.js](http://nodejs.org/)\n\nThe official installation instructions are on [github](https://github.com/designcreateplay/NodeBB), but the documentation is for [Ubuntu](http://www.ubuntu.com/). \n\nTo install on CentOS follow these instructions.\n\nInstall the base software stack.\n\n```\nsudo yum update\nsudo yum groupinstall \"Development Tools\" -y\nsudo yum install nodejs git redis ImageMagick npm\n\n```\n\nNext, clone the repository.\n\n```\n cd /path/to/nodebb/install/location\n git clone git://github.com/designcreateplay/NodeBB.git nodebb\n\n```\n\nObtain npm Dependencies.\n\n```\ncd nodebb\nsudo npm install -g npm\nsudo npm install\n\n```\nStart Redis\n\n```\nsudo service redis start\n\n```\nThen run through the setup (it will prompt you for things like listening on port numbers and host-names).\n\n```\n./nodebb setup\n\n```\n\nAfter start it up.\n\n```\n./nodebb start\n\n```\n\nNow you should be able to access it in the web browser (using the config you setup earlier).","html":"<p><a href=\"https://nodebb.org/\">NodeBB</a> is forum software written on <a href=\"http://nodejs.org/\">Node.js</a></p>\n\n<p>The official installation instructions are on <a href=\"https://github.com/designcreateplay/NodeBB\">github</a>, but the documentation is for <a href=\"http://www.ubuntu.com/\">Ubuntu</a>. </p>\n\n<p>To install on CentOS follow these instructions.</p>\n\n<p>Install the base software stack.</p>\n\n<pre><code>sudo yum update  \nsudo yum groupinstall \"Development Tools\" -y  \nsudo yum install nodejs git redis ImageMagick npm\n</code></pre>\n\n<p>Next, clone the repository.</p>\n\n<pre><code> cd /path/to/nodebb/install/location\n git clone git://github.com/designcreateplay/NodeBB.git nodebb\n</code></pre>\n\n<p>Obtain npm Dependencies.</p>\n\n<pre><code>cd nodebb  \nsudo npm install -g npm  \nsudo npm install\n</code></pre>\n\n<p>Start Redis</p>\n\n<pre><code>sudo service redis start\n</code></pre>\n\n<p>Then run through the setup (it will prompt you for things like listening on port numbers and host-names).</p>\n\n<pre><code>./nodebb setup\n</code></pre>\n\n<p>After start it up.</p>\n\n<pre><code>./nodebb start\n</code></pre>\n\n<p>Now you should be able to access it in the web browser (using the config you setup earlier).</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1393701282010,"created_by":1,"updated_at":1396028883598,"updated_by":1,"published_at":1393701368854,"published_by":1},{"id":19,"uuid":"a38cacf3-d69b-4af0-bec8-96a2f9a309ff","title":"Receiving feedback (without being an asshole)...","slug":"receiving-feedback-without-being-an-asshole","markdown":"<span style=\"float: left\">[Providing feedback <i class=\"fa fa-hand-o-left\"></i>](https://blog.tommyparnell.com/providing-feedback-without-being-an-asshole/)</span><br />\n\nFeedback is a two way street if you are willing to hear your strengths reinforced, you should be able to handle what people think are your flaws.\n\n## Don't get Emotional\n\nOne of the big problems I have when providing feedback is that person often takes it far more personal than its intended. If someone has properly sat you down and asked you for a moment of your time, they are taking time out of their day, and yours. They are doing this, because they want to see your professional relationship with that person to grow and succeed. \n\n>Listen to the feedback in detail, and try to see things from their perspective.\n\n## Ask Questions\n\nYou need to ask questions here. This is how you identify what exactly the problem is and why. Also let them understand your perspective, and why you thought you were doing the right thing. Fully understand the problem at hand. Even if you disagree with the feedback, acknowledge their stance and be polite during the conversation.\n\n## Don't pull others into the conversation\nDo not try to Place blame on others, just remember these are **you're** behavior problems, not someone else's. Don't tell them to also talk to *XYZ* person, just because you think they are also doing the same. If they are doing the same problem, inform that person directly using my [guide](https://blog.tommyparnell.com/providing-feedback-without-being-an-asshole/) on providing feedback. \n\n## Show Appreciation \nEven if you disagree always show appreciation. Let them know their time is not wasted, and always seem approachable. The ultimate goal is to take the feedback, while still maintaining a solid relationship with this person. Just remember whomever they are you are most likely going to have to interact with them again in you're organization.\n\n## ...but I disagree\nIf you really disagree take in the feedback, wait until the emotional level has calmed and then really point out why you disagree. Do not start yelling, or raising your voice, and always give your honest opinion. If you feel that the conversation is going nowhere, let the dust settle for a few days. If you feel you want to talk about it again, ask them to sit back down with you and resume the conversation in a civilized manor. Just remember being approachable is number one in a corporate atmosphere, and upsetting people is a career killer.\n\n\n\n","html":"<p><span style=\"float: left\"><a href=\"https://blog.tommyparnell.com/providing-feedback-without-being-an-asshole/\">Providing feedback <i class=\"fa fa-hand-o-left\"></i></a></span><br /></p>\n\n<p>Feedback is a two way street if you are willing to hear your strengths reinforced, you should be able to handle what people think are your flaws.</p>\n\n<h2 id=\"dontgetemotional\">Don't get Emotional</h2>\n\n<p>One of the big problems I have when providing feedback is that person often takes it far more personal than its intended. If someone has properly sat you down and asked you for a moment of your time, they are taking time out of their day, and yours. They are doing this, because they want to see your professional relationship with that person to grow and succeed. </p>\n\n<blockquote>\n  <p>Listen to the feedback in detail, and try to see things from their perspective.</p>\n</blockquote>\n\n<h2 id=\"askquestions\">Ask Questions</h2>\n\n<p>You need to ask questions here. This is how you identify what exactly the problem is and why. Also let them understand your perspective, and why you thought you were doing the right thing. Fully understand the problem at hand. Even if you disagree with the feedback, acknowledge their stance and be polite during the conversation.</p>\n\n<h2 id=\"dontpullothersintotheconversation\">Don't pull others into the conversation</h2>\n\n<p>Do not try to Place blame on others, just remember these are <strong>you're</strong> behavior problems, not someone else's. Don't tell them to also talk to <em>XYZ</em> person, just because you think they are also doing the same. If they are doing the same problem, inform that person directly using my <a href=\"https://blog.tommyparnell.com/providing-feedback-without-being-an-asshole/\">guide</a> on providing feedback. </p>\n\n<h2 id=\"showappreciation\">Show Appreciation</h2>\n\n<p>Even if you disagree always show appreciation. Let them know their time is not wasted, and always seem approachable. The ultimate goal is to take the feedback, while still maintaining a solid relationship with this person. Just remember whomever they are you are most likely going to have to interact with them again in you're organization.</p>\n\n<h2 id=\"butidisagree\">...but I disagree</h2>\n\n<p>If you really disagree take in the feedback, wait until the emotional level has calmed and then really point out why you disagree. Do not start yelling, or raising your voice, and always give your honest opinion. If you feel that the conversation is going nowhere, let the dust settle for a few days. If you feel you want to talk about it again, ask them to sit back down with you and resume the conversation in a civilized manor. Just remember being approachable is number one in a corporate atmosphere, and upsetting people is a career killer.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1393794728192,"created_by":1,"updated_at":1394128435559,"updated_by":1,"published_at":1394084551767,"published_by":1},{"id":20,"uuid":"a841ebd4-62ab-4f22-81f8-8ea4b839e145","title":"Abstracting Xamarin Android SharedPreferences","slug":"xamarin-android-sharedpreferences","markdown":"The standard way to get/set SharedPreferences in Xamarin is with the following code.\n\nGet Preference:\n\n```clike\n\n var shared = con.GetSharedPreferences(_preferenceName, FileCreationMode.WorldReadable);\n var value = shared.All.Where(x => x.Key == key).FirstOrDefault().Value;\n\n```\n\nSet Preference:\n\n```clike\n\nvar shared = con.GetSharedPreferences(\"PreferenceName\", FileCreationMode.WorldWriteable);\n            var edit = shared.Edit();\n            edit.PutString(key, val);\n            edit.Commit();\n\n```\n\nThe main issue I have/had with this is you often have to know what will be returned, and what type you need to save as. Usually this isn't difficult, but it adds an un-needed level of complexity.\n\nThe other major issues I have with this, is that it is quite verbose, and unnecessary. The code duplication here can be quite high.\n\n## The Solution\n\nI recently added on [github](https://github.com/tparnell8/XamAndroidSettings) an abstraction around the shared preferences that make it easier to use. This class uses [c# generics](http://msdn.microsoft.com/en-us/library/512aeb7t.aspx), and an extension method I wrote for `ISharedPreferencesEditor` that make SharedPreferences easier to use.\n\nThe sample code below shows how to use it.\n\n```clike\n\nvar sk = new SettingsKey<string>(\"KeyName\", \"PreferenceName\", \"DefaultValuehere\");\n           var setting = sk.GetSetting(this)\n           var setsetting = sk.SetSetting(this, \"New Value!\")\n\n```\n\nTo start create a new `SettingsKey` class and provide a primative type (Note: it only accepts String, Bool, Int, Float, Long).\n\n`var sk = new SettingsKey<string>(\"KeyName\", \"PreferenceName\", \"DefaultValuehere\");`\n\nMy example creates an object called sk with T of type string. You must give the key a name, you must provide the preferenceName (name used to share the settings with other classes),and you must give it a default value (because the user setting may not exist yet).\n\nBelow is a version that uses int:\n\n``var sk = new SettingsKey<int>(\"Times app has been loaded\", \"PreferenceName\", 15);`\n\nAfterwards you can simply use `sk.GetSetting(this)` to get the setting and `sk.SetSetting(this, 25)` to set a new setting.\n\nThe way I used this, was to have the settingskey classes wrapped in a repository-type class with the keys pre-defined (in a struct). Using this I was able to call `repo.sk1.GetSetting();` throughout my application without having to worry if I typed the correct key in or not. This was especially valuable when I wrote my [GravatarSync](https://play.google.com/store/apps/details?id=ultimategravatarsync.ultimategravatarsyncfree) app which has a service backend service, and a front end activity that both access the preferences.\n\n\n## The Result\n\nAfter making this I wanted to start using SharedPreferences as a storage medium. Setting up localSQL for your app is a pain, and maintaing that data when an update to your app is pushed out can be risky. The SharedPreferences are maintained even upon an update, and android does not let these settings get deleted (unless the user deletes them).\n","html":"<p>The standard way to get/set SharedPreferences in Xamarin is with the following code.</p>\n\n<p>Get Preference:</p>\n\n<pre><code class=\"clike\"> var shared = con.GetSharedPreferences(_preferenceName, FileCreationMode.WorldReadable);\n var value = shared.All.Where(x =&gt; x.Key == key).FirstOrDefault().Value;\n</code></pre>\n\n<p>Set Preference:</p>\n\n<pre><code class=\"clike\">var shared = con.GetSharedPreferences(\"PreferenceName\", FileCreationMode.WorldWriteable);  \n            var edit = shared.Edit();\n            edit.PutString(key, val);\n            edit.Commit();\n</code></pre>\n\n<p>The main issue I have/had with this is you often have to know what will be returned, and what type you need to save as. Usually this isn't difficult, but it adds an un-needed level of complexity.</p>\n\n<p>The other major issues I have with this, is that it is quite verbose, and unnecessary. The code duplication here can be quite high.</p>\n\n<h2 id=\"thesolution\">The Solution</h2>\n\n<p>I recently added on <a href=\"https://github.com/tparnell8/XamAndroidSettings\">github</a> an abstraction around the shared preferences that make it easier to use. This class uses <a href=\"http://msdn.microsoft.com/en-us/library/512aeb7t.aspx\">c# generics</a>, and an extension method I wrote for <code>ISharedPreferencesEditor</code> that make SharedPreferences easier to use.</p>\n\n<p>The sample code below shows how to use it.</p>\n\n<pre><code class=\"clike\">var sk = new SettingsKey&lt;string&gt;(\"KeyName\", \"PreferenceName\", \"DefaultValuehere\");  \n           var setting = sk.GetSetting(this)\n           var setsetting = sk.SetSetting(this, \"New Value!\")\n</code></pre>\n\n<p>To start create a new <code>SettingsKey</code> class and provide a primative type (Note: it only accepts String, Bool, Int, Float, Long).</p>\n\n<p><code>var sk = new SettingsKey&lt;string&gt;(\"KeyName\", \"PreferenceName\", \"DefaultValuehere\");</code></p>\n\n<p>My example creates an object called sk with T of type string. You must give the key a name, you must provide the preferenceName (name used to share the settings with other classes),and you must give it a default value (because the user setting may not exist yet).</p>\n\n<p>Below is a version that uses int:</p>\n\n<p><code>`var sk = new SettingsKey&lt;int&gt;(\"Times app has been loaded\", \"PreferenceName\", 15);</code></p>\n\n<p>Afterwards you can simply use <code>sk.GetSetting(this)</code> to get the setting and <code>sk.SetSetting(this, 25)</code> to set a new setting.</p>\n\n<p>The way I used this, was to have the settingskey classes wrapped in a repository-type class with the keys pre-defined (in a struct). Using this I was able to call <code>repo.sk1.GetSetting();</code> throughout my application without having to worry if I typed the correct key in or not. This was especially valuable when I wrote my <a href=\"https://play.google.com/store/apps/details?id=ultimategravatarsync.ultimategravatarsyncfree\">GravatarSync</a> app which has a service backend service, and a front end activity that both access the preferences.</p>\n\n<h2 id=\"theresult\">The Result</h2>\n\n<p>After making this I wanted to start using SharedPreferences as a storage medium. Setting up localSQL for your app is a pain, and maintaing that data when an update to your app is pushed out can be risky. The SharedPreferences are maintained even upon an update, and android does not let these settings get deleted (unless the user deletes them).</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1394132125759,"created_by":1,"updated_at":1395279032619,"updated_by":1,"published_at":1394224210738,"published_by":1},{"id":21,"uuid":"f93a0918-9b69-4cf8-959e-0aee4cc6b728","title":"Admob with Xamarin Android Part 1: BannerAd","slug":"admob-with-xamarin-part-1-banner-ads","markdown":"<span style=\"float: right\">[<i class=\"fa fa-hand-o-right\"></i> Part 2: Interstitial Ads](https://blog.tommyparnell.com/admob-with-xamarin-part-2-interstitialad/)</span><br />\n\nThis will be a brief overview on how to get admob working with Xamarin.\n\n## Disclaimer\n\nI highly suggest you run this on a real phone. I'm not sure if the virtual phones can load content on the internet. I always develop on a real phone.\n\nSample code located in a [repo at github](https://github.com/tparnell8/XamarinAdmobTutorial)\n\n## Create an admob account\n\nFirst you will need to create an account. After you do so create an ad, you must choose either full page aka Interstitial, or banner ad.\n\n\n## Install Play Services Component\n\nThis is quite simple right click on the components folder (in visual studio, or xamarin studio) and click get more components.\n\n{<2>}![get a componant](/content/images/2014/Mar/componant.png)\n\nFind the play services you require and click Add to App. \n\n{<6>}![](/content/images/2014/Mar/playservices.PNG)\n\nAdd the following XML to your Android Manifest file, place it in between the `<application></application>` tags.\n\n```xml\n\n    <meta-data android:name=\"com.google.android.gms.version\" android:value=\"@integer/google_play_services_version\" />\n    <activity android:name=\"com.google.android.gms.ads.AdActivity\" android:configChanges=\"keyboard|keyboardHidden|orientation|screenLayout|uiMode|screenSize|smallestScreenSize\" />\n\n\n\n```\n\n\n\n## Add proper permissions\n\nYou need to add these permissions to your AssemblyInfo.cs\n\n```clike\n[assembly: UsesPermission(Android.Manifest.Permission.Internet)]\n[assembly: UsesPermission(Android.Manifest.Permission.AccessNetworkState)]\n```\n\n## The Basics\n\nThe standard code to create an ad is something like this:\n\n\n```clike\nusing Android.Gms.Ads;\n\nnamespace funtimes\n{\n\n  class a : Activity\n  {\n  \t\tpublic void Method()\n        {\n          var ad = new AdView(con);\n          ad.AdSize = AdSize.SmartBanner;\n          ad.AdUnitId = 'your id here';\n          var requestbuilder = new AdRequest.Builder();\n          ad.LoadAd(requestbuilder.Build());\n          var layout = FindViewById<LinearLayout>(Resource.Id.mainlayout);\n          layout.AddView(ad);\n         }\n         \n  }\n}\n\n\n```\n\n## Doing things better\n\nHowever in the interests of showing, and creating more flexible code this tutorial will guide you through the wrapper implementation I constructed, and posted on [github](https://github.com/tparnell8/XamarinAdmobTutorial).\n\nTo start I created admobDemo.AndroidPhone.ad.AdWrapper.cs This code abstracts out some of the verbose building process, and allows the building Ad code to be reused. the code pertaining banner ads looks like this\n\n\n```clike\n\n\nusing Android.Gms.Ads;\n\nnamespace admobDemo.AndroidPhone.ad\n{\n    public static class AdWrapper\n    {\n        \n\n        public static AdView ConstructStandardBanner(Context con, AdSize adsize, string UnitID)\n        {\n           var ad = new AdView(con);\n           ad.AdSize = adsize;\n           ad.AdUnitId = UnitID;\n           return ad;\n        }\n\n\n        public static AdView CustomBuild(this AdView ad)\n        {\n            var requestbuilder = new AdRequest.Builder();\n            ad.LoadAd(requestbuilder.Build());\n            return ad;\n        }\n    \n    }\n\n\n```\n\nThe ConstructStandardBanner method takes in a context (usually this in an activity class), an ad size which usually people use AdSize.SmartBanner, and the unitID of your Ad (ID that you got from admob).\n\nThe [extension](http://msdn.microsoft.com/en-us/library/bb383977.aspx) method `CustomBuild` allows you to define things in the requestbuilder *(which I have not changed in this implementation)*. The request builder is mostly to give demographic information to Google, to help serve up a *better* ad.\n\n\nYour main activity should end up looking something like this:\n\n```clike\n\n\n\nusing System;\nusing Android.App;\nusing Android.Content;\nusing Android.Runtime;\nusing Android.Views;\nusing Android.Widget;\nusing Android.OS;\nusing Android.Gms.Ads;\nusing admobDemo;\nusing admobDemo.AndroidPhone.ad;\nnamespace admobDemo.AndroidPhone\n{\n    [Activity(Label = \"admobDemo.AndroidPhone\", MainLauncher = true, Icon = \"@drawable/icon\")]\n    public class Activity1 : Activity\n    {\n        AdView _bannerad;\n        protected override void OnCreate(Bundle bundle)\n        {\n            base.OnCreate(bundle);\n            \n            _bannerad = AdWrapper.ConstructStandardBanner(this, AdSize.SmartBanner, \"your ad id here\");\n             _bannerad.CustomBuild();\n            var layout = FindViewById<LinearLayout>(Resource.Id.mainlayout);\n            layout.AddView(_bannerad);\n\t\t}\n\n           \n\n        protected override void OnResume()\n        {\n            if (_bannerad != null) _bannerad.Resume();\n            base.OnResume();\n        }\n        protected override void OnPause()\n        {\n            if(_bannerad != null)_bannerad.Pause();\n            base.OnPause();\n        }\n    }\n}\n\n\n```\n\nAs you can see we are constructing the banner using our wrapper. Then we are calling it's custom build extension method.  We are getting a LinearLayout that has been defined in the views's .axml file (you can add your own their if you wish) and then we are injecting the banner into this LinearLayout.\n\nYou need to make sure you pause and resume the bannerAds by including them in the overrides on the Activity class. You also need to make sure you give it your ad ID.\n\nIf you have issues where the ad does not show, you may want to make sure whatever LinearLayout (or other UI control) you inject the banner into is being shown in the UI. I once saw a problem where one layout was filling the parent so the other was not being shown, therefore the banner was hidden.","html":"<p><span style=\"float: right\"><a href=\"https://blog.tommyparnell.com/admob-with-xamarin-part-2-interstitialad/\"><i class=\"fa fa-hand-o-right\"></i> Part 2: Interstitial Ads</a></span><br /></p>\n\n<p>This will be a brief overview on how to get admob working with Xamarin.</p>\n\n<h2 id=\"disclaimer\">Disclaimer</h2>\n\n<p>I highly suggest you run this on a real phone. I'm not sure if the virtual phones can load content on the internet. I always develop on a real phone.</p>\n\n<p>Sample code located in a <a href=\"https://github.com/tparnell8/XamarinAdmobTutorial\">repo at github</a></p>\n\n<h2 id=\"createanadmobaccount\">Create an admob account</h2>\n\n<p>First you will need to create an account. After you do so create an ad, you must choose either full page aka Interstitial, or banner ad.</p>\n\n<h2 id=\"installplayservicescomponent\">Install Play Services Component</h2>\n\n<p>This is quite simple right click on the components folder (in visual studio, or xamarin studio) and click get more components.</p>\n\n<p><img src=\"/content/images/2014/Mar/componant.png\" alt=\"get a componant\" /></p>\n\n<p>Find the play services you require and click Add to App. </p>\n\n<p><img src=\"/content/images/2014/Mar/playservices.PNG\" alt=\"\" /></p>\n\n<p>Add the following XML to your Android Manifest file, place it in between the <code>&lt;application&gt;&lt;/application&gt;</code> tags.</p>\n\n<pre><code class=\"xml\">    &lt;meta-data android:name=\"com.google.android.gms.version\" android:value=\"@integer/google_play_services_version\" /&gt;\n    &lt;activity android:name=\"com.google.android.gms.ads.AdActivity\" android:configChanges=\"keyboard|keyboardHidden|orientation|screenLayout|uiMode|screenSize|smallestScreenSize\" /&gt;\n</code></pre>\n\n<h2 id=\"addproperpermissions\">Add proper permissions</h2>\n\n<p>You need to add these permissions to your AssemblyInfo.cs</p>\n\n<pre><code class=\"clike\">[assembly: UsesPermission(Android.Manifest.Permission.Internet)]\n[assembly: UsesPermission(Android.Manifest.Permission.AccessNetworkState)]\n</code></pre>\n\n<h2 id=\"thebasics\">The Basics</h2>\n\n<p>The standard code to create an ad is something like this:</p>\n\n<pre><code class=\"clike\">using Android.Gms.Ads;\n\nnamespace funtimes  \n{\n\n  class a : Activity\n  {\n          public void Method()\n        {\n          var ad = new AdView(con);\n          ad.AdSize = AdSize.SmartBanner;\n          ad.AdUnitId = 'your id here';\n          var requestbuilder = new AdRequest.Builder();\n          ad.LoadAd(requestbuilder.Build());\n          var layout = FindViewById&lt;LinearLayout&gt;(Resource.Id.mainlayout);\n          layout.AddView(ad);\n         }\n\n  }\n}\n</code></pre>\n\n<h2 id=\"doingthingsbetter\">Doing things better</h2>\n\n<p>However in the interests of showing, and creating more flexible code this tutorial will guide you through the wrapper implementation I constructed, and posted on <a href=\"https://github.com/tparnell8/XamarinAdmobTutorial\">github</a>.</p>\n\n<p>To start I created admobDemo.AndroidPhone.ad.AdWrapper.cs This code abstracts out some of the verbose building process, and allows the building Ad code to be reused. the code pertaining banner ads looks like this</p>\n\n<pre><code class=\"clike\">using Android.Gms.Ads;\n\nnamespace admobDemo.AndroidPhone.ad  \n{\n    public static class AdWrapper\n    {\n\n\n        public static AdView ConstructStandardBanner(Context con, AdSize adsize, string UnitID)\n        {\n           var ad = new AdView(con);\n           ad.AdSize = adsize;\n           ad.AdUnitId = UnitID;\n           return ad;\n        }\n\n\n        public static AdView CustomBuild(this AdView ad)\n        {\n            var requestbuilder = new AdRequest.Builder();\n            ad.LoadAd(requestbuilder.Build());\n            return ad;\n        }\n\n    }\n</code></pre>\n\n<p>The ConstructStandardBanner method takes in a context (usually this in an activity class), an ad size which usually people use AdSize.SmartBanner, and the unitID of your Ad (ID that you got from admob).</p>\n\n<p>The <a href=\"http://msdn.microsoft.com/en-us/library/bb383977.aspx\">extension</a> method <code>CustomBuild</code> allows you to define things in the requestbuilder <em>(which I have not changed in this implementation)</em>. The request builder is mostly to give demographic information to Google, to help serve up a <em>better</em> ad.</p>\n\n<p>Your main activity should end up looking something like this:</p>\n\n<pre><code class=\"clike\">using System;  \nusing Android.App;  \nusing Android.Content;  \nusing Android.Runtime;  \nusing Android.Views;  \nusing Android.Widget;  \nusing Android.OS;  \nusing Android.Gms.Ads;  \nusing admobDemo;  \nusing admobDemo.AndroidPhone.ad;  \nnamespace admobDemo.AndroidPhone  \n{\n    [Activity(Label = \"admobDemo.AndroidPhone\", MainLauncher = true, Icon = \"@drawable/icon\")]\n    public class Activity1 : Activity\n    {\n        AdView _bannerad;\n        protected override void OnCreate(Bundle bundle)\n        {\n            base.OnCreate(bundle);\n\n            _bannerad = AdWrapper.ConstructStandardBanner(this, AdSize.SmartBanner, \"your ad id here\");\n             _bannerad.CustomBuild();\n            var layout = FindViewById&lt;LinearLayout&gt;(Resource.Id.mainlayout);\n            layout.AddView(_bannerad);\n        }\n\n\n\n        protected override void OnResume()\n        {\n            if (_bannerad != null) _bannerad.Resume();\n            base.OnResume();\n        }\n        protected override void OnPause()\n        {\n            if(_bannerad != null)_bannerad.Pause();\n            base.OnPause();\n        }\n    }\n}\n</code></pre>\n\n<p>As you can see we are constructing the banner using our wrapper. Then we are calling it's custom build extension method.  We are getting a LinearLayout that has been defined in the views's .axml file (you can add your own their if you wish) and then we are injecting the banner into this LinearLayout.</p>\n\n<p>You need to make sure you pause and resume the bannerAds by including them in the overrides on the Activity class. You also need to make sure you give it your ad ID.</p>\n\n<p>If you have issues where the ad does not show, you may want to make sure whatever LinearLayout (or other UI control) you inject the banner into is being shown in the UI. I once saw a problem where one layout was filling the parent so the other was not being shown, therefore the banner was hidden.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1394513511356,"created_by":1,"updated_at":1398482112943,"updated_by":1,"published_at":1394515807779,"published_by":1},{"id":22,"uuid":"2f0b238d-7041-454e-952a-c9f9c95f79f3","title":"Admob with Xamarin Android Part 2: InterstitialAd","slug":"admob-with-xamarin-part-2-interstitialad","markdown":"<span style=\"float: left\">[Part 1: Banner Ads <i class=\"fa fa-hand-o-left\"></i>](https://blog.tommyparnell.com/admob-with-xamarin-part-1-banner-ads/)</span><br />\n\nInterested in Interstital ads, but not banner? Thats ok, but I recommend your read my first post about [banner ads](https://blog.tommyparnell.com/admob-with-xamarin-part-1-banner-ads/). The first steps, installing Google Play Services, altering your permissions, adding to your manifests files, and reviewing my [github demo](https://github.com/tparnell8/XamarinAdmobTutorial) are located in that tutorial.\n\n## The Basics\n\nThe very basic amount of code to do Interstitial Ad's are below\n\n```clike\n\n var ad = new InterstitialAd(con);\n ad.AdUnitId = \"unitID\";\n var requestbuilder = new AdRequest.Builder();\n ad.LoadAd(requestbuilder.Build());\n ad.Show()\n```\nThe problem with the above code is it tries to show the ad right away, but the ad may not be loaded already. The unique way interstitial ads work, are you must call `Show()`, after the banner is downloaded. So we must have an event listener that hears when the ad is loaded, before we can show it.\n\n## Doing things better\n\nBack to my github code, the Adwrapper class contains build methods for *full page ad* aka Interstitial. \n\n```clike\nusing Android.App;\nusing Android.Content;\nusing Android.OS;\nusing Android.Runtime;\nusing Android.Views;\nusing Android.Widget;\nusing Android.Gms.Ads;\n\nnamespace admobDemo.AndroidPhone.ad\n{\n    public static class AdWrapper\n    {\n\n\n public static InterstitialAd ConstructFullPageAdd(Context con, string UnitID)\n        {\n            var ad = new InterstitialAd(con);\n            ad.AdUnitId = UnitID;\n            return ad;\n        }\n        \n          public static InterstitialAd CustomBuild(this InterstitialAd ad)\n        {\n            var requestbuilder = new AdRequest.Builder();\n            ad.LoadAd(requestbuilder.Build());\n            return ad;\n        }\n\n    }\n}\n\n```\nThe custom build extension method works the same as the banner ad method, and has not been customized in this template.\n\nThe InterstitialAd class does not come with native event listeners. To implement listeners you must create a class that inherits from AdListner and then define the event listeners. We will want to do this so we can show the ad once it is downloaded to the phone, and not have to keep checking to see if it has downloaded. The demo code AdEventListener.cs file in the ad folder of AndroidPhone project contains an implementaiton of this.\n\n```clike\n\n\nnamespace admobDemo\n{\n    class adlistener : AdListener\n    {\n        // Declare the delegate (if using non-generic pattern). \n        public delegate void AdLoadedEvent();\n        public delegate void AdClosedEvent();\n        public delegate void AdOpenedEvent();\n\n\n\n        // Declare the event. \n        public event AdLoadedEvent AdLoaded;\n        public event AdClosedEvent AdClosed;\n        public event AdOpenedEvent AdOpened;\n\n        public override void OnAdLoaded()\n        {\n            if (AdLoaded != null) this.AdLoaded();\n            base.OnAdLoaded();\n        }\n\n        public override void OnAdClosed()\n        {\n            if (AdClosed != null) this.AdClosed();\n            base.OnAdClosed();\n        }\n        public override void OnAdOpened()\n        {\n            if (AdOpened != null) this.AdOpened();\n \t        base.OnAdOpened();\n        }\n    }\n}\n```\n\nOnce you have these componants in place your activity should end up looking like this.\n\n\n```clike\n\n\nusing System;\nusing Android.App;\nusing Android.Content;\nusing Android.Runtime;\nusing Android.Views;\nusing Android.Widget;\nusing Android.OS;\nusing Android.Gms.Ads;\nusing admobDemo;\nusing admobDemo.AndroidPhone.ad;\nnamespace admobDemo.AndroidPhone\n{\n    [Activity(Label = \"admobDemo.AndroidPhone\", MainLauncher = true, Icon = \"@drawable/icon\")]\n    public class Activity1 : Activity\n    {\n        protected override void OnCreate(Bundle bundle)\n        {\n            base.OnCreate(bundle);\n\n            // Set our view from the \"main\" layout resource\n            SetContentView(Resource.Layout.Main);\n\n            var FinalAd = AdWrapper.ConstructFullPageAdd(this, \"your ad id here\");\n            var intlistener = new admobDemo.adlistener();\n            intlistener.AdLoaded += () => { if (FinalAd.IsLoaded)FinalAd.Show(); };\n            FinalAd.AdListener = intlistener;\n            FinalAd.CustomBuild();\n\n        }\n\n    }\n}\n\n```\n\nTo walk you through the code...after `SetContentView()`....We make a full page Ad *(and pass it our AD id)*, we create an event listener based on the ad listener class. We set the event listener to trigger an annonymous function that will show the ad. we make the Ad's event listener to be the event listener we made, then we run CustomBuild which builds the Ad and starts loading the Ad. Once the ad loads it will call the event handler, and Boom! Show the ad to the user. \n\nObviously this is a basic implementation, and showing the ad when the app first starts may, or may not be the best stratergy for **You**.","html":"<p><span style=\"float: left\"><a href=\"https://blog.tommyparnell.com/admob-with-xamarin-part-1-banner-ads/\">Part 1: Banner Ads <i class=\"fa fa-hand-o-left\"></i></a></span><br /></p>\n\n<p>Interested in Interstital ads, but not banner? Thats ok, but I recommend your read my first post about <a href=\"https://blog.tommyparnell.com/admob-with-xamarin-part-1-banner-ads/\">banner ads</a>. The first steps, installing Google Play Services, altering your permissions, adding to your manifests files, and reviewing my <a href=\"https://github.com/tparnell8/XamarinAdmobTutorial\">github demo</a> are located in that tutorial.</p>\n\n<h2 id=\"thebasics\">The Basics</h2>\n\n<p>The very basic amount of code to do Interstitial Ad's are below</p>\n\n<pre><code class=\"clike\"> var ad = new InterstitialAd(con);\n ad.AdUnitId = \"unitID\";\n var requestbuilder = new AdRequest.Builder();\n ad.LoadAd(requestbuilder.Build());\n ad.Show()\n</code></pre>\n\n<p>The problem with the above code is it tries to show the ad right away, but the ad may not be loaded already. The unique way interstitial ads work, are you must call <code>Show()</code>, after the banner is downloaded. So we must have an event listener that hears when the ad is loaded, before we can show it.</p>\n\n<h2 id=\"doingthingsbetter\">Doing things better</h2>\n\n<p>Back to my github code, the Adwrapper class contains build methods for <em>full page ad</em> aka Interstitial. </p>\n\n<pre><code class=\"clike\">using Android.App;  \nusing Android.Content;  \nusing Android.OS;  \nusing Android.Runtime;  \nusing Android.Views;  \nusing Android.Widget;  \nusing Android.Gms.Ads;\n\nnamespace admobDemo.AndroidPhone.ad  \n{\n    public static class AdWrapper\n    {\n\n\n public static InterstitialAd ConstructFullPageAdd(Context con, string UnitID)\n        {\n            var ad = new InterstitialAd(con);\n            ad.AdUnitId = UnitID;\n            return ad;\n        }\n\n          public static InterstitialAd CustomBuild(this InterstitialAd ad)\n        {\n            var requestbuilder = new AdRequest.Builder();\n            ad.LoadAd(requestbuilder.Build());\n            return ad;\n        }\n\n    }\n}\n</code></pre>\n\n<p>The custom build extension method works the same as the banner ad method, and has not been customized in this template.</p>\n\n<p>The InterstitialAd class does not come with native event listeners. To implement listeners you must create a class that inherits from AdListner and then define the event listeners. We will want to do this so we can show the ad once it is downloaded to the phone, and not have to keep checking to see if it has downloaded. The demo code AdEventListener.cs file in the ad folder of AndroidPhone project contains an implementaiton of this.</p>\n\n<pre><code class=\"clike\">namespace admobDemo  \n{\n    class adlistener : AdListener\n    {\n        // Declare the delegate (if using non-generic pattern). \n        public delegate void AdLoadedEvent();\n        public delegate void AdClosedEvent();\n        public delegate void AdOpenedEvent();\n\n\n\n        // Declare the event. \n        public event AdLoadedEvent AdLoaded;\n        public event AdClosedEvent AdClosed;\n        public event AdOpenedEvent AdOpened;\n\n        public override void OnAdLoaded()\n        {\n            if (AdLoaded != null) this.AdLoaded();\n            base.OnAdLoaded();\n        }\n\n        public override void OnAdClosed()\n        {\n            if (AdClosed != null) this.AdClosed();\n            base.OnAdClosed();\n        }\n        public override void OnAdOpened()\n        {\n            if (AdOpened != null) this.AdOpened();\n             base.OnAdOpened();\n        }\n    }\n}\n</code></pre>\n\n<p>Once you have these componants in place your activity should end up looking like this.</p>\n\n<pre><code class=\"clike\">using System;  \nusing Android.App;  \nusing Android.Content;  \nusing Android.Runtime;  \nusing Android.Views;  \nusing Android.Widget;  \nusing Android.OS;  \nusing Android.Gms.Ads;  \nusing admobDemo;  \nusing admobDemo.AndroidPhone.ad;  \nnamespace admobDemo.AndroidPhone  \n{\n    [Activity(Label = \"admobDemo.AndroidPhone\", MainLauncher = true, Icon = \"@drawable/icon\")]\n    public class Activity1 : Activity\n    {\n        protected override void OnCreate(Bundle bundle)\n        {\n            base.OnCreate(bundle);\n\n            // Set our view from the \"main\" layout resource\n            SetContentView(Resource.Layout.Main);\n\n            var FinalAd = AdWrapper.ConstructFullPageAdd(this, \"your ad id here\");\n            var intlistener = new admobDemo.adlistener();\n            intlistener.AdLoaded += () =&gt; { if (FinalAd.IsLoaded)FinalAd.Show(); };\n            FinalAd.AdListener = intlistener;\n            FinalAd.CustomBuild();\n\n        }\n\n    }\n}\n</code></pre>\n\n<p>To walk you through the code...after <code>SetContentView()</code>....We make a full page Ad <em>(and pass it our AD id)</em>, we create an event listener based on the ad listener class. We set the event listener to trigger an annonymous function that will show the ad. we make the Ad's event listener to be the event listener we made, then we run CustomBuild which builds the Ad and starts loading the Ad. Once the ad loads it will call the event handler, and Boom! Show the ad to the user. </p>\n\n<p>Obviously this is a basic implementation, and showing the ad when the app first starts may, or may not be the best stratergy for <strong>You</strong>.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1394516646292,"created_by":1,"updated_at":1395278857077,"updated_by":1,"published_at":1394517772380,"published_by":1},{"id":23,"uuid":"fa05a000-0853-4d7d-9f97-aea5cd58766f","title":"You hired adults, not children","slug":"you-hired-adults-not-children","markdown":"One of the things that I often see in our industry is the culture of access control. Security measures are put into place, because you wish to restrict access to a certain thing. Systems like HRIS need such restrictions, as private information should not be publicly available to the company. However often systems that don't need security controls put into place end up having them.\n\n>Most people understand where they fall in the business, and the authority delegated to them.\n\n## Filtering Internet\n\nFiltering internet is a controversial topic in most work places. By actively monitoring your employees activities on the internet, they will feel a sense of distrust. If you trust this person to write code for your production website, you can probably trust them to surf at will. I'm not Advocating that you don't log the activity. However you shouldn't actively block websites, or read the logs. Activity Logs should only be used when legal problems arise, and **not** something you hang over your employee's heads.\n\n\n## Ownership and Directed Management\n\nLet employees have ownership of their work. Let them understand that with the freedom to own things, comes the responsibility to that thing. Employees whom decide to use non-standard technologies, should have to own that thing entirely. Stopping them from using it can be a barrier to productivity, especially if that particular technology is best for their project. \n\nAsking someone to do something without context is demoralizing. Let employees know why you are asking them to do something. This establishes your motives, and gives that person a sense as to how they fit in the organization. If someone asks you to do something, and you are busy let them know why you can't fulfill their request at that moment.\n\n## Access Control: Barrier of productivity\n\nOne of the huge problems in most companies are barriers to productivity. These can be caused by processes, but also access control. Most systems do not need have access control set around them. If you trust your employees, and colleagues to be adults, you should not have to lock them out of xyz system as long at that system does not store sensitive data.  No one manager or even team should have to approve specific patches. Anyone who feels they have authority to approve something, should be able to do so. People fully understand the authority delegated to them. Waiting for specific people can be ultimately a huge barrier to success.\n\n## Overall Message\n\nThere is nothing wrong with being a manager, but try to delegate responsibility to you're subordinates. Give them the trust and respect that they deserve. Employees whom are empowered are more antonymous and are ultimately more productive than their oppressed counterparts.\n\n\n\n\n","html":"<p>One of the things that I often see in our industry is the culture of access control. Security measures are put into place, because you wish to restrict access to a certain thing. Systems like HRIS need such restrictions, as private information should not be publicly available to the company. However often systems that don't need security controls put into place end up having them.</p>\n\n<blockquote>\n  <p>Most people understand where they fall in the business, and the authority delegated to them.</p>\n</blockquote>\n\n<h2 id=\"filteringinternet\">Filtering Internet</h2>\n\n<p>Filtering internet is a controversial topic in most work places. By actively monitoring your employees activities on the internet, they will feel a sense of distrust. If you trust this person to write code for your production website, you can probably trust them to surf at will. I'm not Advocating that you don't log the activity. However you shouldn't actively block websites, or read the logs. Activity Logs should only be used when legal problems arise, and <strong>not</strong> something you hang over your employee's heads.</p>\n\n<h2 id=\"ownershipanddirectedmanagement\">Ownership and Directed Management</h2>\n\n<p>Let employees have ownership of their work. Let them understand that with the freedom to own things, comes the responsibility to that thing. Employees whom decide to use non-standard technologies, should have to own that thing entirely. Stopping them from using it can be a barrier to productivity, especially if that particular technology is best for their project. </p>\n\n<p>Asking someone to do something without context is demoralizing. Let employees know why you are asking them to do something. This establishes your motives, and gives that person a sense as to how they fit in the organization. If someone asks you to do something, and you are busy let them know why you can't fulfill their request at that moment.</p>\n\n<h2 id=\"accesscontrolbarrierofproductivity\">Access Control: Barrier of productivity</h2>\n\n<p>One of the huge problems in most companies are barriers to productivity. These can be caused by processes, but also access control. Most systems do not need have access control set around them. If you trust your employees, and colleagues to be adults, you should not have to lock them out of xyz system as long at that system does not store sensitive data.  No one manager or even team should have to approve specific patches. Anyone who feels they have authority to approve something, should be able to do so. People fully understand the authority delegated to them. Waiting for specific people can be ultimately a huge barrier to success.</p>\n\n<h2 id=\"overallmessage\">Overall Message</h2>\n\n<p>There is nothing wrong with being a manager, but try to delegate responsibility to you're subordinates. Give them the trust and respect that they deserve. Employees whom are empowered are more antonymous and are ultimately more productive than their oppressed counterparts.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1394871474703,"created_by":1,"updated_at":1396408661885,"updated_by":1,"published_at":1395097829604,"published_by":1},{"id":24,"uuid":"fbf78696-48d7-4c93-9c05-83d83edd0d3c","title":"Capturing Client Side JavaScript Errors","slug":"capturing-client-side-javascript-errors","markdown":"Capturing client side errors in my opinion is really good. For starters you can troubleshoot your client side implementation, but you can also make sure a js change did not break certain pages. \n\nBelow is a really simple, yet effective way to capture errors. Eventually you may want to implement something more advanced, but this will get you out of the gate.\n\n```language-javascript\nwindow.onerror = function (errorMsg, url, lineNumber, column, error) {\n    $.ajax('/api/Error', {\n        type: \"POST\",\n        data: {\n            Message: errorMsg,\n            ScriptUrl: url,\n            Line: lineNumber,\n            PageUrl: window.location.protocol + \"//\" + window.location.host + \"/\" + window.location.pathname,\n            StackTrace: function (){return error ? error.stack: '';}\n            \n        }\n    });\n};\n```\nYou will need Jquery, and a server side API to accept the data. Not all browsers are currently including a Stack Trace, so you will only get stacks from certain browsers.","html":"<p>Capturing client side errors in my opinion is really good. For starters you can troubleshoot your client side implementation, but you can also make sure a js change did not break certain pages. </p>\n\n<p>Below is a really simple, yet effective way to capture errors. Eventually you may want to implement something more advanced, but this will get you out of the gate.</p>\n\n<pre><code class=\"language-javascript\">window.onerror = function (errorMsg, url, lineNumber, column, error) {  \n    $.ajax('/api/Error', {\n        type: \"POST\",\n        data: {\n            Message: errorMsg,\n            ScriptUrl: url,\n            Line: lineNumber,\n            PageUrl: window.location.protocol + \"//\" + window.location.host + \"/\" + window.location.pathname,\n            StackTrace: function (){return error ? error.stack: '';}\n\n        }\n    });\n};\n</code></pre>\n\n<p>You will need Jquery, and a server side API to accept the data. Not all browsers are currently including a Stack Trace, so you will only get stacks from certain browsers.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1395273436491,"created_by":1,"updated_at":1395273933823,"updated_by":1,"published_at":1395273451980,"published_by":1},{"id":25,"uuid":"a884217a-07e5-45ef-94a4-e362e4ab1189","title":"Getting SquishIt to work with Nancyfx and Razor (...and other static content issues)","slug":"getting-squishit-to-work-with-nancyfx-and-razor","markdown":"SquishIt is a content bundler and minification tool. The [github](https://github.com/NancyFx/Nancy/wiki/SquishIt-with-Nancy) documentation contains exaples how to install and use it, and a [sample application](https://github.com/jetheredge/SquishIt) is provided. However I had some issues getting it to work with razor so I figured I would share these pain points with you.\n\n## Razor cannot find Assemblies\n\nTo start my project is a Nancyfx application with razor view engine installed. I initially ran `Install-Package SquishIt`. Once installed I [ran through another tutorial](http://blogs.lessthandot.com/index.php/webdev/serverprogramming/aspnet/squishit-and-nancy/) that requires some editing of the webconfig. However my webconfig has been altered a lot already, and it did not look like the sample application. I am also not a guru in the web.config so I was kind of confused where to place the sample XML provided. I ignored the webconfig, I fired up nancy and tried to use SquishIt, only to get the following razor compile error.\n\n\n`The type or namespace name 'SquishIt' could not be found (are you missing a using directive or an assembly reference?) `\n\nIt seems you **must** tell razor about squishIt's assemblies. Well It turns out there are basically 2 blocks of entries you need to add to your web.config. First you need to place `<section name=\"razor\" type=\"Nancy.ViewEngines.Razor.RazorConfigurationSection, Nancy.ViewEngines.Razor\"/>` inside `<configSections>` but outside of `<sectionGroup>`. \n\nYou should end up with a section config that looks like the following:\n\n```XML\n<configSections>\n    <sectionGroup name=\"system.web.webPages.razor\" type=\"System.Web.WebPages.Razor.Configuration.RazorWebSectionGroup, System.Web.WebPages.Razor, Version=2.0.0.0, Culture=neutral>\n      <section name=\"pages\" type=\"System.Web.WebPages.Razor.Configuration.RazorPagesSection, System.Web.WebPages.Razor, Version=2.0.0.0, Culture=neutral requirePermission=\"false\" />\n    </sectionGroup>\n  <section name=\"razor\" type=\"Nancy.ViewEngines.Razor.RazorConfigurationSection, Nancy.ViewEngines.Razor\"/>\n  </configSections>\n\n\n```\n\nNext paste the following XML **after** `</configSections>`\n\n```xml\n<razor disableAutoIncludeModelNamespace=\"false\">\n    <assemblies>\n      <add assembly=\"SquishIt.Framework\"/>\n    </assemblies>\n    <namespaces>\n      <add namespace=\"SquishIt.Framework\"/>\n    </namespaces>\n  </razor>\n```\n\nOnce I did this the razor views could compile, and it seemed to work, but not quite...\n\n## SquishIt cannot resolve file paths\n\nOnce I got it up and running, things did not seem right. So I started combing through google. I stumbled across a [thread](https://groups.google.com/forum/#!msg/squishit/YBsUiL9v1Ow/7lBJmMIHGMoJ) where the creator of SquishIt noted SquishIt was having issues with resolving file paths. This was caused by a change to Nancy. \n\nHe notes a [commit](https://github.com/AlexCuse/SquishIt.NancySample/commit/7338026d4d425960151978171596749066b460bc) to the sample application that fixes the problem. In nuget I updated SquishIt with the `-pre` flag so I could get the latest release. Once I did I implemented the following class (from the gitcommit):\n\n```c-like\n\nusing Nancy;\nusing SquishIt.Framework;\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Web;\n\nnamespace Class.Web\n{\n    public class NancyPathTranslator : IPathTranslator\n    {\n        private readonly IRootPathProvider _rootPathProvider;\n\n        public NancyPathTranslator(IRootPathProvider rootPathProvider)\n        {\n            _rootPathProvider = rootPathProvider;\n        }\n\n        public string ResolveAppRelativePathToFileSystem(string file)\n        {\n            // Remove query string\n            if (file.IndexOf('?') != -1)\n            {\n                file = file.Substring(0, file.IndexOf('?'));\n            }\n\n            return _rootPathProvider.GetRootPath() + \"/\" + file.TrimStart('~').TrimStart('/');\n        }\n\n        public string ResolveFileSystemPathToAppRelative(string file)\n        {\n            var root = new Uri(_rootPathProvider.GetRootPath());\n            return root.MakeRelativeUri(new Uri(file, UriKind.RelativeOrAbsolute)).ToString();\n        }\n    }\n}\n\n\n\n```\nAnd then added \n\n```c-like\n\nBundle.ConfigureDefaults().UsePathTranslator(new NancyPathTranslator(new AspNetRootSourceProvider()));\n\n\n\n```\n\n\n\nWhich seemed to work. I believe if you have your file paths be the same as the paths called by the HTML, it will probably work fine without the above fix.\n\n## Scripts/ folder doesn't work\n\nThis isn't actually a SquishIt problem, but I didn't notice this until I installed SquishIt. Files in a Scripts/ folder will not be served up by Nancy. \n\nBack to Google I went, and I found my answer on [stack overflow](http://stackoverflow.com/a/13517803). Apparently Nancy only uses Content/ as the content directory, for static content.  I ended up adding the following to my ConfigureConventions override. \n\n```c-like\n\n protected override void ConfigureConventions(Nancy.Conventions.NancyConventions nancyConventions)\n        {\n            nancyConventions.StaticContentsConventions.AddDirectory(\"Scripts\",\"Scripts/\");\n            base.ConfigureConventions(nancyConventions);\n        }\n\n\n```\n\nThe AddDirectory requires 2 strings, the first being the route to expect, the second is the directory it needs. This will enable the scripts folder to work in its entirety. You can use this to add other content directories. For me this worked fine.\n\n\n## Serving content\n\nNow that it all worked I added `Bundle.Css().Add(\"~/Content/bootstrap.css\").AsCached(\"bootstrap\", \"~/assets/css/bootstrap\");` to my ApplicationStartup override. Created a module to serve up the static content (stolen from [github](https://github.com/NancyFx/Nancy/wiki/SquishIt-with-Nancy)) .\n\n\n```c-like\n\n\npublic class ServeAsset : NancyModule\n    {\n        public ServeAsset():base(\"/assets\")\n        {\n            Get[\"/js/{name}\"] = parameters => CreateResponse(Bundle.JavaScript().RenderCached((string)parameters.name), Configuration.Instance.JavascriptMimeType);\n\n            Get[\"/css/{name}\"] = parameters => CreateResponse(Bundle.Css().RenderCached((string)parameters.name), Configuration.Instance.CssMimeType);\n        }\n\n        Response CreateResponse(string content, string contentType)\n        {\n            return Response\n                .FromStream(() => new MemoryStream(Encoding.UTF8.GetBytes(content)), contentType)\n                .WithHeader(\"Cache-Control\", \"max-age=45\");\n        }\n    }\n\n\n```\n\n\nThen added ` @Html.Raw(Bundle.Css().RenderCachedAssetTag(\"bootstrap\"))` to my razor view, and by magic it works.\n\nAs a side note, it will only minify if you're not in debug mode. So if you're application's webconfig has `<compilation debug=\"true\" targetFramework=\"4.5\">` you may want flip it to false to see the minified files. \n\nThis behavior can be overridden with the `.ForceRelease()` as part of your bundle. ex. `Bundle.Css().Add(\"~/Content/bootstrap.css\").ForceRelease().AsCached(\"bootstrap\", \"~/assets/css/bootstrap\");`\n\n## Conclusion \n\nWell after the work above I was finally generating minified files. SquishIt's ability to minify quickly is very nice. The way it manages files reminds me of the [MVC4 Bundling](http://www.asp.net/mvc/tutorials/mvc-4/bundling-and-minification), but SquishIt allows for much greater control over the process.\n\n\n","html":"<p>SquishIt is a content bundler and minification tool. The <a href=\"https://github.com/NancyFx/Nancy/wiki/SquishIt-with-Nancy\">github</a> documentation contains exaples how to install and use it, and a <a href=\"https://github.com/jetheredge/SquishIt\">sample application</a> is provided. However I had some issues getting it to work with razor so I figured I would share these pain points with you.</p>\n\n<h2 id=\"razorcannotfindassemblies\">Razor cannot find Assemblies</h2>\n\n<p>To start my project is a Nancyfx application with razor view engine installed. I initially ran <code>Install-Package SquishIt</code>. Once installed I <a href=\"http://blogs.lessthandot.com/index.php/webdev/serverprogramming/aspnet/squishit-and-nancy/\">ran through another tutorial</a> that requires some editing of the webconfig. However my webconfig has been altered a lot already, and it did not look like the sample application. I am also not a guru in the web.config so I was kind of confused where to place the sample XML provided. I ignored the webconfig, I fired up nancy and tried to use SquishIt, only to get the following razor compile error.</p>\n\n<p><code>The type or namespace name 'SquishIt' could not be found (are you missing a using directive or an assembly reference?)</code></p>\n\n<p>It seems you <strong>must</strong> tell razor about squishIt's assemblies. Well It turns out there are basically 2 blocks of entries you need to add to your web.config. First you need to place <code>&lt;section name=\"razor\" type=\"Nancy.ViewEngines.Razor.RazorConfigurationSection, Nancy.ViewEngines.Razor\"/&gt;</code> inside <code>&lt;configSections&gt;</code> but outside of <code>&lt;sectionGroup&gt;</code>. </p>\n\n<p>You should end up with a section config that looks like the following:</p>\n\n<pre><code class=\"XML\">&lt;configSections&gt;  \n    &lt;sectionGroup name=\"system.web.webPages.razor\" type=\"System.Web.WebPages.Razor.Configuration.RazorWebSectionGroup, System.Web.WebPages.Razor, Version=2.0.0.0, Culture=neutral&gt;\n      &lt;section name=\"pages\" type=\"System.Web.WebPages.Razor.Configuration.RazorPagesSection, System.Web.WebPages.Razor, Version=2.0.0.0, Culture=neutral requirePermission=\"false\" /&gt;\n    &lt;/sectionGroup&gt;\n  &lt;section name=\"razor\" type=\"Nancy.ViewEngines.Razor.RazorConfigurationSection, Nancy.ViewEngines.Razor\"/&gt;\n  &lt;/configSections&gt;\n</code></pre>\n\n<p>Next paste the following XML <strong>after</strong> <code>&lt;/configSections&gt;</code></p>\n\n<pre><code class=\"xml\">&lt;razor disableAutoIncludeModelNamespace=\"false\"&gt;  \n    &lt;assemblies&gt;\n      &lt;add assembly=\"SquishIt.Framework\"/&gt;\n    &lt;/assemblies&gt;\n    &lt;namespaces&gt;\n      &lt;add namespace=\"SquishIt.Framework\"/&gt;\n    &lt;/namespaces&gt;\n  &lt;/razor&gt;\n</code></pre>\n\n<p>Once I did this the razor views could compile, and it seemed to work, but not quite...</p>\n\n<h2 id=\"squishitcannotresolvefilepaths\">SquishIt cannot resolve file paths</h2>\n\n<p>Once I got it up and running, things did not seem right. So I started combing through google. I stumbled across a <a href=\"https://groups.google.com/forum/#!msg/squishit/YBsUiL9v1Ow/7lBJmMIHGMoJ\">thread</a> where the creator of SquishIt noted SquishIt was having issues with resolving file paths. This was caused by a change to Nancy. </p>\n\n<p>He notes a <a href=\"https://github.com/AlexCuse/SquishIt.NancySample/commit/7338026d4d425960151978171596749066b460bc\">commit</a> to the sample application that fixes the problem. In nuget I updated SquishIt with the <code>-pre</code> flag so I could get the latest release. Once I did I implemented the following class (from the gitcommit):</p>\n\n<pre><code class=\"c-like\">using Nancy;  \nusing SquishIt.Framework;  \nusing System;  \nusing System.Collections.Generic;  \nusing System.Linq;  \nusing System.Web;\n\nnamespace Class.Web  \n{\n    public class NancyPathTranslator : IPathTranslator\n    {\n        private readonly IRootPathProvider _rootPathProvider;\n\n        public NancyPathTranslator(IRootPathProvider rootPathProvider)\n        {\n            _rootPathProvider = rootPathProvider;\n        }\n\n        public string ResolveAppRelativePathToFileSystem(string file)\n        {\n            // Remove query string\n            if (file.IndexOf('?') != -1)\n            {\n                file = file.Substring(0, file.IndexOf('?'));\n            }\n\n            return _rootPathProvider.GetRootPath() + \"/\" + file.TrimStart('~').TrimStart('/');\n        }\n\n        public string ResolveFileSystemPathToAppRelative(string file)\n        {\n            var root = new Uri(_rootPathProvider.GetRootPath());\n            return root.MakeRelativeUri(new Uri(file, UriKind.RelativeOrAbsolute)).ToString();\n        }\n    }\n}\n</code></pre>\n\n<p>And then added </p>\n\n<pre><code class=\"c-like\">Bundle.ConfigureDefaults().UsePathTranslator(new NancyPathTranslator(new AspNetRootSourceProvider()));\n</code></pre>\n\n<p>Which seemed to work. I believe if you have your file paths be the same as the paths called by the HTML, it will probably work fine without the above fix.</p>\n\n<h2 id=\"scriptsfolderdoesntwork\">Scripts/ folder doesn't work</h2>\n\n<p>This isn't actually a SquishIt problem, but I didn't notice this until I installed SquishIt. Files in a Scripts/ folder will not be served up by Nancy. </p>\n\n<p>Back to Google I went, and I found my answer on <a href=\"http://stackoverflow.com/a/13517803\">stack overflow</a>. Apparently Nancy only uses Content/ as the content directory, for static content.  I ended up adding the following to my ConfigureConventions override. </p>\n\n<pre><code class=\"c-like\"> protected override void ConfigureConventions(Nancy.Conventions.NancyConventions nancyConventions)\n        {\n            nancyConventions.StaticContentsConventions.AddDirectory(\"Scripts\",\"Scripts/\");\n            base.ConfigureConventions(nancyConventions);\n        }\n</code></pre>\n\n<p>The AddDirectory requires 2 strings, the first being the route to expect, the second is the directory it needs. This will enable the scripts folder to work in its entirety. You can use this to add other content directories. For me this worked fine.</p>\n\n<h2 id=\"servingcontent\">Serving content</h2>\n\n<p>Now that it all worked I added <code>Bundle.Css().Add(\"~/Content/bootstrap.css\").AsCached(\"bootstrap\", \"~/assets/css/bootstrap\");</code> to my ApplicationStartup override. Created a module to serve up the static content (stolen from <a href=\"https://github.com/NancyFx/Nancy/wiki/SquishIt-with-Nancy\">github</a>) .</p>\n\n<pre><code class=\"c-like\">public class ServeAsset : NancyModule  \n    {\n        public ServeAsset():base(\"/assets\")\n        {\n            Get[\"/js/{name}\"] = parameters =&gt; CreateResponse(Bundle.JavaScript().RenderCached((string)parameters.name), Configuration.Instance.JavascriptMimeType);\n\n            Get[\"/css/{name}\"] = parameters =&gt; CreateResponse(Bundle.Css().RenderCached((string)parameters.name), Configuration.Instance.CssMimeType);\n        }\n\n        Response CreateResponse(string content, string contentType)\n        {\n            return Response\n                .FromStream(() =&gt; new MemoryStream(Encoding.UTF8.GetBytes(content)), contentType)\n                .WithHeader(\"Cache-Control\", \"max-age=45\");\n        }\n    }\n</code></pre>\n\n<p>Then added <code>@Html.Raw(Bundle.Css().RenderCachedAssetTag(\"bootstrap\"))</code> to my razor view, and by magic it works.</p>\n\n<p>As a side note, it will only minify if you're not in debug mode. So if you're application's webconfig has <code>&lt;compilation debug=\"true\" targetFramework=\"4.5\"&gt;</code> you may want flip it to false to see the minified files. </p>\n\n<p>This behavior can be overridden with the <code>.ForceRelease()</code> as part of your bundle. ex. <code>Bundle.Css().Add(\"~/Content/bootstrap.css\").ForceRelease().AsCached(\"bootstrap\", \"~/assets/css/bootstrap\");</code></p>\n\n<h2 id=\"conclusion\">Conclusion</h2>\n\n<p>Well after the work above I was finally generating minified files. SquishIt's ability to minify quickly is very nice. The way it manages files reminds me of the <a href=\"http://www.asp.net/mvc/tutorials/mvc-4/bundling-and-minification\">MVC4 Bundling</a>, but SquishIt allows for much greater control over the process.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1395554660408,"created_by":1,"updated_at":1396315427587,"updated_by":1,"published_at":1395555184840,"published_by":1},{"id":26,"uuid":"5e511653-6e97-4da2-8e90-55d32d65a6f9","title":"Custom error pages in Nancyfx (C# Web Framework)","slug":"custom-error-pages-in-nancy","markdown":"To do custom error pages in Nancy you must implement an IStatusCodeHandler. This class must provide 2 methods. HandlesStatusCode is a bool that basically should tell Nancy if this class will handle the status code. If this returns true then this class will be responsible for handling the request.\n\n\n```csharp \n\n public bool HandlesStatusCode(HttpStatusCode statusCode, NancyContext context)\n {\n   return (int)statusCode == 404;\n }\n\n public void Handle(HttpStatusCode statusCode, NancyContext context)\n {\n   var response = viewRenderer.RenderView(context, \"Your404View\");\n }\n \n\n```\n\nThe only problem with the above code (which I have seen throughout the net) is you basically have to implement different IStatusCodeHandlers for each type (or types) of status codes.\n\n\nWhat you can do is this *(or scroll to the end to see the final result)*....\n\nFirst add the following properties... _checks will be where we store the list of http requests we will handle...This is a static class so it will be shared in memory with the other objects of the same class.\n\nChecks will be the getter of this information, and viewRenderer will be the mechanism we will render the view.\n\n```\n\nprivate static IEnumerable<int> _checks = new List<int>(); \n\n        public static IEnumerable<int> Checks {  get { return _checks; } }\n\n        private IViewRenderer viewRenderer;\n\n```\nNext add an **IViewRenderer** to your constructor this will be dynamically injected by Nancy.\n\n```csharp\n\npublic CustomStatusCode(IViewRenderer viewRenderer)\n            {\n                this.viewRenderer = viewRenderer;\n            }\n\n```\n\nAfterwards we should add some methods so that people can add, and remove status codes from this store.\n\n\n```\n\n public static void AddCode(int code)\n        {\n            AddCode(new List<int>() {code});\n        }\n        public static void AddCode(IEnumerable<int> code)\n        {\n            _checks = _checks.Union(code);\n        }\n\n        public static void RemoveCode(int code)\n        {\n           RemoveCode(new List<int>() { code });\n        }\n        public static void RemoveCode(IEnumerable<int> code)\n        {\n            _checks = _checks.Except(code);\n        }\n\n```\nNow we have to tell Nancy what we are checking for:\n\n\n```csharp\n\npublic bool HandlesStatusCode(HttpStatusCode statusCode, NancyContext context)\n        {\n                return (_checks.Any(x => x == (int) statusCode));\n        }\n\n\n```\n\n...and finally we should probably handle the status codes. Below will render a view that is located in Codes/{httprequestnumber}...So for a 404 this will render Codes/404.cshtml (**Note:** if you are not using razor you may wish to change the filename extension.\n\nHow this works is simple, try to render the view if it cannot (ie. it cannot find the file or it runs into a problem) remove the http request type from our list and return the status code, nancy will take it from there.\n\n\n\n```csharp\n\npublic void Handle(HttpStatusCode statusCode, NancyContext context)\n        {\n            try\n            {\n                var response = viewRenderer.RenderView(context, \"/Codes/\" + (int)statusCode + \".cshtml\");\n                response.StatusCode = statusCode;\n                context.Response = response;\n            }\n            catch (Exception)\n            {\n\n                RemoveCode((int)statusCode);\n                context.Response.StatusCode = statusCode;\n            }\n        }\n\n\n```\n\nYou will need to make the necessary view, and you will also need to give it the http codes you wish it to handle. In my case I add them from the web.config during start up. I also use a module to add/remove status codes at will (ill provide a sample of that module below)...\n\n\n## Final Result \n\n### IStatusCodeHandler Class:\n\n```csharp\n\npublic class CustomStatusCode : IStatusCodeHandler\n    {\n        private static IEnumerable<int> _checks = new List<int>(); \n\n        public static IEnumerable<int> Checks {  get { return _checks; } }\n\n        private IViewRenderer viewRenderer;\n\n           public CustomStatusCode(IViewRenderer viewRenderer)\n            {\n                this.viewRenderer = viewRenderer;\n            }\n\n        public bool HandlesStatusCode(HttpStatusCode statusCode, NancyContext context)\n        {\n                return (_checks.Any(x => x == (int) statusCode));\n        }\n        \n        public static void AddCode(int code)\n        {\n            AddCode(new List<int>() {code});\n        }\n        public static void AddCode(IEnumerable<int> code)\n        {\n            _checks = _checks.Union(code);\n        }\n\n        public static void RemoveCode(int code)\n        {\n           RemoveCode(new List<int>() { code });\n        }\n        public static void RemoveCode(IEnumerable<int> code)\n        {\n            _checks = _checks.Except(code);\n        }\n\n        public static void Disable()\n        {\n            _checks = new List<int>();\n        }\n\n        public void Handle(HttpStatusCode statusCode, NancyContext context)\n        {\n            try\n            {\n                var response = viewRenderer.RenderView(context, \"/Codes/\" + (int) statusCode + \".cshtml\");\n                response.StatusCode = statusCode;\n                context.Response = response;\n            }\n            catch (Exception)\n            {\n\n                RemoveCode((int)statusCode);\n                context.Response.StatusCode = statusCode;\n            }\n        }\n    }\n\n\n```\n\n### Module that provides flexability:\n\n`/error/add/404` will add 404's `/error/remove/404` will remove 404's\n\nYou could make a querystring accept an array if you wish, in my case this isn't needed.\n\n```csharp\n\npublic class StatusCodesModule : NancyModule\n    {\n        public StatusCodesModule()\n            : base(\"error\")\n        {\n            Get[\"/add/{code}\"] = x =>\n            {\n                CustomStatusCode.AddCode(x.code);\n                return \"done\";\n            };\n\n            Get[\"/remove/{code}\"] = x =>\n            {\n                CustomStatusCode.RemoveCode(x.code);\n                return \"done\";\n            };\n\n\n        }\n    }\n\n\n\n\n```\n\n### Bootstrapper startup\n\n```csharp\n\npublic class Bootstrapper : DefaultNancyBootstrapper\n    {\n\n       \n        protected override void ApplicationStartup(TinyIoCContainer container, IPipelines pipelines)\n        {\n            \n            CustomStatusCode.AddCode(404);\n            CustomStatusCode.AddCode(ConfigurationManager.AppSettings[\"HttpErrorCodes\"].Split(',').Select(x => int.Parse(x)));\n           \n\n            base.ApplicationStartup(container, pipelines);\n        }\n        \n    }\n\n\n```","html":"<p>To do custom error pages in Nancy you must implement an IStatusCodeHandler. This class must provide 2 methods. HandlesStatusCode is a bool that basically should tell Nancy if this class will handle the status code. If this returns true then this class will be responsible for handling the request.</p>\n\n<pre><code class=\"csharp \"> public bool HandlesStatusCode(HttpStatusCode statusCode, NancyContext context)\n {\n   return (int)statusCode == 404;\n }\n\n public void Handle(HttpStatusCode statusCode, NancyContext context)\n {\n   var response = viewRenderer.RenderView(context, \"Your404View\");\n }\n</code></pre>\n\n<p>The only problem with the above code (which I have seen throughout the net) is you basically have to implement different IStatusCodeHandlers for each type (or types) of status codes.</p>\n\n<p>What you can do is this <em>(or scroll to the end to see the final result)</em>....</p>\n\n<p>First add the following properties... _checks will be where we store the list of http requests we will handle...This is a static class so it will be shared in memory with the other objects of the same class.</p>\n\n<p>Checks will be the getter of this information, and viewRenderer will be the mechanism we will render the view.</p>\n\n<pre><code>private static IEnumerable&lt;int&gt; _checks = new List&lt;int&gt;(); \n\n        public static IEnumerable&lt;int&gt; Checks {  get { return _checks; } }\n\n        private IViewRenderer viewRenderer;\n</code></pre>\n\n<p>Next add an <strong>IViewRenderer</strong> to your constructor this will be dynamically injected by Nancy.</p>\n\n<pre><code class=\"csharp\">public CustomStatusCode(IViewRenderer viewRenderer)  \n            {\n                this.viewRenderer = viewRenderer;\n            }\n</code></pre>\n\n<p>Afterwards we should add some methods so that people can add, and remove status codes from this store.</p>\n\n<pre><code> public static void AddCode(int code)\n        {\n            AddCode(new List&lt;int&gt;() {code});\n        }\n        public static void AddCode(IEnumerable&lt;int&gt; code)\n        {\n            _checks = _checks.Union(code);\n        }\n\n        public static void RemoveCode(int code)\n        {\n           RemoveCode(new List&lt;int&gt;() { code });\n        }\n        public static void RemoveCode(IEnumerable&lt;int&gt; code)\n        {\n            _checks = _checks.Except(code);\n        }\n</code></pre>\n\n<p>Now we have to tell Nancy what we are checking for:</p>\n\n<pre><code class=\"csharp\">public bool HandlesStatusCode(HttpStatusCode statusCode, NancyContext context)  \n        {\n                return (_checks.Any(x =&gt; x == (int) statusCode));\n        }\n</code></pre>\n\n<p>...and finally we should probably handle the status codes. Below will render a view that is located in Codes/{httprequestnumber}...So for a 404 this will render Codes/404.cshtml (<strong>Note:</strong> if you are not using razor you may wish to change the filename extension.</p>\n\n<p>How this works is simple, try to render the view if it cannot (ie. it cannot find the file or it runs into a problem) remove the http request type from our list and return the status code, nancy will take it from there.</p>\n\n<pre><code class=\"csharp\">public void Handle(HttpStatusCode statusCode, NancyContext context)  \n        {\n            try\n            {\n                var response = viewRenderer.RenderView(context, \"/Codes/\" + (int)statusCode + \".cshtml\");\n                response.StatusCode = statusCode;\n                context.Response = response;\n            }\n            catch (Exception)\n            {\n\n                RemoveCode((int)statusCode);\n                context.Response.StatusCode = statusCode;\n            }\n        }\n</code></pre>\n\n<p>You will need to make the necessary view, and you will also need to give it the http codes you wish it to handle. In my case I add them from the web.config during start up. I also use a module to add/remove status codes at will (ill provide a sample of that module below)...</p>\n\n<h2 id=\"finalresult\">Final Result</h2>\n\n<h3 id=\"istatuscodehandlerclass\">IStatusCodeHandler Class:</h3>\n\n<pre><code class=\"csharp\">public class CustomStatusCode : IStatusCodeHandler  \n    {\n        private static IEnumerable&lt;int&gt; _checks = new List&lt;int&gt;(); \n\n        public static IEnumerable&lt;int&gt; Checks {  get { return _checks; } }\n\n        private IViewRenderer viewRenderer;\n\n           public CustomStatusCode(IViewRenderer viewRenderer)\n            {\n                this.viewRenderer = viewRenderer;\n            }\n\n        public bool HandlesStatusCode(HttpStatusCode statusCode, NancyContext context)\n        {\n                return (_checks.Any(x =&gt; x == (int) statusCode));\n        }\n\n        public static void AddCode(int code)\n        {\n            AddCode(new List&lt;int&gt;() {code});\n        }\n        public static void AddCode(IEnumerable&lt;int&gt; code)\n        {\n            _checks = _checks.Union(code);\n        }\n\n        public static void RemoveCode(int code)\n        {\n           RemoveCode(new List&lt;int&gt;() { code });\n        }\n        public static void RemoveCode(IEnumerable&lt;int&gt; code)\n        {\n            _checks = _checks.Except(code);\n        }\n\n        public static void Disable()\n        {\n            _checks = new List&lt;int&gt;();\n        }\n\n        public void Handle(HttpStatusCode statusCode, NancyContext context)\n        {\n            try\n            {\n                var response = viewRenderer.RenderView(context, \"/Codes/\" + (int) statusCode + \".cshtml\");\n                response.StatusCode = statusCode;\n                context.Response = response;\n            }\n            catch (Exception)\n            {\n\n                RemoveCode((int)statusCode);\n                context.Response.StatusCode = statusCode;\n            }\n        }\n    }\n</code></pre>\n\n<h3 id=\"modulethatprovidesflexability\">Module that provides flexability:</h3>\n\n<p><code>/error/add/404</code> will add 404's <code>/error/remove/404</code> will remove 404's</p>\n\n<p>You could make a querystring accept an array if you wish, in my case this isn't needed.</p>\n\n<pre><code class=\"csharp\">public class StatusCodesModule : NancyModule  \n    {\n        public StatusCodesModule()\n            : base(\"error\")\n        {\n            Get[\"/add/{code}\"] = x =&gt;\n            {\n                CustomStatusCode.AddCode(x.code);\n                return \"done\";\n            };\n\n            Get[\"/remove/{code}\"] = x =&gt;\n            {\n                CustomStatusCode.RemoveCode(x.code);\n                return \"done\";\n            };\n\n\n        }\n    }\n</code></pre>\n\n<h3 id=\"bootstrapperstartup\">Bootstrapper startup</h3>\n\n<pre><code class=\"csharp\">public class Bootstrapper : DefaultNancyBootstrapper  \n    {\n\n\n        protected override void ApplicationStartup(TinyIoCContainer container, IPipelines pipelines)\n        {\n\n            CustomStatusCode.AddCode(404);\n            CustomStatusCode.AddCode(ConfigurationManager.AppSettings[\"HttpErrorCodes\"].Split(',').Select(x =&gt; int.Parse(x)));\n\n\n            base.ApplicationStartup(container, pipelines);\n        }\n\n    }\n</code></pre>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1396312854050,"created_by":1,"updated_at":1396419488670,"updated_by":1,"published_at":1396315283772,"published_by":1},{"id":27,"uuid":"db44fd76-ac73-4fc7-8c87-df2279e30fff","title":"Value types vs Reference Types in C#","slug":"value-types-vs-reference-types-in-c-and-why-it-matters","markdown":"In C# there are two kinds of types...Value and reference...\n\n## What are Reference Types?\n\nReference types in C# are mostly objects and strings. These are types when placed on a stack refer to a memory address in the heap.\n\n## What are Value Types?\n\nValue types make up the bulk of types in c#. These include int, float, double, long, bool, etc. These types values are only stored in the stack.\n\n## Stack? Heap? What's the difference?\n\nTo put it short, the **stack** is a series of memory blocks (like a scratch pad) that is used for the current thread. The stack is used for basic property data access. Accessing the stack is very rapid, as its only used for trivial data. The heap is an area of memory for dynamic memory allocation. The heap is used to store things in data that are not value types, usually objects and strings. The heap is slower to access, but larger in size.\n\n## Reference type tripping points\n\nReference types are basically pointers. These pointers can trip you up in interesting ways. For example suppose you have a string called MyName:\n\n```\nvar MyName = \"name\";\n\n```\n\nand you decide to make someone else's name the same as you're name \n\n```\n\nvar OtherName = MyName;\n\n```\n\nWhen you change MyName to be something else, you will also change OtherName.\n\nThis is because strings are a reference type. On the stack the string is a pointer reference to the heap. When you make OtherName equal you are pointing it to the same memory address as MyName.\n\n```\nvar MyName = \"name\";\nvar OtherName = MyName;\nMyName = \"Joe\"\n//OtherName will now equal Joe\n\n```\n\nThis is also the same for array's if you make 1 array equal another, you will not have 2 array's with the same value. You will have 2 variables that point to the same array.\n\n### So the same must work for value types right?\n\n**No**\n\nIf you have 2 ints and assign one int to equal the other. The value on the stack will be copied to that int, and since the stack value is the actual value they will be independent of each other.\n\n\n## Boxing and Un-Boxing\n\nWhen you have a value type and you want it on the heap you must convert it to an object. This is called boxing\n\n```\nvar val = 3;\nvar x = (object)val;\n\n```\n\nHowever once you do this, the two variables will be independent from each other. So if you change x you won't change val and vice-versa.\n\nTo get the object back on the stack you must cast it back into an int. This is called un-boxing\n\n```\n\nvar y = (int)x;\n\n```\n\n","html":"<p>In C# there are two kinds of types...Value and reference...</p>\n\n<h2 id=\"whatarereferencetypes\">What are Reference Types?</h2>\n\n<p>Reference types in C# are mostly objects and strings. These are types when placed on a stack refer to a memory address in the heap.</p>\n\n<h2 id=\"whatarevaluetypes\">What are Value Types?</h2>\n\n<p>Value types make up the bulk of types in c#. These include int, float, double, long, bool, etc. These types values are only stored in the stack.</p>\n\n<h2 id=\"stackheapwhatsthedifference\">Stack? Heap? What's the difference?</h2>\n\n<p>To put it short, the <strong>stack</strong> is a series of memory blocks (like a scratch pad) that is used for the current thread. The stack is used for basic property data access. Accessing the stack is very rapid, as its only used for trivial data. The heap is an area of memory for dynamic memory allocation. The heap is used to store things in data that are not value types, usually objects and strings. The heap is slower to access, but larger in size.</p>\n\n<h2 id=\"referencetypetrippingpoints\">Reference type tripping points</h2>\n\n<p>Reference types are basically pointers. These pointers can trip you up in interesting ways. For example suppose you have a string called MyName:</p>\n\n<pre><code>var MyName = \"name\";\n</code></pre>\n\n<p>and you decide to make someone else's name the same as you're name </p>\n\n<pre><code>var OtherName = MyName;\n</code></pre>\n\n<p>When you change MyName to be something else, you will also change OtherName.</p>\n\n<p>This is because strings are a reference type. On the stack the string is a pointer reference to the heap. When you make OtherName equal you are pointing it to the same memory address as MyName.</p>\n\n<pre><code>var MyName = \"name\";  \nvar OtherName = MyName;  \nMyName = \"Joe\"  \n//OtherName will now equal Joe\n</code></pre>\n\n<p>This is also the same for array's if you make 1 array equal another, you will not have 2 array's with the same value. You will have 2 variables that point to the same array.</p>\n\n<h3 id=\"sothesamemustworkforvaluetypesright\">So the same must work for value types right?</h3>\n\n<p><strong>No</strong></p>\n\n<p>If you have 2 ints and assign one int to equal the other. The value on the stack will be copied to that int, and since the stack value is the actual value they will be independent of each other.</p>\n\n<h2 id=\"boxingandunboxing\">Boxing and Un-Boxing</h2>\n\n<p>When you have a value type and you want it on the heap you must convert it to an object. This is called boxing</p>\n\n<pre><code>var val = 3;  \nvar x = (object)val;\n</code></pre>\n\n<p>However once you do this, the two variables will be independent from each other. So if you change x you won't change val and vice-versa.</p>\n\n<p>To get the object back on the stack you must cast it back into an int. This is called un-boxing</p>\n\n<pre><code>var y = (int)x;\n</code></pre>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1397096479044,"created_by":1,"updated_at":1397096877672,"updated_by":1,"published_at":1397096877674,"published_by":1},{"id":28,"uuid":"3049df60-0b87-48c4-aace-c155fa648215","title":"Must have tool: LinqPad","slug":"must-have-tool-linqpad","markdown":"[LinqPad](http://linqpad.net) is an interactive C#/F#/VB.NET scratchpad that lets you run arbitrary C#/F#/VB.NET code, and also lets you query databases with linq.\n\n## What did that method do again?\n\nWe have all been there....its way past your bedtime, and you cannot for the life of you remember what happens when string.Concat is called. You could try to just run something quick in your project to find out, but that would take time to build. You could google the result, and hope you can find the answer quickly....Or you can open linqpad and run the method!\n\n![query result from linqpad ](/content/images/2014/Apr/linqpad.PNG)\n\nOk of course you would never forget about string.Concat, but what about a method in a .dll? Well it can do that too!\n\n## Quickly, I can't figure out the SQL Codez!\n\nOk so if you are like myself you probably suck at SQL...I was once good until I saw the Linq light...only dynamically creating linq queries is never as good as having real stored procedures. The [Linq Website](https://www.linqpad.net/WhyLINQBeatsSQL.aspx) has more examples of using SQL with linqpad than I could ever come up with.\n\nTo put it simply writing in linq is far more expressive than SQL. If I need to write a complex SQL query I usually Figure out the linq query, and when I am happy with the results, I click the SQL button. Magically linqpad returns the SQL code for the linq query!\n\n## Can I debug my dll's ran in LinqPad using Visual Studio?\n\nBelieve it or not...you can...Linqpad will easily import and run dll's. Once you have pointed linqpad to dll files, and imported the namespaces, you will be good to go. To attach visual studio as a debugger simply click debug, attach to process, and click on the linqpad process, with the proper project for debugging open. Once you start running your dll's in linqpad, the debugger will pickup what you are doing and stop the process at any linebreaks. The great part about this, is you can debug class libraries with linqpad without having to fire up a secondary project to run the code in.\n\n## TL;DR?\nLinqpad converts linq to sql, and runs your .NET code from a simple scratchpad...If you suck at sql, or you want to quickly test something LinqPad rocks!","html":"<p><a href=\"http://linqpad.net\">LinqPad</a> is an interactive C#/F#/VB.NET scratchpad that lets you run arbitrary C#/F#/VB.NET code, and also lets you query databases with linq.</p>\n\n<h2 id=\"whatdidthatmethoddoagain\">What did that method do again?</h2>\n\n<p>We have all been there....its way past your bedtime, and you cannot for the life of you remember what happens when string.Concat is called. You could try to just run something quick in your project to find out, but that would take time to build. You could google the result, and hope you can find the answer quickly....Or you can open linqpad and run the method!</p>\n\n<p><img src=\"/content/images/2014/Apr/linqpad.PNG\" alt=\"query result from linqpad \" /></p>\n\n<p>Ok of course you would never forget about string.Concat, but what about a method in a .dll? Well it can do that too!</p>\n\n<h2 id=\"quicklyicantfigureoutthesqlcodez\">Quickly, I can't figure out the SQL Codez!</h2>\n\n<p>Ok so if you are like myself you probably suck at SQL...I was once good until I saw the Linq light...only dynamically creating linq queries is never as good as having real stored procedures. The <a href=\"https://www.linqpad.net/WhyLINQBeatsSQL.aspx\">Linq Website</a> has more examples of using SQL with linqpad than I could ever come up with.</p>\n\n<p>To put it simply writing in linq is far more expressive than SQL. If I need to write a complex SQL query I usually Figure out the linq query, and when I am happy with the results, I click the SQL button. Magically linqpad returns the SQL code for the linq query!</p>\n\n<h2 id=\"canidebugmydllsraninlinqpadusingvisualstudio\">Can I debug my dll's ran in LinqPad using Visual Studio?</h2>\n\n<p>Believe it or not...you can...Linqpad will easily import and run dll's. Once you have pointed linqpad to dll files, and imported the namespaces, you will be good to go. To attach visual studio as a debugger simply click debug, attach to process, and click on the linqpad process, with the proper project for debugging open. Once you start running your dll's in linqpad, the debugger will pickup what you are doing and stop the process at any linebreaks. The great part about this, is you can debug class libraries with linqpad without having to fire up a secondary project to run the code in.</p>\n\n<h2 id=\"tldr\">TL;DR?</h2>\n\n<p>Linqpad converts linq to sql, and runs your .NET code from a simple scratchpad...If you suck at sql, or you want to quickly test something LinqPad rocks!</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1397530786341,"created_by":1,"updated_at":1397643763051,"updated_by":1,"published_at":1397603673976,"published_by":1},{"id":29,"uuid":"34404fa6-42b4-4430-88de-78a962f0f5dd","title":"ChromeOS: Gateway to portable productivity","slug":"chromeos-gateway-to-portable-productivity","markdown":"Up until the last few years the only devices on the market were all full operating system work horses. However the majority of us would easily sacrifice functionality for portability. This statement has been backed up by the increase of market demand for tablets and ultrabooks over the years.\n\n## Netbook Past\n\nWhen netbooks first came out they were running Window XP with an Intel Atom Processor. I was one of the early adopters, getting a first model Aspire One, and at the time I was blown away. I remember comparing it to the first ASUS EE, and the other offerings at the time.\n\nIn recent years netbooks have been replaced by ultrabooks, and tablets. Being a person that likes a physical keyboard I was put off from the tablets, and the ultrabooks always seemed expensive for a touch screen I was never going to use.\n\n## Power Users and tablets\n\nTaking a side step for a moment. I know I am more of a unique customer than most. I believe the keyboard will always be a faster mechanism to productivity than a touch screen. I cannot live without a physical keyboard. Most power users of computers usually have this kind of mentality. So the form factor of a netbook is more suitable than a tablet.\n\n### Browser Applications\n\nThe great part about the advances in web technologies over the few years is that most power applications have become browser oriented. Most of my development work can now be done in a browser, which expands my use of a low profile device. ChromeOS brings a natural browser experience to applications that can work both online, and offline.\n\n## Why ChromeOS?\n\nChromeOS has a great expanse of apps that can work both offline and online. The list of apps includes RDP clients, hundreds of workflow management tools, and various coding IDE's. Most Chromebooks are very portable, and very inexpensive. Plus the 7 second boot time, and 8 hour battery life (on average) is **amazing**.\n\n### Crouton for local development\n\nIf you wish to do offline development crouton (basically ubuntu Chroot) can provide you a more full operating system for Chrome. This is a great way to maintain the lightweight basic ChromeOS while having immediate access to a more full operating system experience. This is obviously a basic hack to the ChromeOS, but it provides a great way to create applications locally. I think most people who get a Chromebook are blown away at how much is possible without the ubuntu sideload.\n\n### Remote Desktop\n\nThe old school approach to coding on the go is still viable. The RDP experience (if you don't mind windows) provides a full desktop session remotely. For intensive coding projects on the go this was always my alternative for working on projects everywhere. ChromeOS has more than one RDP application in the Chrome store, and most of them do a great job.\n\n## tl;dr\nChromebooks offer inexpensive way to leverage both cloud, and offline technologies to provide productivity, without sacrificing portability.","html":"<p>Up until the last few years the only devices on the market were all full operating system work horses. However the majority of us would easily sacrifice functionality for portability. This statement has been backed up by the increase of market demand for tablets and ultrabooks over the years.</p>\n\n<h2 id=\"netbookpast\">Netbook Past</h2>\n\n<p>When netbooks first came out they were running Window XP with an Intel Atom Processor. I was one of the early adopters, getting a first model Aspire One, and at the time I was blown away. I remember comparing it to the first ASUS EE, and the other offerings at the time.</p>\n\n<p>In recent years netbooks have been replaced by ultrabooks, and tablets. Being a person that likes a physical keyboard I was put off from the tablets, and the ultrabooks always seemed expensive for a touch screen I was never going to use.</p>\n\n<h2 id=\"powerusersandtablets\">Power Users and tablets</h2>\n\n<p>Taking a side step for a moment. I know I am more of a unique customer than most. I believe the keyboard will always be a faster mechanism to productivity than a touch screen. I cannot live without a physical keyboard. Most power users of computers usually have this kind of mentality. So the form factor of a netbook is more suitable than a tablet.</p>\n\n<h3 id=\"browserapplications\">Browser Applications</h3>\n\n<p>The great part about the advances in web technologies over the few years is that most power applications have become browser oriented. Most of my development work can now be done in a browser, which expands my use of a low profile device. ChromeOS brings a natural browser experience to applications that can work both online, and offline.</p>\n\n<h2 id=\"whychromeos\">Why ChromeOS?</h2>\n\n<p>ChromeOS has a great expanse of apps that can work both offline and online. The list of apps includes RDP clients, hundreds of workflow management tools, and various coding IDE's. Most Chromebooks are very portable, and very inexpensive. Plus the 7 second boot time, and 8 hour battery life (on average) is <strong>amazing</strong>.</p>\n\n<h3 id=\"croutonforlocaldevelopment\">Crouton for local development</h3>\n\n<p>If you wish to do offline development crouton (basically ubuntu Chroot) can provide you a more full operating system for Chrome. This is a great way to maintain the lightweight basic ChromeOS while having immediate access to a more full operating system experience. This is obviously a basic hack to the ChromeOS, but it provides a great way to create applications locally. I think most people who get a Chromebook are blown away at how much is possible without the ubuntu sideload.</p>\n\n<h3 id=\"remotedesktop\">Remote Desktop</h3>\n\n<p>The old school approach to coding on the go is still viable. The RDP experience (if you don't mind windows) provides a full desktop session remotely. For intensive coding projects on the go this was always my alternative for working on projects everywhere. ChromeOS has more than one RDP application in the Chrome store, and most of them do a great job.</p>\n\n<h2 id=\"tldr\">tl;dr</h2>\n\n<p>Chromebooks offer inexpensive way to leverage both cloud, and offline technologies to provide productivity, without sacrificing portability.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1398801601523,"created_by":1,"updated_at":1398801606066,"updated_by":1,"published_at":1398801606067,"published_by":1},{"id":30,"uuid":"3b3ed1d9-d5ce-47f1-81cf-a06fc383baf9","title":"Watching the Watchers: Monitorama PDX 2014 Day One","slug":"watching-the-watchers-monitorama-day-one","markdown":"* [Day Two](https://blog.tommyparnell.com/watching-the-watchers-monitorama-pdx-2014-day-two/)\n\nI am here in lovely Portland Oregon attending [Monitorama](http://monitorama.com/). Monitorama is a 3 day open source monitoring convention.\n\nMonitorama had catered food, and drink. The food was plentiful and delicious, and the drinks were amazing.\n\nThere were 10 talks, I have made a quick summarization below. I don't have time to write in detail about each one, but I am sure you will get the gist from the basic summary.\n\n## Please, no More Minutes, Milliseconds, Monoliths... or Monitoring Tools!\n\nThe first talk from Adrian Crockford was about monitoring by the second as opposed to by the minute. [Gene Kim's notes](http://www.williamhertling.com/2014/05/adrian-cockcroft-on-monitoring-cloud.html) summarize it better than I do, but in short: focus more on monitoring tools for developers, monitor by the second, and learn to analyze the data properly. \n\n## Computers are a Sadness, I am the Cure\n\nJason Mickens provided the funnest talk of the day. I couldn't fully grasp the message, but In short Bane == NoSql, Cloud == Crazy Train and stop talking about map reduce.\n\n![](/content/images/2014/May/Screenshot-2014-05-06-at-9-52-14-AM.png)\n\n## Simple math to get some signal out of your noisy sea of data\n\nToufic Boubez Provided the third talk of the day. Talking about (not so) simple math around your data. He urges people to stop treating data as Gaussian, and truly understand how their data gets arranged.\n\nHe pushed for using algorithms with sliding means as a way to truely understand your data. Just remember you spent time collecting it, you should spend time analyzing it.\n\n## The Care and Feeding of Monitoring\n\nGreat talk from Katherine Daniels, about how everyone needs to work together better to monitor things. She noted that no one sets out to make bad decisions, but bad things sometimes happen because of decisions made. \n\n\n*We take some things, and put internets on them ~ Dan Slimmon*\n\nDan Slimmon's talked a lot about alarms. Smoke detectors people pay attention to, but no one pays attention to car alarms. \n\nHe talked a lot about how to actually use probability statistics to understand how often someone will get phone called on an actual issue or not.\n\n## Metrics 2.0\n\nThis was a strange, yet insightful talk about how metrics should be more self decriptive. Dieter Plaetinck wants people to try to use a new standard in [metrics](http://metrics20.org). I'm not sure how I feel about metrics 2.0, but I do agree that metric names can be ambiguous.\n\n## Our Most Wicked Problem\n\n...A talk about the diversity problems in the industry today. Ashe Dryden talked a lot about how women are far more excluded than included in IT. This was an insightful talk, about how we need to provide space to all of the women coming into IT.\n\n## The cost and complexity of reactive monitoring\n\nChris Baker talks a lot about how reactive monitoring is terrible, and proactive is the way to go. Most humans never run though a logical sequence of troubleshooting steps, but tend to blame the newest thing they put into production.\n\n## From Zero To Visibility\n\nBridget Kromhout finished up the day with a talk about setting up the monitoring in her company from nothing. Going from a bunch of random shell scripts, to a proper monitoring framework (nagios, graphite, statsd, pingdom, etc.). Some of the pain points she encountered were around budgetary restrictions.\n\n\n## After party\n\nThe after party was great, the music was quite loud which made it hard to talk to people. I talked quite a bit to the New Relic crew about what they were doing. The one thing I was blown away by was how welcoming everyone was, and how everyone were fighting the same problems in their respective companies.","html":"<ul>\n<li><a href=\"https://blog.tommyparnell.com/watching-the-watchers-monitorama-pdx-2014-day-two/\">Day Two</a></li>\n</ul>\n\n<p>I am here in lovely Portland Oregon attending <a href=\"http://monitorama.com/\">Monitorama</a>. Monitorama is a 3 day open source monitoring convention.</p>\n\n<p>Monitorama had catered food, and drink. The food was plentiful and delicious, and the drinks were amazing.</p>\n\n<p>There were 10 talks, I have made a quick summarization below. I don't have time to write in detail about each one, but I am sure you will get the gist from the basic summary.</p>\n\n<h2 id=\"pleasenomoreminutesmillisecondsmonolithsormonitoringtools\">Please, no More Minutes, Milliseconds, Monoliths... or Monitoring Tools!</h2>\n\n<p>The first talk from Adrian Crockford was about monitoring by the second as opposed to by the minute. <a href=\"http://www.williamhertling.com/2014/05/adrian-cockcroft-on-monitoring-cloud.html\">Gene Kim's notes</a> summarize it better than I do, but in short: focus more on monitoring tools for developers, monitor by the second, and learn to analyze the data properly. </p>\n\n<h2 id=\"computersareasadnessiamthecure\">Computers are a Sadness, I am the Cure</h2>\n\n<p>Jason Mickens provided the funnest talk of the day. I couldn't fully grasp the message, but In short Bane == NoSql, Cloud == Crazy Train and stop talking about map reduce.</p>\n\n<p><img src=\"/content/images/2014/May/Screenshot-2014-05-06-at-9-52-14-AM.png\" alt=\"\" /></p>\n\n<h2 id=\"simplemathtogetsomesignaloutofyournoisyseaofdata\">Simple math to get some signal out of your noisy sea of data</h2>\n\n<p>Toufic Boubez Provided the third talk of the day. Talking about (not so) simple math around your data. He urges people to stop treating data as Gaussian, and truly understand how their data gets arranged.</p>\n\n<p>He pushed for using algorithms with sliding means as a way to truely understand your data. Just remember you spent time collecting it, you should spend time analyzing it.</p>\n\n<h2 id=\"thecareandfeedingofmonitoring\">The Care and Feeding of Monitoring</h2>\n\n<p>Great talk from Katherine Daniels, about how everyone needs to work together better to monitor things. She noted that no one sets out to make bad decisions, but bad things sometimes happen because of decisions made. </p>\n\n<p><em>We take some things, and put internets on them ~ Dan Slimmon</em></p>\n\n<p>Dan Slimmon's talked a lot about alarms. Smoke detectors people pay attention to, but no one pays attention to car alarms. </p>\n\n<p>He talked a lot about how to actually use probability statistics to understand how often someone will get phone called on an actual issue or not.</p>\n\n<h2 id=\"metrics20\">Metrics 2.0</h2>\n\n<p>This was a strange, yet insightful talk about how metrics should be more self decriptive. Dieter Plaetinck wants people to try to use a new standard in <a href=\"http://metrics20.org\">metrics</a>. I'm not sure how I feel about metrics 2.0, but I do agree that metric names can be ambiguous.</p>\n\n<h2 id=\"ourmostwickedproblem\">Our Most Wicked Problem</h2>\n\n<p>...A talk about the diversity problems in the industry today. Ashe Dryden talked a lot about how women are far more excluded than included in IT. This was an insightful talk, about how we need to provide space to all of the women coming into IT.</p>\n\n<h2 id=\"thecostandcomplexityofreactivemonitoring\">The cost and complexity of reactive monitoring</h2>\n\n<p>Chris Baker talks a lot about how reactive monitoring is terrible, and proactive is the way to go. Most humans never run though a logical sequence of troubleshooting steps, but tend to blame the newest thing they put into production.</p>\n\n<h2 id=\"fromzerotovisibility\">From Zero To Visibility</h2>\n\n<p>Bridget Kromhout finished up the day with a talk about setting up the monitoring in her company from nothing. Going from a bunch of random shell scripts, to a proper monitoring framework (nagios, graphite, statsd, pingdom, etc.). Some of the pain points she encountered were around budgetary restrictions.</p>\n\n<h2 id=\"afterparty\">After party</h2>\n\n<p>The after party was great, the music was quite loud which made it hard to talk to people. I talked quite a bit to the New Relic crew about what they were doing. The one thing I was blown away by was how welcoming everyone was, and how everyone were fighting the same problems in their respective companies.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1399384408136,"created_by":1,"updated_at":1399475352641,"updated_by":1,"published_at":1399386114227,"published_by":1},{"id":31,"uuid":"30767be6-16b2-48da-9c85-57754564c578","title":"Watching the Watchers: Monitorama PDX 2014 Day Two","slug":"watching-the-watchers-monitorama-pdx-2014-day-two","markdown":"* [Day One](https://blog.tommyparnell.com/watching-the-watchers-monitorama-day-one/)\n\nDay 2 was full of math based paranoia, math, and puppet(s)....\n\n\n## Auditing all the things\": The future of smarter monitoring and detection\n\nJen Andre started off with a talk about auditd, and how to audit everything in your frinastructure. Using custom logging tools you can watch the command flow for every logged in session, even when the session su's to a different user.\n\n## Is There An Echo In Here?: Applying Audio DSP algorithms to monitoring\n\nDSP (Digital Signal Processing) applied to monitoring data, could convert a very noisey graph, into a very readable one as Noah Kantrowitz pointed out in the second talk of the day.\n\n## A Melange of Methods for Manipulating Monitored Data\n\nDr Neil J. Gunther talked about how he is applying maths (yes plural :P) to gathered data metrics. He points out that you should never trust your data (even if it was gathered acuratly), and always trust in your instincts. \n\n## The Final Crontab\n\nCrontabber is a jobs engine produced at Mozzilla. Selena Deckelmann talks about how it works, and why it is better than regular cron. The huge advantage to use it, is the jobs can have dependancies to each other.\n\n## This One Weird Time-Series Math Trick\n\nBaron Schwartz delivered a very math centric talk about using math (like sliding averages, holt-winters, etc.) to properly analize your data.\n\n## The Lifecycle of an Outage\n\nScott Sanders talks was about how hipchat, and hubot are coming together to help dealing with a problem. He noted at github the bots can embed graph data into hip chat that others can see as they hop online. He also talked about analyzing your processes after an outage, to improve the handling of future issues.\n\n## A whirlwind tour of Etsy's monitoring stack\n\nEtsy is able to deploy their application at any moment in time. Doing this requires both great CI tools, but also even better monitoring tools. Having power tools like ganglia, graphite, splunk, logstash. They are able to gain great insight into their application.\n\n## Wiff: The Wayfair Network Sniffer\n\nWireshark as a Service, wiff is a network traffic logging tool developed at wayfair. Able to log traffic throughout the network layer, wiff is able to help you understand your network traffic. \n\nAccording to the presenter Dan Rowe, wiff helped wayfair detect a bug in their cookie generating algorithm.\n\n## Web performance observability\n\n[Web Rockit](http://webrockit.io/) is a simple tool that detects web loading performace. The tool uses Phantom.js (headless webkit browser) to load the page and gather statistics during the load. These statistics can help you determine what is going on when your webpage loads. \n\n## Lightning Talks\n\nThe one talk that stood out to me at the lightning talks is never manage your software like a [17th century ship](http://pete.io/Jra5).\n\n## Puppet Afterparty\n\nWhile the line for the beer was long, and the food was in short supply the puppet party was amazing. Ping pong filled the air, whilst tech nerds played board games. The people that work at puppet were very friendly and eager to talk about programming. \n","html":"<ul>\n<li><a href=\"https://blog.tommyparnell.com/watching-the-watchers-monitorama-day-one/\">Day One</a></li>\n</ul>\n\n<p>Day 2 was full of math based paranoia, math, and puppet(s)....</p>\n\n<h2 id=\"auditingallthethingsthefutureofsmartermonitoringanddetection\">Auditing all the things\": The future of smarter monitoring and detection</h2>\n\n<p>Jen Andre started off with a talk about auditd, and how to audit everything in your frinastructure. Using custom logging tools you can watch the command flow for every logged in session, even when the session su's to a different user.</p>\n\n<h2 id=\"isthereanechoinhereapplyingaudiodspalgorithmstomonitoring\">Is There An Echo In Here?: Applying Audio DSP algorithms to monitoring</h2>\n\n<p>DSP (Digital Signal Processing) applied to monitoring data, could convert a very noisey graph, into a very readable one as Noah Kantrowitz pointed out in the second talk of the day.</p>\n\n<h2 id=\"amelangeofmethodsformanipulatingmonitoreddata\">A Melange of Methods for Manipulating Monitored Data</h2>\n\n<p>Dr Neil J. Gunther talked about how he is applying maths (yes plural :P) to gathered data metrics. He points out that you should never trust your data (even if it was gathered acuratly), and always trust in your instincts. </p>\n\n<h2 id=\"thefinalcrontab\">The Final Crontab</h2>\n\n<p>Crontabber is a jobs engine produced at Mozzilla. Selena Deckelmann talks about how it works, and why it is better than regular cron. The huge advantage to use it, is the jobs can have dependancies to each other.</p>\n\n<h2 id=\"thisoneweirdtimeseriesmathtrick\">This One Weird Time-Series Math Trick</h2>\n\n<p>Baron Schwartz delivered a very math centric talk about using math (like sliding averages, holt-winters, etc.) to properly analize your data.</p>\n\n<h2 id=\"thelifecycleofanoutage\">The Lifecycle of an Outage</h2>\n\n<p>Scott Sanders talks was about how hipchat, and hubot are coming together to help dealing with a problem. He noted at github the bots can embed graph data into hip chat that others can see as they hop online. He also talked about analyzing your processes after an outage, to improve the handling of future issues.</p>\n\n<h2 id=\"awhirlwindtourofetsysmonitoringstack\">A whirlwind tour of Etsy's monitoring stack</h2>\n\n<p>Etsy is able to deploy their application at any moment in time. Doing this requires both great CI tools, but also even better monitoring tools. Having power tools like ganglia, graphite, splunk, logstash. They are able to gain great insight into their application.</p>\n\n<h2 id=\"wiffthewayfairnetworksniffer\">Wiff: The Wayfair Network Sniffer</h2>\n\n<p>Wireshark as a Service, wiff is a network traffic logging tool developed at wayfair. Able to log traffic throughout the network layer, wiff is able to help you understand your network traffic. </p>\n\n<p>According to the presenter Dan Rowe, wiff helped wayfair detect a bug in their cookie generating algorithm.</p>\n\n<h2 id=\"webperformanceobservability\">Web performance observability</h2>\n\n<p><a href=\"http://webrockit.io/\">Web Rockit</a> is a simple tool that detects web loading performace. The tool uses Phantom.js (headless webkit browser) to load the page and gather statistics during the load. These statistics can help you determine what is going on when your webpage loads. </p>\n\n<h2 id=\"lightningtalks\">Lightning Talks</h2>\n\n<p>The one talk that stood out to me at the lightning talks is never manage your software like a <a href=\"http://pete.io/Jra5\">17th century ship</a>.</p>\n\n<h2 id=\"puppetafterparty\">Puppet Afterparty</h2>\n\n<p>While the line for the beer was long, and the food was in short supply the puppet party was amazing. Ping pong filled the air, whilst tech nerds played board games. The people that work at puppet were very friendly and eager to talk about programming. </p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1399474135521,"created_by":1,"updated_at":1399475299180,"updated_by":1,"published_at":1399475071804,"published_by":1},{"id":32,"uuid":"40a9dd14-af70-4c85-83ea-7b104ef9e7d2","title":"Must Have Tool: NDepend","slug":"must-have-tool-ndepend","markdown":"Code quality tooling has become a bigger, and bigger industry. Tools like [Resharper](http://www.jetbrains.com/resharper/), and [stylecop](http://stylecop.codeplex.com/releases/view/79972) have been telling us how bad us human beings are at developing code.\n\nThe one problem I have always had with these tools is they dont go above and beyond to help you understand your code at a higher level.\n\n\n## So what is NDepend?\n\n![NDepend Logo](/content/images/2014/May/ndep.PNG)\n\nAccording to [their website](http://www.ndepend.com/Features.aspx) NDepend does everything from code rules, code querying, comparing builds, CI reporting, complexity diagramming, and the list goes on and on.\n\nWhen I first heard of it, I assume it was more resharper, and less stylecop, but I was wrong.\n\n## My Code Quality Beginnings...\n\nBefore I go on about NDepend I have to tell you my history with code quality tools. \n\n### JS Lint == /sadface \n\nI first learned of code quality tools, when I heard about [JSLint](http://www.jslint.com/). As JavaScript was my first programming language, I naturally thought I was a amazing at it. However being a weakly type language, with horrible origins, it was easy to make bad code.\n\nThe first code I pumped into JS lint returned with thousands of changes I needed to make, and I wasn't sure where to start. JSLint did a good job of destroying my ego, and de-motivating me as a human being. I took personal offense to it, even though it was trying to help me. Furthermore because it didn't really integrate into my IDE, it was harder for me to track down issues.\n\n### Stylecop \n\n![](/content/images/2014/May/91wmm.jpg)\n\nMy next attempt at using code quality tools was stylecop. Stylecop is a simple C# visual studio plugin that tells you where your code does not follow best practices. The first time I ran my code though stylecop it threw back over 700 warnings. The fact that it found so much to change was great, but the fact that everything was a warning, and nothing was an error was very concerning. Especially since I knew some bad code was in that codebase.\n\nAlso with the overall lack of visualization stylecop was less than perfect. You would have to double click on every warning, and hope it brought you to the proper offending code.\n\n### Mono.Gendarme\n\nSo recently I started using Gendarme to do code analyzation. I commit code, [jenkins](http://jenkins-ci.org/) builds it, gendarme analyzes it, and jenkins would host my gendarme graphs. This was great, because jenkins could show the code gendarme was complaining about. Gendarme does not make everything warnings, and it does a good job at analyzing code.\n\nMy major problem with this, is that I'd have to commit bad code to the code base, then go back and fix the problems. Instead of fixing them before they landed in jenkins lap.\n\n### Resharper\n\n\nNow before I go on I have to mention Resharper. Resharper is a developer productivity tool that uses a lot of coding standards/rules to make sure your code does not suck. However this is no replacement for a true code quality tool. Resharper is more about productivity (fixing lambdas, making sure your linq statements are readable, etc.). The big difference is that Resharper lacks in the reporting deparment, it does not capture trends, and does not enforce certain best practice rules. \n\nResharper only looks at source code, where as most other static analysis tools also look at compiled IL code as well.\n\n## NDepend: First Impressions\n\n>NDepend runs extremely fast, and it never gets in your way.\n\nSo I when first fired up Visual Studio, and started using NDepend I was blown away with the performance. NDepend Runs extremely fast, and never crashes visual studio.  I needed a few minutes to process what I was looking at, and before long I realized NDepend had summerized my whole code base into one very sweet dashboard. As I clicked around the fun started to really begin...\n\n\n![](/content/images/2014/May/ndepdash.PNG)\n\n\n![Sample NDepend Dasbboard](/content/images/2014/May/NDependDash.PNG)\n\n\n\n## NDepend: Organized Code Quality\n\nSo the major feature I was blown away by with NDepend was how clean, and organized the code rules are. The tool really tells you which things you need to fix **now**, and which things can wait. You can easily turn rules on, and off with a click a checkbox. Everything is grouped together nicely. \n\n![Code Quality dashboard](/content/images/2014/May/errorsOrganized.PNG)\n\n>NDepend uses a code querying engine (basically `linqTo<YourCodeHere>`).\n\n The code quality rules, uses the NDepends querying engine to get your code. When you click on a rule the Linq query used will be displayed in a separate window. You can use this window to create your own rules, using the same querying engine. The following is a query to find code that should not be declared public.\n \n<pre>\n //<Name>Avoid public methods not publicly visible</Name>\n// Matched methods are declared public but are not publicly visible by assemblies consumers.\n// Their visibility level must be decreased.\n\nwarnif count > 0\nfrom m in JustMyCode.Methods where \n   !m.IsPubliclyVisible && m.IsPublic &&\n\n   // Eliminate virtual methods\n   !m.IsVirtual &&\n   // Eliminate interface and delegate types\n   !m.ParentType.IsInterface &&\n   !m.ParentType.IsDelegate &&\n   // Eliminate default constructors\n   !(m.IsConstructor && m.NbParameters == 0) &&\n   // Eliminate operators that must be declared public\n   !m.IsOperator &&\n   // Eliminate methods generated by compiler\n   !m.IsGeneratedByCompiler \nselect m\n\n</pre>\n\n## NDepend: Code Dependency Management\n\nThe other feature, and its probably more of a series of features is how NDepend manages code dependency. This does this with some awesome interactive graphs. The [documents](http://www.ndepend.com/Doc_VS_Arch.aspx#Dep) show pretty much all the graphs, and I wont get into it all, but from a high level they provide great visualizations of your code. \n\n>Graphing everything from class inheritance, to dependency graphs NDepend brings a new level of graphing to code quality tools.\n\nThe tool allows you to find poor architectural decisions, and helps you correct them in the early days. Before the bad design decisions really bite you.\n \n## But wait there's more!\n\nIf you thought this was a simple visual studio plugin, you would be wrong.\n\n>Having code quality in the build system is a must. I have always made sure code quality was also being measured in my CI pipline, and you should to.\n\nNDepend plugs into your build system to provide long term trend reporting. These reports can include LOC trends, which are compared against rule violation trends. NDepend reports can show your Test code coverage, code complexity, and code composition as your application matures.\n\nWith an optional separate GUI, command line tool, and pluggable rules engine, NDepend provides a new level of code quality management.\n\n\n## tl;dr?\n\nNDepend is a code quality tool that really shows your code smells in new ways. with long term trend reporting, heat maps, and more graphs than you will ever need. NDepend will help your team grow a codebase that is clean, and free from dodgy code.","html":"<p>Code quality tooling has become a bigger, and bigger industry. Tools like <a href=\"http://www.jetbrains.com/resharper/\">Resharper</a>, and <a href=\"http://stylecop.codeplex.com/releases/view/79972\">stylecop</a> have been telling us how bad us human beings are at developing code.</p>\n\n<p>The one problem I have always had with these tools is they dont go above and beyond to help you understand your code at a higher level.</p>\n\n<h2 id=\"sowhatisndepend\">So what is NDepend?</h2>\n\n<p><img src=\"/content/images/2014/May/ndep.PNG\" alt=\"NDepend Logo\" /></p>\n\n<p>According to <a href=\"http://www.ndepend.com/Features.aspx\">their website</a> NDepend does everything from code rules, code querying, comparing builds, CI reporting, complexity diagramming, and the list goes on and on.</p>\n\n<p>When I first heard of it, I assume it was more resharper, and less stylecop, but I was wrong.</p>\n\n<h2 id=\"mycodequalitybeginnings\">My Code Quality Beginnings...</h2>\n\n<p>Before I go on about NDepend I have to tell you my history with code quality tools. </p>\n\n<h3 id=\"jslintsadface\">JS Lint == /sadface</h3>\n\n<p>I first learned of code quality tools, when I heard about <a href=\"http://www.jslint.com/\">JSLint</a>. As JavaScript was my first programming language, I naturally thought I was a amazing at it. However being a weakly type language, with horrible origins, it was easy to make bad code.</p>\n\n<p>The first code I pumped into JS lint returned with thousands of changes I needed to make, and I wasn't sure where to start. JSLint did a good job of destroying my ego, and de-motivating me as a human being. I took personal offense to it, even though it was trying to help me. Furthermore because it didn't really integrate into my IDE, it was harder for me to track down issues.</p>\n\n<h3 id=\"stylecop\">Stylecop</h3>\n\n<p><img src=\"/content/images/2014/May/91wmm.jpg\" alt=\"\" /></p>\n\n<p>My next attempt at using code quality tools was stylecop. Stylecop is a simple C# visual studio plugin that tells you where your code does not follow best practices. The first time I ran my code though stylecop it threw back over 700 warnings. The fact that it found so much to change was great, but the fact that everything was a warning, and nothing was an error was very concerning. Especially since I knew some bad code was in that codebase.</p>\n\n<p>Also with the overall lack of visualization stylecop was less than perfect. You would have to double click on every warning, and hope it brought you to the proper offending code.</p>\n\n<h3 id=\"monogendarme\">Mono.Gendarme</h3>\n\n<p>So recently I started using Gendarme to do code analyzation. I commit code, <a href=\"http://jenkins-ci.org/\">jenkins</a> builds it, gendarme analyzes it, and jenkins would host my gendarme graphs. This was great, because jenkins could show the code gendarme was complaining about. Gendarme does not make everything warnings, and it does a good job at analyzing code.</p>\n\n<p>My major problem with this, is that I'd have to commit bad code to the code base, then go back and fix the problems. Instead of fixing them before they landed in jenkins lap.</p>\n\n<h3 id=\"resharper\">Resharper</h3>\n\n<p>Now before I go on I have to mention Resharper. Resharper is a developer productivity tool that uses a lot of coding standards/rules to make sure your code does not suck. However this is no replacement for a true code quality tool. Resharper is more about productivity (fixing lambdas, making sure your linq statements are readable, etc.). The big difference is that Resharper lacks in the reporting deparment, it does not capture trends, and does not enforce certain best practice rules. </p>\n\n<p>Resharper only looks at source code, where as most other static analysis tools also look at compiled IL code as well.</p>\n\n<h2 id=\"ndependfirstimpressions\">NDepend: First Impressions</h2>\n\n<blockquote>\n  <p>NDepend runs extremely fast, and it never gets in your way.</p>\n</blockquote>\n\n<p>So I when first fired up Visual Studio, and started using NDepend I was blown away with the performance. NDepend Runs extremely fast, and never crashes visual studio.  I needed a few minutes to process what I was looking at, and before long I realized NDepend had summerized my whole code base into one very sweet dashboard. As I clicked around the fun started to really begin...</p>\n\n<p><img src=\"/content/images/2014/May/ndepdash.PNG\" alt=\"\" /></p>\n\n<p><img src=\"/content/images/2014/May/NDependDash.PNG\" alt=\"Sample NDepend Dasbboard\" /></p>\n\n<h2 id=\"ndependorganizedcodequality\">NDepend: Organized Code Quality</h2>\n\n<p>So the major feature I was blown away by with NDepend was how clean, and organized the code rules are. The tool really tells you which things you need to fix <strong>now</strong>, and which things can wait. You can easily turn rules on, and off with a click a checkbox. Everything is grouped together nicely. </p>\n\n<p><img src=\"/content/images/2014/May/errorsOrganized.PNG\" alt=\"Code Quality dashboard\" /></p>\n\n<blockquote>\n  <p>NDepend uses a code querying engine (basically <code>linqTo&lt;YourCodeHere&gt;</code>).</p>\n</blockquote>\n\n<p>The code quality rules, uses the NDepends querying engine to get your code. When you click on a rule the Linq query used will be displayed in a separate window. You can use this window to create your own rules, using the same querying engine. The following is a query to find code that should not be declared public.</p>\n\n<pre>\n //<Name>Avoid public methods not publicly visible</Name>\n// Matched methods are declared public but are not publicly visible by assemblies consumers.\n// Their visibility level must be decreased.\n\nwarnif count > 0\nfrom m in JustMyCode.Methods where \n   !m.IsPubliclyVisible && m.IsPublic &&\n\n   // Eliminate virtual methods\n   !m.IsVirtual &&\n   // Eliminate interface and delegate types\n   !m.ParentType.IsInterface &&\n   !m.ParentType.IsDelegate &&\n   // Eliminate default constructors\n   !(m.IsConstructor && m.NbParameters == 0) &&\n   // Eliminate operators that must be declared public\n   !m.IsOperator &&\n   // Eliminate methods generated by compiler\n   !m.IsGeneratedByCompiler \nselect m\n\n</pre>\n\n<h2 id=\"ndependcodedependencymanagement\">NDepend: Code Dependency Management</h2>\n\n<p>The other feature, and its probably more of a series of features is how NDepend manages code dependency. This does this with some awesome interactive graphs. The <a href=\"http://www.ndepend.com/Doc_VS_Arch.aspx#Dep\">documents</a> show pretty much all the graphs, and I wont get into it all, but from a high level they provide great visualizations of your code. </p>\n\n<blockquote>\n  <p>Graphing everything from class inheritance, to dependency graphs NDepend brings a new level of graphing to code quality tools.</p>\n</blockquote>\n\n<p>The tool allows you to find poor architectural decisions, and helps you correct them in the early days. Before the bad design decisions really bite you.</p>\n\n<h2 id=\"butwaittheresmore\">But wait there's more!</h2>\n\n<p>If you thought this was a simple visual studio plugin, you would be wrong.</p>\n\n<blockquote>\n  <p>Having code quality in the build system is a must. I have always made sure code quality was also being measured in my CI pipline, and you should to.</p>\n</blockquote>\n\n<p>NDepend plugs into your build system to provide long term trend reporting. These reports can include LOC trends, which are compared against rule violation trends. NDepend reports can show your Test code coverage, code complexity, and code composition as your application matures.</p>\n\n<p>With an optional separate GUI, command line tool, and pluggable rules engine, NDepend provides a new level of code quality management.</p>\n\n<h2 id=\"tldr\">tl;dr?</h2>\n\n<p>NDepend is a code quality tool that really shows your code smells in new ways. with long term trend reporting, heat maps, and more graphs than you will ever need. NDepend will help your team grow a codebase that is clean, and free from dodgy code.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1400893457961,"created_by":1,"updated_at":1400922880742,"updated_by":1,"published_at":1400898797947,"published_by":1},{"id":33,"uuid":"d47ac9eb-d35a-4e6e-bd0c-d6c4d5866691","title":"Anti-Forgery Tokens in NancyFX with Razor","slug":"anti-forgery-tokens-in-nancyfx-with-razor","markdown":"Getting started with anti-forgery tokens in NancyFX with razor views is pretty simple.\n\nTo start you need to enable csrf in application startup. \n\n```csharp\n\n protected override void ApplicationStartup(TinyIoCContainer container, IPipelines pipelines)\n {\n  \tCsrf.Enable(pipelines);\n    base.ApplicationStartup(container, pipelines);\n }\n\n```\n\nNow you need to create a token on the get request that returns the form\n\n\n```csharp\n\n\n Get[\"/\"] = x =>\n            {\n                this.CreateNewCsrfToken();\n                return View[\"Index\"];\n            };\n\n\n```\n\nNow in your view you need to render the token\n\n\n```csharp\n\n<form method=\"POST\">\n    Username <input type=\"text\" name=\"Username\" />\n    <br />\n    Password <input name=\"Password\" type=\"password\" />\n    <br />\n    <input type=\"submit\" value=\"Login\" />\n    @Html.AntiForgeryToken()\n</form>\n\n```\n\nFinally you need to authenticate the token on the post request\n\n\n```csharp\nPost[\"/\"] = x =>\n{\n\ttry\n\t{\n\t\tthis.ValidateCsrfToken();\n\t}\n\tcatch (CsrfValidationException)\n\t{\n\t\treturn Response.AsText(\"Csrf Token not valid.\").WithStatusCode(403);\n\t}\n    //do something\n};\n\n\n\n```","html":"<p>Getting started with anti-forgery tokens in NancyFX with razor views is pretty simple.</p>\n\n<p>To start you need to enable csrf in application startup. </p>\n\n<pre><code class=\"csharp\"> protected override void ApplicationStartup(TinyIoCContainer container, IPipelines pipelines)\n {\n      Csrf.Enable(pipelines);\n    base.ApplicationStartup(container, pipelines);\n }\n</code></pre>\n\n<p>Now you need to create a token on the get request that returns the form</p>\n\n<pre><code class=\"csharp\"> Get[\"/\"] = x =&gt;\n            {\n                this.CreateNewCsrfToken();\n                return View[\"Index\"];\n            };\n</code></pre>\n\n<p>Now in your view you need to render the token</p>\n\n<pre><code class=\"csharp\">&lt;form method=\"POST\"&gt;  \n    Username &lt;input type=\"text\" name=\"Username\" /&gt;\n    &lt;br /&gt;\n    Password &lt;input name=\"Password\" type=\"password\" /&gt;\n    &lt;br /&gt;\n    &lt;input type=\"submit\" value=\"Login\" /&gt;\n    @Html.AntiForgeryToken()\n&lt;/form&gt;\n</code></pre>\n\n<p>Finally you need to authenticate the token on the post request</p>\n\n<pre><code class=\"csharp\">Post[\"/\"] = x =&gt;  \n{\n    try\n    {\n        this.ValidateCsrfToken();\n    }\n    catch (CsrfValidationException)\n    {\n        return Response.AsText(\"Csrf Token not valid.\").WithStatusCode(403);\n    }\n    //do something\n};\n</code></pre>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1402529653367,"created_by":1,"updated_at":1402531234034,"updated_by":1,"published_at":1402529669712,"published_by":1},{"id":34,"uuid":"ff9e2ec8-d302-4c08-b924-a594a132e1e5","title":"Excel Interop cannot open my file!","slug":"excel-interop-cannot-open-my-file","markdown":"So a while back I made a website that uses the Excel interop (long story). Since I made it a while ago, the IIS configuration is not automated, and must be done artisanally.\n\nRecently I have been working on moving it to a new server. I installed Excel, and the website. \n\n**Everything seemed ok until sysprep happend!**\n\n![](/content/images/2014/Jun/jackie.PNG)\n\nSo I immediately was not pleased. First I started ripping apart everything profile related with IIS, and nothing.\n\nEventually I stumbled across [something on stack overflow](http://stackoverflow.com/a/7386967/3671357) to summarize make sure `C:\\Windows\\SysWOW64\\config\\systemprofile` contains a folder called `Desktop`. If you are on 32 bit you need `c:\\Windows\\System32\\config\\systemprofile` to contain the `Desktop` folder.\n\n\n![](/content/images/2014/Jun/Capture3.PNG)\n\nPretty much desperate, and out of options I gave it a shot. Somehow it was the fix, although it pains me to say this.\n\n![](/content/images/2014/Jun/really-seriously-truly.png)\n","html":"<p>So a while back I made a website that uses the Excel interop (long story). Since I made it a while ago, the IIS configuration is not automated, and must be done artisanally.</p>\n\n<p>Recently I have been working on moving it to a new server. I installed Excel, and the website. </p>\n\n<p><strong>Everything seemed ok until sysprep happend!</strong></p>\n\n<p><img src=\"/content/images/2014/Jun/jackie.PNG\" alt=\"\" /></p>\n\n<p>So I immediately was not pleased. First I started ripping apart everything profile related with IIS, and nothing.</p>\n\n<p>Eventually I stumbled across <a href=\"http://stackoverflow.com/a/7386967/3671357\">something on stack overflow</a> to summarize make sure <code>C:\\Windows\\SysWOW64\\config\\systemprofile</code> contains a folder called <code>Desktop</code>. If you are on 32 bit you need <code>c:\\Windows\\System32\\config\\systemprofile</code> to contain the <code>Desktop</code> folder.</p>\n\n<p><img src=\"/content/images/2014/Jun/Capture3.PNG\" alt=\"\" /></p>\n\n<p>Pretty much desperate, and out of options I gave it a shot. Somehow it was the fix, although it pains me to say this.</p>\n\n<p><img src=\"/content/images/2014/Jun/really-seriously-truly.png\" alt=\"\" /></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1403997960138,"created_by":1,"updated_at":1403998467707,"updated_by":1,"published_at":1403998077851,"published_by":1},{"id":35,"uuid":"bf213fb2-a3d2-4b80-bc7f-597953b0b047","title":"Using Action<>, Func<> to hide using statements","slug":"using-action-func-to-hide-using-statements","markdown":"Ok so to give you all some background. I always write my data access with a repository pattern in c#. Now I often use dapper, however I'd guess this problem would also apply with Entity framework.\n\nEverytime I start writing my database access I always start with something like...\n\n```csharp\n\npublic void InsertSomething(string something)\n{\n\tusing(var x = new SqlConnection())\n    {\n    }\n}\n\n\n```\n\n...and honestly pretty soon I am living in `using` statement hell.\n\nNow I tried to mitigate this in the past with IDisposable, but when I'd do some weak reference dependancy injection magic things usually got borked. I like to see using statements in action. I like know that things are getting disposed. However the verbosity, and sheer pain of it makes me want to puke. So one day I came up with the following.\n\n\n<script src=\"https://gist.github.com/tparnell8/f248f559dd89c8dc4b42.js\"></script>\n[Gist Link](https://gist.github.com/f248f559dd89c8dc4b42.git)\n\n## Ok? How do I use this?\n\nOk here is a basic example below using the [Dapper](https://code.google.com/p/dapper-dot-net/) orm.\n\nSo basically we create our db class passing in the type of database connection we wish to use in `<>`. In this case we are using Sql server but in theory we could also use Postgres. We are making an annonymous function that gets passed x, which will be a database connection. This connection will already be created, with the proper connection string. We are then going to call dapper's QueryAsync which will return an IEnumerable of `MyReturnType` after calling MySproc. The Database connection will be disposed of without us having to worry.\n\n```csharp\n var db = new DataBase<SqlConnection>(\"connectionstring\");\n var result = db.QueryDatabaseAsync(x => x.QueryAsync<MyReturnType>(\"MySproc\",\n               \n                new\n                {\n                    MySprocParameter = \"awesome\"\n                },\n                commandType: CommandType.StoredProcedure\n\n                ));\n\n\n```\n\n## Action<>, Func<> Class<> what is this?\n\nOk, so I know as a new c# programmer generics seem intimidating. So I will walk you through this.\n\n### MyClass<>\n\nYou may have classes ask for a generic. This means they are asking for a class. **Note** the word class. This will **not** be an object.\n\nFirst the line `public class DatabaseBase<T> where T : class, IDbConnection, new()` declares that this class is public. This class is called DataBase. This class requires a generic which we will call T in this class. T will have to be a class (not interface, nor struct, or enum). This class must inhert from IDbConnection. This class can also be created without a constructor. Now Notice in my gist, where I am using my `using` statements. You will see `new T()` that is because we are newing the class we have passed as a generic.\n\n### Func< T,TR>\n\nNext up is a Func. Now Functions are a delegate, or method that when ran have a return type. Functions **Must have a return**. In this case the T is a passed in paramter. This means the delegate must be able to handle an IDbConnection somehow and return a TR.\n\nIn the following example we have a method declaration that takes in a function that has a result. This method also returns the result of the function (note the TR return type).\n\n```csharp\npublic TResult QueryDatabase<TResult>(Func<T, TResult> action)\n        {\n            using (var x = new T())\n            {\n                x.ConnectionString = ConnectionString;\n                return action(x);\n            }\n        }\n```\n\n### Action< T >\n\n`Action<T>` is essentially the same as `Func<T,TR>` execpt actions do not have a return type. This would be more like a void than anything else. The T is a passed in parameter to the function. So you can pass in something like a database connection, but you will not have a return. Simple use case sql insert statement. ","html":"<p>Ok so to give you all some background. I always write my data access with a repository pattern in c#. Now I often use dapper, however I'd guess this problem would also apply with Entity framework.</p>\n\n<p>Everytime I start writing my database access I always start with something like...</p>\n\n<pre><code class=\"csharp\">public void InsertSomething(string something)  \n{\n    using(var x = new SqlConnection())\n    {\n    }\n}\n</code></pre>\n\n<p>...and honestly pretty soon I am living in <code>using</code> statement hell.</p>\n\n<p>Now I tried to mitigate this in the past with IDisposable, but when I'd do some weak reference dependancy injection magic things usually got borked. I like to see using statements in action. I like know that things are getting disposed. However the verbosity, and sheer pain of it makes me want to puke. So one day I came up with the following.</p>\n\n<script src=\"https://gist.github.com/tparnell8/f248f559dd89c8dc4b42.js\"></script>  \n\n<p><a href=\"https://gist.github.com/f248f559dd89c8dc4b42.git\">Gist Link</a></p>\n\n<h2 id=\"okhowdoiusethis\">Ok? How do I use this?</h2>\n\n<p>Ok here is a basic example below using the <a href=\"https://code.google.com/p/dapper-dot-net/\">Dapper</a> orm.</p>\n\n<p>So basically we create our db class passing in the type of database connection we wish to use in <code>&lt;&gt;</code>. In this case we are using Sql server but in theory we could also use Postgres. We are making an annonymous function that gets passed x, which will be a database connection. This connection will already be created, with the proper connection string. We are then going to call dapper's QueryAsync which will return an IEnumerable of <code>MyReturnType</code> after calling MySproc. The Database connection will be disposed of without us having to worry.</p>\n\n<pre><code class=\"csharp\"> var db = new DataBase&lt;SqlConnection&gt;(\"connectionstring\");\n var result = db.QueryDatabaseAsync(x =&gt; x.QueryAsync&lt;MyReturnType&gt;(\"MySproc\",\n\n                new\n                {\n                    MySprocParameter = \"awesome\"\n                },\n                commandType: CommandType.StoredProcedure\n\n                ));\n</code></pre>\n\n<h2 id=\"actionfuncclasswhatisthis\">Action&lt;>, Func&lt;> Class&lt;> what is this?</h2>\n\n<p>Ok, so I know as a new c# programmer generics seem intimidating. So I will walk you through this.</p>\n\n<h3 id=\"myclass\">MyClass&lt;></h3>\n\n<p>You may have classes ask for a generic. This means they are asking for a class. <strong>Note</strong> the word class. This will <strong>not</strong> be an object.</p>\n\n<p>First the line <code>public class DatabaseBase&lt;T&gt; where T : class, IDbConnection, new()</code> declares that this class is public. This class is called DataBase. This class requires a generic which we will call T in this class. T will have to be a class (not interface, nor struct, or enum). This class must inhert from IDbConnection. This class can also be created without a constructor. Now Notice in my gist, where I am using my <code>using</code> statements. You will see <code>new T()</code> that is because we are newing the class we have passed as a generic.</p>\n\n<h3 id=\"functtr\">Func&lt; T,TR></h3>\n\n<p>Next up is a Func. Now Functions are a delegate, or method that when ran have a return type. Functions <strong>Must have a return</strong>. In this case the T is a passed in paramter. This means the delegate must be able to handle an IDbConnection somehow and return a TR.</p>\n\n<p>In the following example we have a method declaration that takes in a function that has a result. This method also returns the result of the function (note the TR return type).</p>\n\n<pre><code class=\"csharp\">public TResult QueryDatabase&lt;TResult&gt;(Func&lt;T, TResult&gt; action)  \n        {\n            using (var x = new T())\n            {\n                x.ConnectionString = ConnectionString;\n                return action(x);\n            }\n        }\n</code></pre>\n\n<h3 id=\"actiont\">Action&lt; T ></h3>\n\n<p><code>Action&lt;T&gt;</code> is essentially the same as <code>Func&lt;T,TR&gt;</code> execpt actions do not have a return type. This would be more like a void than anything else. The T is a passed in parameter to the function. So you can pass in something like a database connection, but you will not have a return. Simple use case sql insert statement. </p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1404633362869,"created_by":1,"updated_at":1404667097902,"updated_by":1,"published_at":1404633446443,"published_by":1},{"id":36,"uuid":"0419761e-68eb-4694-a7d4-dc26ee3e573b","title":"Self Sign Certs with Bouncy Castle","slug":"self-sign-certs-with-bouncy-castle","markdown":"## Prerequisite\n\nI'm assuming your root ca is a pfx file. Get your keys into .pem format.\n\n\nThe following will export your key to pem format from pfx using openssl.exe, note replace x.pfx with the file path of your pfx. This will make a file called privkey.pem at your working directory.\n\n`openssl pkcs12 -in x.pfx  -nocerts -nodes -passin pass:123456 | openssl rsa -out privkey.pem`\n\n\n","html":"<h2 id=\"prerequisite\">Prerequisite</h2>\n\n<p>I'm assuming your root ca is a pfx file. Get your keys into .pem format.</p>\n\n<p>The following will export your key to pem format from pfx using openssl.exe, note replace x.pfx with the file path of your pfx. This will make a file called privkey.pem at your working directory.</p>\n\n<p><code>openssl pkcs12 -in x.pfx  -nocerts -nodes -passin pass:123456 | openssl rsa -out privkey.pem</code></p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1404863431176,"created_by":1,"updated_at":1405296153997,"updated_by":1,"published_at":null,"published_by":null},{"id":37,"uuid":"f0d1517f-15a7-4069-b144-57fa4d82cfac","title":"Binding SSL Certs on Windows Installer XML (WiX) deployed Web Applications","slug":"binding-ssl-certs-on-windows-installer-xml-wix-deployed-web-applications","markdown":"This tutorial is about using SSL certs with WiX for IIS websites. For those of you whom didn't know, WiX is an MSI generator. You can even deploy IIS applications with WiX's MSI's.\n\n## Warning: I suck at wix\n\nNow I am going to start of by saying, I am far from an expert on wix. \n\n>If someone knows a better way please comment below. Tell me I am wrong\n\n## Danger: Some WiX Knowledge Required\n\nOk so before I go on, I am not going to explain everything from scratch.\n\n>I'm assuming you might know the basics of WiX here, and you have done iis things with it.\n\n## Show me Teh Codez...\n\n\n\nOk here it goes...In your fragment that declares your website you need to declare a binary. This says basically bundle the binary code from this file into the msi. This can go right under your fragment tag. The **sourceFile** tag should be the path to your certificate. \n\n```XML\n<Binary Id=\"certBinary\" SourceFile=\".\\IRCool.org.pfx\"/>\n\n```\n\n### Declare your IIS Instance things!\n\n\nOk...So I'm hoping you know how the iis stuff with wix works if you have read up to this point (and heeded my warnings)\n\nWhen you go to declare your component the iis certificate declaration needs to be a child of the component tag. The certificate needs to be the same level as your website tag.\n\nThe binary key in the certificate tag needs to match the ID of the binary tag we declared. I like to add it to local machine, personal store. Request **must** be no. Obviously the PFXPassword needs to be the password to your pfx file.\n\n```\n\n<iis:Certificate Id=\"cert\" BinaryKey=\"certBinary\" Name=\"IRCool.org\" StoreLocation=\"localMachine\" StoreName=\"personal\" PFXPassword=\"mypasswordisawesome\" Request=\"no\" />\n                            \n\n```\n\n\n### Lets bind this\n\nOk so now we have our certificate declared in IIS. We need to bind against it. So you will probably end up with something like the following:\n\nYou have declared a website, in it you have added 2 web addresses. A web address that is on port 443, and is secure. Another one that is on 80, and is not. You will have declared a certificate reference that matches your iis certificate tag.\n\n```\n\n <iis:WebSite Id='IRCool' Description='IRCool' Directory='Install_Web' StartOnInstall='yes' ConfigureIfExists='yes' AutoStart='yes'>\n                              <iis:WebAddress Id='SecIRCool' Port='443' Header='IRCool' Secure='yes' />\n                              <iis:WebAddress Id='IRCool' Port='80' Header='IRCool' />\n                              <iis:WebApplication Id='IRCoolApp' WebAppPool='IRCoolAppPool' Name='IRCool' />\n                              <iis:CertificateRef Id='cert' />\n                            </iis:WebSite>\n\n```\n\n## Ok..how do I redirect my port 80?\n\nSo I know there **has** to be a better way here. I'm not sure how to configure IIS to do this with wix. However according to [Stack Overflow](http://stackoverflow.com/a/4945950) you could redirect on begin request in MVC4+ (or you could do the following in [NancyFX](http://nancyfx.org/)).\n\n\n```csharp\n\nprotected override void RequestStartup(TinyIoCContainer container, IPipelines pipelines, NancyContext context)\n        {\n            pipelines.BeforeRequest += (x) => x.Request.Url.IsSecure\n                ? new RedirectResponse(x.Request.Url.ToString().Replace(\"http:\", \"https:\"))\n                : null;\n            base.RequestStartup(container, pipelines, context);\n        }\n\n```\n\n## tl;dr?\n\nYou should end up with a fragment that resembles this: \n\n```\n<Fragment>\n    <Binary Id=\"certBinary\" SourceFile=\".\\IRCool.org.pfx\"/>\n\t\t<Directory Id=\"TARGETDIR\" Name=\"SourceDir\">\n\t\t\t<Directory Id=\"IISMain\" Name='inetpub'>\n\t\t\t\t<Directory Id=\"PubFolderName\" Name=\"PubFolderName\">\n\t\t\t\t\t<Component Id='WebsiteConfig' Guid='{YOURGUIDHERE}' Win64=\"yes\">\n\t\t\t\t\t\t<iis:Certificate Id=\"cert\" BinaryKey=\"certBinary\" Name=\"IRCool.org\" StoreLocation=\"localMachine\" StoreName=\"personal\" PFXPassword=\"mypasswordisawesome\" Request=\"no\" />\n\t\t\t\t\t\t<iis:WebSite Id='IRCool' Description='IRCool' Directory='PubFolderName' StartOnInstall='yes' ConfigureIfExists='yes' AutoStart='yes'>\n\t\t\t\t\t\t\t\t\t  <iis:WebAddress Id='SecIRCool' Port='443' Header='IRCool' Secure='yes' />\n\t\t\t\t\t\t\t\t\t  <iis:WebAddress Id='IRCool' Port='80' Header='IRCool' />\n\t\t\t\t\t\t\t\t\t  <iis:WebApplication Id='IRCoolApp' WebAppPool='IRCoolAppPool' Name='IRCool' />\n\t\t\t\t\t\t\t\t\t  <iis:CertificateRef Id='cert' />\n\t\t\t\t\t\t\t\t\t</iis:WebSite>\n\t\t\t\t\t\t\t\t\t<iis:WebAppPool Id='IRCoolAppPool' Identity=\"localSystem\" RecycleMinutes=\"0\" IdleTimeout=\"0\" ManagedPipelineMode='Integrated' ManagedRuntimeVersion='v4.0' Name='IRCool' />\n\t\t\t\t\t</Component>\n\t\t\t\t</Directory>\n\t\t\t</Directory>\n        </Directory>\n\t<Fragment>\n\n```","html":"<p>This tutorial is about using SSL certs with WiX for IIS websites. For those of you whom didn't know, WiX is an MSI generator. You can even deploy IIS applications with WiX's MSI's.</p>\n\n<h2 id=\"warningisuckatwix\">Warning: I suck at wix</h2>\n\n<p>Now I am going to start of by saying, I am far from an expert on wix. </p>\n\n<blockquote>\n  <p>If someone knows a better way please comment below. Tell me I am wrong</p>\n</blockquote>\n\n<h2 id=\"dangersomewixknowledgerequired\">Danger: Some WiX Knowledge Required</h2>\n\n<p>Ok so before I go on, I am not going to explain everything from scratch.</p>\n\n<blockquote>\n  <p>I'm assuming you might know the basics of WiX here, and you have done iis things with it.</p>\n</blockquote>\n\n<h2 id=\"showmetehcodez\">Show me Teh Codez...</h2>\n\n<p>Ok here it goes...In your fragment that declares your website you need to declare a binary. This says basically bundle the binary code from this file into the msi. This can go right under your fragment tag. The <strong>sourceFile</strong> tag should be the path to your certificate. </p>\n\n<pre><code class=\"XML\">&lt;Binary Id=\"certBinary\" SourceFile=\".\\IRCool.org.pfx\"/&gt;\n</code></pre>\n\n<h3 id=\"declareyouriisinstancethings\">Declare your IIS Instance things!</h3>\n\n<p>Ok...So I'm hoping you know how the iis stuff with wix works if you have read up to this point (and heeded my warnings)</p>\n\n<p>When you go to declare your component the iis certificate declaration needs to be a child of the component tag. The certificate needs to be the same level as your website tag.</p>\n\n<p>The binary key in the certificate tag needs to match the ID of the binary tag we declared. I like to add it to local machine, personal store. Request <strong>must</strong> be no. Obviously the PFXPassword needs to be the password to your pfx file.</p>\n\n<pre><code>&lt;iis:Certificate Id=\"cert\" BinaryKey=\"certBinary\" Name=\"IRCool.org\" StoreLocation=\"localMachine\" StoreName=\"personal\" PFXPassword=\"mypasswordisawesome\" Request=\"no\" /&gt;\n</code></pre>\n\n<h3 id=\"letsbindthis\">Lets bind this</h3>\n\n<p>Ok so now we have our certificate declared in IIS. We need to bind against it. So you will probably end up with something like the following:</p>\n\n<p>You have declared a website, in it you have added 2 web addresses. A web address that is on port 443, and is secure. Another one that is on 80, and is not. You will have declared a certificate reference that matches your iis certificate tag.</p>\n\n<pre><code> &lt;iis:WebSite Id='IRCool' Description='IRCool' Directory='Install_Web' StartOnInstall='yes' ConfigureIfExists='yes' AutoStart='yes'&gt;\n                              &lt;iis:WebAddress Id='SecIRCool' Port='443' Header='IRCool' Secure='yes' /&gt;\n                              &lt;iis:WebAddress Id='IRCool' Port='80' Header='IRCool' /&gt;\n                              &lt;iis:WebApplication Id='IRCoolApp' WebAppPool='IRCoolAppPool' Name='IRCool' /&gt;\n                              &lt;iis:CertificateRef Id='cert' /&gt;\n                            &lt;/iis:WebSite&gt;\n</code></pre>\n\n<h2 id=\"okhowdoiredirectmyport80\">Ok..how do I redirect my port 80?</h2>\n\n<p>So I know there <strong>has</strong> to be a better way here. I'm not sure how to configure IIS to do this with wix. However according to <a href=\"http://stackoverflow.com/a/4945950\">Stack Overflow</a> you could redirect on begin request in MVC4+ (or you could do the following in <a href=\"http://nancyfx.org/\">NancyFX</a>).</p>\n\n<pre><code class=\"csharp\">protected override void RequestStartup(TinyIoCContainer container, IPipelines pipelines, NancyContext context)  \n        {\n            pipelines.BeforeRequest += (x) =&gt; x.Request.Url.IsSecure\n                ? new RedirectResponse(x.Request.Url.ToString().Replace(\"http:\", \"https:\"))\n                : null;\n            base.RequestStartup(container, pipelines, context);\n        }\n</code></pre>\n\n<h2 id=\"tldr\">tl;dr?</h2>\n\n<p>You should end up with a fragment that resembles this: </p>\n\n<pre><code>&lt;Fragment&gt;  \n    &lt;Binary Id=\"certBinary\" SourceFile=\".\\IRCool.org.pfx\"/&gt;\n        &lt;Directory Id=\"TARGETDIR\" Name=\"SourceDir\"&gt;\n            &lt;Directory Id=\"IISMain\" Name='inetpub'&gt;\n                &lt;Directory Id=\"PubFolderName\" Name=\"PubFolderName\"&gt;\n                    &lt;Component Id='WebsiteConfig' Guid='{YOURGUIDHERE}' Win64=\"yes\"&gt;\n                        &lt;iis:Certificate Id=\"cert\" BinaryKey=\"certBinary\" Name=\"IRCool.org\" StoreLocation=\"localMachine\" StoreName=\"personal\" PFXPassword=\"mypasswordisawesome\" Request=\"no\" /&gt;\n                        &lt;iis:WebSite Id='IRCool' Description='IRCool' Directory='PubFolderName' StartOnInstall='yes' ConfigureIfExists='yes' AutoStart='yes'&gt;\n                                      &lt;iis:WebAddress Id='SecIRCool' Port='443' Header='IRCool' Secure='yes' /&gt;\n                                      &lt;iis:WebAddress Id='IRCool' Port='80' Header='IRCool' /&gt;\n                                      &lt;iis:WebApplication Id='IRCoolApp' WebAppPool='IRCoolAppPool' Name='IRCool' /&gt;\n                                      &lt;iis:CertificateRef Id='cert' /&gt;\n                                    &lt;/iis:WebSite&gt;\n                                    &lt;iis:WebAppPool Id='IRCoolAppPool' Identity=\"localSystem\" RecycleMinutes=\"0\" IdleTimeout=\"0\" ManagedPipelineMode='Integrated' ManagedRuntimeVersion='v4.0' Name='IRCool' /&gt;\n                    &lt;/Component&gt;\n                &lt;/Directory&gt;\n            &lt;/Directory&gt;\n        &lt;/Directory&gt;\n    &lt;Fragment&gt;\n</code></pre>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1406007470033,"created_by":1,"updated_at":1406080715228,"updated_by":1,"published_at":1406009827246,"published_by":1}],"users":[{"id":1,"uuid":"d1188764-01d3-4c0a-929c-86081bb9f5e6","name":"Tommy Parnell","slug":"tommy-parnell","password":"$2a$10$x2xwp8w8xNRzc9kdw9WI.eNhPWtTI75tsaqgWMr1PV6cnjTaDD7d.","email":"parnell.tommy@hotmail.com","image":"//www.gravatar.com/avatar/64f8c627e37c2e5c4604f272b404bfab?d=404","cover":null,"bio":"","website":"http://blog.tommyparnell.com","location":"","accessibility":null,"status":"active","language":"en_US","meta_title":null,"meta_description":null,"last_login":null,"created_at":1392587750126,"created_by":1,"updated_at":1411471895704,"updated_by":1}],"roles":[{"id":1,"uuid":"b2cecaf1-7bd1-4977-bf2a-cbc7b593e465","name":"Administrator","description":"Administrators","created_at":1392587733984,"created_by":1,"updated_at":1392587733984,"updated_by":1},{"id":2,"uuid":"7c6ec23b-fa3c-4b44-9ccb-998a07bee33b","name":"Editor","description":"Editors","created_at":1392587733989,"created_by":1,"updated_at":1392587733989,"updated_by":1},{"id":3,"uuid":"c70d4f08-ea1a-4bc5-86b5-a715ba40a4d9","name":"Author","description":"Authors","created_at":1392587733995,"created_by":1,"updated_at":1392587733995,"updated_by":1}],"roles_users":[{"id":1,"role_id":1,"user_id":1}],"permissions":[{"id":1,"uuid":"970bffec-b033-4538-9393-82e9f7b70fb5","name":"Edit posts","object_type":"post","action_type":"edit","object_id":null,"created_at":1392587734000,"created_by":1,"updated_at":1392587734000,"updated_by":1},{"id":2,"uuid":"87c3da1f-b2d7-4747-9ac5-ff4a1d501350","name":"Remove posts","object_type":"post","action_type":"remove","object_id":null,"created_at":1392587734006,"created_by":1,"updated_at":1392587734006,"updated_by":1},{"id":3,"uuid":"ce375239-2984-4a33-9b0c-655d331c0e63","name":"Create posts","object_type":"post","action_type":"create","object_id":null,"created_at":1392587734012,"created_by":1,"updated_at":1392587734012,"updated_by":1}],"permissions_users":[],"permissions_roles":[{"id":1,"role_id":1,"permission_id":1},{"id":2,"role_id":1,"permission_id":2},{"id":3,"role_id":1,"permission_id":3}],"sessions":[{"id":"OpIu6DXxDEcixvd4utCoA7zI","expires":1398352414223,"sess":"{\"cookie\":{\"originalMaxAge\":43200000,\"expires\":\"2014-04-24T15:13:34.223Z\",\"httpOnly\":true,\"path\":\"/ghost/\"},\"user\":1,\"_csrfSecret\":\"ElPdGdIPDjYzhbDonZWiBCyN\"}"},{"id":"dr1AQXN9o8YtgrteSElbKbmn","expires":1398525312973,"sess":"{\"cookie\":{\"originalMaxAge\":43200000,\"expires\":\"2014-04-26T15:15:12.973Z\",\"httpOnly\":true,\"path\":\"/ghost/\"},\"user\":1,\"_csrfSecret\":\"HxQWQFq258LqF6aejz51EGmE\"}"},{"id":"HB8U6WhzpO5HF9HVOHEEV2lF","expires":1398674558561,"sess":"{\"cookie\":{\"originalMaxAge\":43200000,\"expires\":\"2014-04-28T08:42:38.561Z\",\"httpOnly\":true,\"path\":\"/ghost/\"},\"user\":1,\"_csrfSecret\":\"yRSE5Dfdals7M09u0tkCa30z\"}"},{"id":"IbVEayYHdtDn8Di0z6KzTfMG","expires":1398844806082,"sess":"{\"cookie\":{\"originalMaxAge\":43200000,\"expires\":\"2014-04-30T08:00:06.082Z\",\"httpOnly\":true,\"path\":\"/ghost/\"},\"user\":1,\"_csrfSecret\":\"CmPNVG4c0AILsmdcXRUbnjpE\"}"},{"id":"CCXK7wFj7Xy2GM6ifukC5vxf","expires":1398979414949,"sess":"{\"cookie\":{\"originalMaxAge\":43199999,\"expires\":\"2014-05-01T21:23:34.949Z\",\"httpOnly\":true,\"path\":\"/ghost/\"},\"user\":1,\"_csrfSecret\":\"p7tBDwMDWvtDV2XYmFE0ZoEf\"}"},{"id":"zfTxAelB58mUlKBfPsyCuBLk","expires":1399135820948,"sess":"{\"cookie\":{\"originalMaxAge\":43200000,\"expires\":\"2014-05-03T16:50:20.948Z\",\"httpOnly\":true,\"path\":\"/ghost/\"},\"_csrfSecret\":\"UopVrayzSgyRIjYCBLSXrfcf\"}"},{"id":"cwg2Z0DV7LVrBE3HVTRADQfV","expires":1399429717963,"sess":"{\"cookie\":{\"originalMaxAge\":43199999,\"expires\":\"2014-05-07T02:28:37.963Z\",\"httpOnly\":true,\"path\":\"/ghost/\"},\"user\":1,\"_csrfSecret\":\"AABV9tAmBaxxifpoGHpS0gyP\"}"},{"id":"dUOZA40L8lDbIrtfDqX3d9o9","expires":1399518552655,"sess":"{\"cookie\":{\"originalMaxAge\":43200000,\"expires\":\"2014-05-08T03:09:12.655Z\",\"httpOnly\":true,\"path\":\"/ghost/\"},\"user\":1,\"_csrfSecret\":\"AHKKHVXyJbNqesfbNYEVyYXQ\"}"},{"id":"4UxW9SEgZHyytRYTzLPoBIxI","expires":1400942867018,"sess":"{\"cookie\":{\"originalMaxAge\":43200000,\"expires\":\"2014-05-24T14:47:47.018Z\",\"httpOnly\":true,\"path\":\"/ghost/\"},\"user\":1,\"_csrfSecret\":\"6QkBAQSoWTYPdsNXfAS4wadG\"}"},{"id":"0wSjh9HVq0tym8CvrkWiOyEs","expires":1400966080765,"sess":"{\"cookie\":{\"originalMaxAge\":43200000,\"expires\":\"2014-05-24T21:14:40.765Z\",\"httpOnly\":true,\"path\":\"/ghost/\"},\"user\":1,\"_csrfSecret\":\"LoOR4ZyV2XKRBavGUKme5sTs\"}"},{"id":"C0vFt44ElBHEfJPA2uTIa2Bd","expires":1402244168598,"sess":"{\"cookie\":{\"originalMaxAge\":43200000,\"expires\":\"2014-06-08T16:16:08.598Z\",\"httpOnly\":true,\"path\":\"/ghost/\"},\"_csrfSecret\":\"9atDnqigBXoFAJwsnDYhtKGs\"}"},{"id":"r2jyWxjEiL2IdxYTqwCZDDLm","expires":1402574434044,"sess":"{\"cookie\":{\"originalMaxAge\":43200000,\"expires\":\"2014-06-12T12:00:34.044Z\",\"httpOnly\":true,\"path\":\"/ghost/\"},\"user\":1,\"_csrfSecret\":\"XByUCCGSD7dIq26w11fu7vZI\"}"},{"id":"dsrkAqIhyFgfoZV7UVmx0ZoZ","expires":1404041667719,"sess":"{\"cookie\":{\"originalMaxAge\":43200000,\"expires\":\"2014-06-29T11:34:27.719Z\",\"httpOnly\":true,\"path\":\"/ghost/\"},\"user\":1,\"_csrfSecret\":\"kYPWBEWcATBBqpRlseNWu4fQ\"}"},{"id":"AHwqD8YFPmgURr6LHlwBXgVY","expires":1404678652521,"sess":"{\"cookie\":{\"originalMaxAge\":43200000,\"expires\":\"2014-07-06T20:30:52.521Z\",\"httpOnly\":true,\"path\":\"/ghost/\"},\"user\":1,\"_csrfSecret\":\"FEv7Az1lA6lF8XyqiJrylAGf\"}"},{"id":"m0DKx2vhVXT8d4ayWUpqq1CX","expires":1404710496199,"sess":"{\"cookie\":{\"originalMaxAge\":43200000,\"expires\":\"2014-07-07T05:21:36.199Z\",\"httpOnly\":true,\"path\":\"/ghost/\"},\"user\":1,\"_csrfSecret\":\"vN03RohbySggJT7Fiw9L50eC\"}"},{"id":"a3YZEkzLqrhjxpMQtbK6Thla","expires":1404750603157,"sess":"{\"cookie\":{\"originalMaxAge\":43200000,\"expires\":\"2014-07-07T16:30:03.157Z\",\"httpOnly\":true,\"path\":\"/ghost/\"},\"_csrfSecret\":\"GCoHC44alzFIF62SxKjcMOR0\"}"},{"id":"34yhfJsy0sZnnAFDb1RYSV4N","expires":1404906631188,"sess":"{\"cookie\":{\"originalMaxAge\":43200000,\"expires\":\"2014-07-09T11:50:31.188Z\",\"httpOnly\":true,\"path\":\"/ghost/\"},\"user\":1,\"_csrfSecret\":\"LObSJlLqE9iGqoukfEKkXKE9\"}"},{"id":"uSISJwzaqvTRPkBw1O2Y0Vuy","expires":1404931666611,"sess":"{\"cookie\":{\"originalMaxAge\":43200000,\"expires\":\"2014-07-09T18:47:46.611Z\",\"httpOnly\":true,\"path\":\"/ghost/\"},\"_csrfSecret\":\"g6YFlbdj4SACJqPf75Am5lrr\"}"},{"id":"1qIBYS86xxlYTK0a05vKyj13","expires":1405342543324,"sess":"{\"cookie\":{\"originalMaxAge\":43199999,\"expires\":\"2014-07-14T12:55:43.324Z\",\"httpOnly\":true,\"path\":\"/ghost/\"},\"user\":1,\"_csrfSecret\":\"cNm5mpnlHo7xp748aMGhDLje\"}"},{"id":"QRbFxDdELMdZpxfenLvrO6it","expires":1406055150990,"sess":"{\"cookie\":{\"originalMaxAge\":43200000,\"expires\":\"2014-07-22T18:52:30.990Z\",\"httpOnly\":true,\"path\":\"/ghost/\"},\"user\":1,\"_csrfSecret\":\"9itHvz00rTKHI5Re05sOjB6e\"}"},{"id":"gjm7c467BgZ07C3Ktz8ZAPPs","expires":1406088418277,"sess":"{\"cookie\":{\"originalMaxAge\":43200000,\"expires\":\"2014-07-23T04:06:58.277Z\",\"httpOnly\":true,\"path\":\"/ghost/\"},\"user\":1,\"_csrfSecret\":\"mTZN6CRcQFrvKaLfi2JBIgBr\"}"},{"id":"ze2JUiKD6ipCDq9NQktrmned","expires":1406123915241,"sess":"{\"cookie\":{\"originalMaxAge\":43200000,\"expires\":\"2014-07-23T13:58:35.241Z\",\"httpOnly\":true,\"path\":\"/ghost/\"},\"user\":1,\"_csrfSecret\":\"XHfm5LUg3pWtygEm3NJejefS\"}"},{"id":"XrnHNcePteaG9lAZLPYRZ7RE","expires":1406383161759,"sess":"{\"cookie\":{\"originalMaxAge\":43200000,\"expires\":\"2014-07-26T13:59:21.759Z\",\"httpOnly\":true,\"path\":\"/ghost/\"},\"_csrfSecret\":\"NWdIhOZ7llEEH7VtpPAgU1gD\"}"},{"id":"dxmloy9AffwP9Y8Bdapi9ENL","expires":1406383162251,"sess":"{\"cookie\":{\"originalMaxAge\":43200000,\"expires\":\"2014-07-26T13:59:22.251Z\",\"httpOnly\":true,\"path\":\"/ghost/\"},\"_csrfSecret\":\"LEx21JA4MNpcxuqXapt3ZGvG\"}"},{"id":"5zsW7LMjZIY9VWeoz9jyRqWk","expires":1407168974535,"sess":"{\"cookie\":{\"originalMaxAge\":43200000,\"expires\":\"2014-08-04T16:16:14.535Z\",\"httpOnly\":true,\"path\":\"/ghost/\"},\"user\":1,\"_csrfSecret\":\"5IZZBNF17dQ7GqUi1VAEsIFx\"}"},{"id":"2LAXy2K6ngU67PzbFOJJ3kUj","expires":1407553730665,"sess":"{\"cookie\":{\"originalMaxAge\":43200000,\"expires\":\"2014-08-09T03:08:50.665Z\",\"httpOnly\":true,\"path\":\"/ghost/\"},\"_csrfSecret\":\"2rSMpazdyLfthWkWsru1DdBt\"}"},{"id":"Wgvli8RpjEbU4E5B7EOAC3nr","expires":1408141101354,"sess":"{\"cookie\":{\"originalMaxAge\":43200000,\"expires\":\"2014-08-15T22:18:21.354Z\",\"httpOnly\":true,\"path\":\"/ghost/\"},\"_csrfSecret\":\"rWnP9veHQGQjvALVEW4UFPBA\"}"},{"id":"1XxzSgLfr5YDAJRBJnKQbGMq","expires":1408659841941,"sess":"{\"cookie\":{\"originalMaxAge\":43200000,\"expires\":\"2014-08-21T22:24:01.941Z\",\"httpOnly\":true,\"path\":\"/ghost/\"},\"_csrfSecret\":\"Bt0zqLJ5aIxydlSWhLPEHcEa\"}"},{"id":"FBoKbVyz3pQFmG10BLayxHoc","expires":1411515101615,"sess":"{\"cookie\":{\"originalMaxAge\":43200000,\"expires\":\"2014-09-23T23:31:41.615Z\",\"httpOnly\":true,\"path\":\"/ghost/\"},\"user\":1,\"_csrfSecret\":\"i7cVcZN41rMTdivxFTxZAfPc\"}"}],"settings":[{"id":1,"uuid":"8d0868a2-cc30-4916-8a5b-e9e1ba49f7e2","key":"databaseVersion","value":"002","type":"core","created_at":1392587734029,"created_by":1,"updated_at":1392587734029,"updated_by":1},{"id":2,"uuid":"9d63e00a-ade6-4e22-8636-a28dd43ad402","key":"dbHash","value":"4a635130-0983-4cff-9eae-ea6376030fdf","type":"core","created_at":1392587734030,"created_by":1,"updated_at":1392587734148,"updated_by":1},{"id":3,"uuid":"a1757f41-f0c7-4a71-a4e4-479eb31d8189","key":"nextUpdateCheck","value":"1411557899","type":"core","created_at":1392587734030,"created_by":1,"updated_at":1411471896226,"updated_by":1},{"id":4,"uuid":"8a163f6d-fb1e-446b-988f-09aa56ee03b7","key":"displayUpdateNotification","value":"0.5.0","type":"core","created_at":1392587734031,"created_by":1,"updated_at":1411471896227,"updated_by":1},{"id":5,"uuid":"45fbc3d5-f676-4b0a-ac28-081ca386eb09","key":"title","value":"Tommyparnell.com","type":"blog","created_at":1392587734031,"created_by":1,"updated_at":1395615319109,"updated_by":1},{"id":6,"uuid":"0709e567-16fe-423e-872e-861e63af35f9","key":"description","value":"My name is Tommy Parnell.\nThis is mostly a blog about technology, DevOps, and my perspectives on the world.","type":"blog","created_at":1392587734031,"created_by":1,"updated_at":1395615319110,"updated_by":1},{"id":7,"uuid":"5b2bf391-cdc2-4b60-bebc-e4ffc0993baa","key":"email","value":"parnell.tommy@hotmail.com","type":"blog","created_at":1392587734032,"created_by":1,"updated_at":1395615319110,"updated_by":1},{"id":8,"uuid":"10f44cb2-ac09-4a79-95ef-fb87ef724223","key":"logo","value":"/content/images/2014/Feb/486170_10200106207521542_360163524_n__2__2.jpg","type":"blog","created_at":1392587734033,"created_by":1,"updated_at":1395615319111,"updated_by":1},{"id":9,"uuid":"8994f30b-7d36-454e-8228-33c7d0541d69","key":"cover","value":"/content/images/2014/Feb/origin_134672066-2.jpg","type":"blog","created_at":1392587734035,"created_by":1,"updated_at":1395615319112,"updated_by":1},{"id":10,"uuid":"9fbee005-8c08-4960-878e-62e75a61fe13","key":"defaultLang","value":"en_US","type":"blog","created_at":1392587734035,"created_by":1,"updated_at":1395615319112,"updated_by":1},{"id":11,"uuid":"66bb083d-b177-45d6-8bda-438dbeec734b","key":"postsPerPage","value":"6","type":"blog","created_at":1392587734036,"created_by":1,"updated_at":1395615319113,"updated_by":1},{"id":12,"uuid":"2f3f9f2d-f43a-4b09-876c-fecc9d4a4dfb","key":"forceI18n","value":"true","type":"blog","created_at":1392587734037,"created_by":1,"updated_at":1395615319114,"updated_by":1},{"id":13,"uuid":"e3dc213a-7be9-4fff-9056-3a1d98586659","key":"permalinks","value":"/:slug/","type":"blog","created_at":1392587734037,"created_by":1,"updated_at":1395615319114,"updated_by":1},{"id":14,"uuid":"4c833dda-3d83-45cd-8dfe-3f199165c170","key":"activeTheme","value":"ghostium","type":"theme","created_at":1392587734038,"created_by":1,"updated_at":1395615319115,"updated_by":1},{"id":15,"uuid":"49b7cf19-2b89-43b2-93e4-aa8b086ef492","key":"activePlugins","value":"[]","type":"plugin","created_at":1392587734038,"created_by":1,"updated_at":1392587734038,"updated_by":1},{"id":16,"uuid":"5ac1ebb0-e926-403d-bfae-76dc24b96d39","key":"installedPlugins","value":"[]","type":"plugin","created_at":1392587734038,"created_by":1,"updated_at":1396407214468,"updated_by":1},{"id":17,"uuid":"555b75e8-920f-444a-9265-3ebdedfe52e6","key":"activeApps","value":"[]","type":"app","created_at":1396408482344,"created_by":1,"updated_at":1396408482344,"updated_by":1},{"id":18,"uuid":"12fc11f6-f24f-4a73-a934-5bb75b7570f4","key":"installedApps","value":"[]","type":"app","created_at":1396408482347,"created_by":1,"updated_at":1398307833684,"updated_by":1}],"tags":[{"id":1,"uuid":"70b998c8-bd9b-455d-9fa0-dee43d6e26a3","name":"Getting Started","slug":"getting-started","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1392587733979,"created_by":1,"updated_at":1392587733979,"updated_by":1},{"id":2,"uuid":"c0268b8a-d140-4877-9a64-3b0b14159113","name":"SOA","slug":"soa","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1392611121606,"created_by":1,"updated_at":1392611121606,"updated_by":1},{"id":3,"uuid":"6d2476bf-f0ea-4577-b5b2-50817349b7c0","name":"Service Oriented Architecture","slug":"service-oriented-architecture","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1392611121608,"created_by":1,"updated_at":1392611121608,"updated_by":1},{"id":4,"uuid":"4ce7883f-7c5e-4e74-9886-93a6c3eb4d2f","name":"DevOps","slug":"devops","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1392611830336,"created_by":1,"updated_at":1392611830336,"updated_by":1},{"id":5,"uuid":"155bf9e8-9463-4dd7-aed2-b33b20929475","name":"Culture","slug":"culture","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1392611830337,"created_by":1,"updated_at":1392611830337,"updated_by":1},{"id":6,"uuid":"41561085-9def-46b2-b924-69277aa00d96","name":"recruiting","slug":"recruiting","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1392619555149,"created_by":1,"updated_at":1392619555149,"updated_by":1},{"id":7,"uuid":"5a44b5f0-8a60-4055-8935-baa9afc8b96c","name":"You're doing it wrong","slug":"youre-doing-it-wrong","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1392619555149,"created_by":1,"updated_at":1392619555149,"updated_by":1},{"id":8,"uuid":"075f6f3d-f863-48d3-a785-e95b726f08a9","name":" ","slug":"post","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1392619555150,"created_by":1,"updated_at":1392619555150,"updated_by":1},{"id":9,"uuid":"b4d6d35d-5f0d-471b-82f4-9ea386df2422","name":"culture","slug":"culture-2","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1392619555150,"created_by":1,"updated_at":1392619555150,"updated_by":1},{"id":10,"uuid":"5c0f809c-84fc-4f47-b292-a38d1b9da2ab","name":"Android","slug":"android","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1392710130566,"created_by":1,"updated_at":1392710130566,"updated_by":1},{"id":11,"uuid":"0be3e012-17db-4fa5-98bb-26b1550fb9e1","name":"Xamarin","slug":"xamarin","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1392710130567,"created_by":1,"updated_at":1392710130567,"updated_by":1},{"id":12,"uuid":"155bded5-70c9-47e0-b0be-042ed02b1592","name":"Development","slug":"development","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1392710130567,"created_by":1,"updated_at":1392710130567,"updated_by":1},{"id":13,"uuid":"481c0f28-22db-467c-8458-4391c7e427fe","name":"Review","slug":"review","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1392710130568,"created_by":1,"updated_at":1392710130568,"updated_by":1},{"id":14,"uuid":"e636d8e0-e7df-44fc-b0cd-e9d0a0167efc","name":"c#","slug":"c","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1392710130568,"created_by":1,"updated_at":1392710130568,"updated_by":1},{"id":15,"uuid":"75a57157-9a62-4199-9be0-8568269b3893","name":"Xamarin For Android","slug":"xamarin-for-android","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1392710130568,"created_by":1,"updated_at":1392710130568,"updated_by":1},{"id":16,"uuid":"560a778c-db7b-4c40-a75a-65e16ffbcca0","name":"Testing","slug":"testing","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1392962194493,"created_by":1,"updated_at":1392962194493,"updated_by":1},{"id":17,"uuid":"43f73f83-6168-4080-9def-670c33e2263b","name":"QA","slug":"qa","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1392962194496,"created_by":1,"updated_at":1392962194496,"updated_by":1},{"id":18,"uuid":"5c8cf536-314a-4c11-b0cb-0d5bb5400339","name":"Jenkins","slug":"jenkins","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1392962194496,"created_by":1,"updated_at":1392962194496,"updated_by":1},{"id":19,"uuid":"7588915c-8658-4f8a-acb6-197f9a7c5ace","name":"You","slug":"you","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1392962194497,"created_by":1,"updated_at":1392962194497,"updated_by":1},{"id":20,"uuid":"59825e63-9f1d-4669-8756-07c3f78fb101","name":"non-prod","slug":"non-prod","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1393050943282,"created_by":1,"updated_at":1393050943282,"updated_by":1},{"id":21,"uuid":"71c751de-dc5d-46d0-8fb7-5191eea65231","name":"Continuous Improvement","slug":"continuous-improvement","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1393050943283,"created_by":1,"updated_at":1393050943283,"updated_by":1},{"id":22,"uuid":"48d9cdbe-d562-428d-924b-9db8b1a05df6","name":"backbone.js","slug":"backbone-js","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1393288149047,"created_by":1,"updated_at":1393288149047,"updated_by":1},{"id":23,"uuid":"f9f81c91-8275-4275-9fdd-858b96d262e4","name":"Javascript","slug":"javascript","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1393288149048,"created_by":1,"updated_at":1393288149048,"updated_by":1},{"id":24,"uuid":"34b7ebe9-b7fd-4022-a687-352b30fee73e","name":"smartphone","slug":"smartphone","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1393290642758,"created_by":1,"updated_at":1393290642758,"updated_by":1},{"id":25,"uuid":"58238138-065b-478a-8bbd-c84c2d4cf024","name":"phone","slug":"phone","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1393290642758,"created_by":1,"updated_at":1393290642758,"updated_by":1},{"id":26,"uuid":"6dad2332-1717-4ad9-98c1-f618d0309002","name":"iPhone","slug":"iphone","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1393290642759,"created_by":1,"updated_at":1393290642759,"updated_by":1},{"id":27,"uuid":"dd9e1bdb-8ceb-4c47-bbb1-66738969ec57","name":"ghost","slug":"ghost-post","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1393363455236,"created_by":1,"updated_at":1393363455236,"updated_by":1},{"id":28,"uuid":"ce0d591b-6457-4e37-874e-2ba883c1d734","name":"node.js","slug":"node-js","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1393363455236,"created_by":1,"updated_at":1393363455236,"updated_by":1},{"id":29,"uuid":"e3b8a9a8-26ac-42f7-b46a-2b1789fdf1a2","name":"linux","slug":"linux","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1393363455237,"created_by":1,"updated_at":1393363455237,"updated_by":1},{"id":30,"uuid":"df6cef9f-ddf1-4007-9acc-1e638b2cdefa","name":"robots.txt","slug":"robots-txt","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1393363455237,"created_by":1,"updated_at":1393363455237,"updated_by":1},{"id":31,"uuid":"898b1206-e1e9-457f-a58f-fb30e7e1834a","name":"sitemap","slug":"sitemap","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1393363455238,"created_by":1,"updated_at":1393363455238,"updated_by":1},{"id":32,"uuid":"817829a0-435f-4047-b42c-d64c0f111842","name":"googlebot","slug":"googlebot","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1393363455238,"created_by":1,"updated_at":1393363455238,"updated_by":1},{"id":33,"uuid":"3baa93ae-498d-4c18-8701-bc6d70e6fc77","name":"webmaster tools","slug":"webmaster-tools","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1393363455238,"created_by":1,"updated_at":1393363455238,"updated_by":1},{"id":34,"uuid":"1a74d7f0-8ea5-40c2-8028-025b60a6f4dd","name":"HowTo","slug":"howto","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1393721331517,"created_by":1,"updated_at":1393721331517,"updated_by":1},{"id":35,"uuid":"b7a8267d-fd09-4a16-8b10-fe2f8e33e99e","name":"Tutorial","slug":"tutorial","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1393721344199,"created_by":1,"updated_at":1393721344199,"updated_by":1},{"id":36,"uuid":"1ba7ab97-f71b-46e3-80f9-85eac79a3cd9","name":"nodeBB","slug":"nodebb","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1393721389234,"created_by":1,"updated_at":1393721389234,"updated_by":1},{"id":37,"uuid":"d3a6df03-0f1f-4f32-a5a7-2974c16df881","name":"CentOS","slug":"centos","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1393721389235,"created_by":1,"updated_at":1393721389235,"updated_by":1},{"id":38,"uuid":"933b5c3c-0bdf-43e0-a65a-c44f282c9741","name":"JavaScript","slug":"javascript-2","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1393721389235,"created_by":1,"updated_at":1393721389235,"updated_by":1},{"id":39,"uuid":"28d12e96-726e-48a0-bdd8-fb2ac6b80406","name":"feedback","slug":"feedback","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1393795740188,"created_by":1,"updated_at":1393795740188,"updated_by":1},{"id":40,"uuid":"4a65c15f-d304-4c3a-bdcc-1c31feecde7a","name":"client side","slug":"client-side","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1395273933828,"created_by":1,"updated_at":1395273933828,"updated_by":1},{"id":41,"uuid":"48a9116d-e930-44ff-83ca-cffbaa0ed43f","name":"error handling","slug":"error-handling","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1395273933829,"created_by":1,"updated_at":1395273933829,"updated_by":1},{"id":42,"uuid":"ec0a6165-deeb-4055-bfb2-2fd7e9ad5175","name":"Nancyfx","slug":"nancyfx","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1395555180201,"created_by":1,"updated_at":1395555180201,"updated_by":1},{"id":43,"uuid":"dbfe426c-41d0-453a-b50f-973bfd8f7ff4","name":"SquishIt","slug":"squishit","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1395555180202,"created_by":1,"updated_at":1395555180202,"updated_by":1},{"id":44,"uuid":"a6c77e45-522d-4a59-9a4b-77a3610560e1","name":"css","slug":"css","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1395555180202,"created_by":1,"updated_at":1395555180202,"updated_by":1},{"id":45,"uuid":"aebc9673-7be7-46a6-baa6-672db35aa3e0","name":"Nancy","slug":"nancy","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1396315412613,"created_by":1,"updated_at":1396315412613,"updated_by":1},{"id":46,"uuid":"773b41d0-a727-4d3c-94e7-8713a72a5f18","name":".net","slug":"-net","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1397096479061,"created_by":1,"updated_at":1397096479061,"updated_by":1},{"id":47,"uuid":"9c5c779d-bbd8-4657-8717-2d7b1bb1111a","name":"Must Have Tool","slug":"must-have-tool","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1397530786366,"created_by":1,"updated_at":1397530786366,"updated_by":1},{"id":48,"uuid":"a1d3c65b-1490-48cb-96ec-b0c248f3491c","name":"reivew","slug":"reivew","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1397530786367,"created_by":1,"updated_at":1397530786367,"updated_by":1},{"id":49,"uuid":"02d9ad11-cc95-4b9a-a6c7-e69e9f7a4534","name":"tools","slug":"tools","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1397530786367,"created_by":1,"updated_at":1397530786367,"updated_by":1},{"id":50,"uuid":"ba00602f-87b9-4066-a75f-e9de062e934e","name":"review","slug":"review-2","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1397643763069,"created_by":1,"updated_at":1397643763069,"updated_by":1},{"id":51,"uuid":"81125f09-701f-4f53-a5d5-f90fc1991c9d","name":"netbooks","slug":"netbooks","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1398801601534,"created_by":1,"updated_at":1398801601534,"updated_by":1},{"id":52,"uuid":"e98a355e-d051-43fd-b5e6-62da7bd320c6","name":"ChromeOS","slug":"chromeos","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1398801601535,"created_by":1,"updated_at":1398801601535,"updated_by":1},{"id":53,"uuid":"32900b73-d4c7-4944-90cc-68df282eec66","name":"mobility","slug":"mobility","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1398801601535,"created_by":1,"updated_at":1398801601535,"updated_by":1},{"id":54,"uuid":"ec281ad2-9f6c-477b-a301-9e8bb564a117","name":"Monitorama","slug":"monitorama","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1399386082176,"created_by":1,"updated_at":1399386082176,"updated_by":1},{"id":55,"uuid":"6f69457e-86c2-420a-af87-c42d6f470c89","name":"Conference","slug":"conference","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1399386082177,"created_by":1,"updated_at":1399386082177,"updated_by":1},{"id":56,"uuid":"cfe00fa1-012c-48bb-ac24-1e6c371e3305","name":"Diversity","slug":"diversity","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1399386082177,"created_by":1,"updated_at":1399386082177,"updated_by":1},{"id":57,"uuid":"09ed259b-bcbe-48a5-8ef9-14860740938a","name":"wtf","slug":"wtf","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1403998077861,"created_by":1,"updated_at":1403998077861,"updated_by":1},{"id":58,"uuid":"586e54a5-fef9-40b1-a666-5418d5ca3231","name":"Excel","slug":"excel","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1403998077861,"created_by":1,"updated_at":1403998077861,"updated_by":1},{"id":59,"uuid":"14386074-9492-4c23-b55d-b148ad971033","name":"Office Interop","slug":"office-interop","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1403998077861,"created_by":1,"updated_at":1403998077861,"updated_by":1},{"id":60,"uuid":"ca2828a6-7ca9-4680-bdf0-7fec72001b14","name":"generics","slug":"generics","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1404635452509,"created_by":1,"updated_at":1404635452509,"updated_by":1}],"posts_tags":[{"id":2,"post_id":2,"tag_id":2},{"id":3,"post_id":2,"tag_id":3},{"id":4,"post_id":2,"tag_id":4},{"id":5,"post_id":2,"tag_id":5},{"id":6,"post_id":5,"tag_id":6},{"id":7,"post_id":5,"tag_id":7},{"id":9,"post_id":5,"tag_id":9},{"id":10,"post_id":6,"tag_id":10},{"id":11,"post_id":6,"tag_id":11},{"id":12,"post_id":6,"tag_id":12},{"id":13,"post_id":6,"tag_id":13},{"id":14,"post_id":6,"tag_id":14},{"id":15,"post_id":6,"tag_id":15},{"id":16,"post_id":7,"tag_id":12},{"id":17,"post_id":7,"tag_id":13},{"id":18,"post_id":7,"tag_id":14},{"id":19,"post_id":7,"tag_id":15},{"id":20,"post_id":7,"tag_id":11},{"id":21,"post_id":8,"tag_id":11},{"id":22,"post_id":8,"tag_id":12},{"id":23,"post_id":8,"tag_id":13},{"id":24,"post_id":8,"tag_id":14},{"id":25,"post_id":8,"tag_id":15},{"id":26,"post_id":9,"tag_id":11},{"id":27,"post_id":9,"tag_id":12},{"id":28,"post_id":9,"tag_id":13},{"id":29,"post_id":9,"tag_id":14},{"id":30,"post_id":9,"tag_id":15},{"id":35,"post_id":11,"tag_id":7},{"id":36,"post_id":11,"tag_id":9},{"id":37,"post_id":11,"tag_id":16},{"id":38,"post_id":11,"tag_id":20},{"id":39,"post_id":11,"tag_id":21},{"id":40,"post_id":13,"tag_id":12},{"id":41,"post_id":13,"tag_id":22},{"id":42,"post_id":13,"tag_id":23},{"id":43,"post_id":15,"tag_id":10},{"id":44,"post_id":15,"tag_id":24},{"id":45,"post_id":15,"tag_id":25},{"id":46,"post_id":15,"tag_id":26},{"id":47,"post_id":16,"tag_id":27},{"id":48,"post_id":16,"tag_id":28},{"id":49,"post_id":16,"tag_id":29},{"id":50,"post_id":16,"tag_id":30},{"id":51,"post_id":16,"tag_id":31},{"id":52,"post_id":16,"tag_id":32},{"id":53,"post_id":16,"tag_id":33},{"id":55,"post_id":16,"tag_id":35},{"id":56,"post_id":13,"tag_id":35},{"id":57,"post_id":18,"tag_id":28},{"id":58,"post_id":18,"tag_id":35},{"id":59,"post_id":18,"tag_id":36},{"id":60,"post_id":18,"tag_id":37},{"id":61,"post_id":18,"tag_id":38},{"id":62,"post_id":14,"tag_id":9},{"id":63,"post_id":14,"tag_id":21},{"id":64,"post_id":14,"tag_id":39},{"id":65,"post_id":19,"tag_id":9},{"id":66,"post_id":19,"tag_id":21},{"id":67,"post_id":19,"tag_id":39},{"id":68,"post_id":20,"tag_id":11},{"id":69,"post_id":20,"tag_id":14},{"id":70,"post_id":20,"tag_id":15},{"id":71,"post_id":21,"tag_id":11},{"id":72,"post_id":21,"tag_id":14},{"id":73,"post_id":21,"tag_id":15},{"id":74,"post_id":21,"tag_id":35},{"id":75,"post_id":22,"tag_id":11},{"id":76,"post_id":22,"tag_id":14},{"id":77,"post_id":22,"tag_id":15},{"id":78,"post_id":22,"tag_id":35},{"id":79,"post_id":23,"tag_id":9},{"id":80,"post_id":23,"tag_id":21},{"id":81,"post_id":24,"tag_id":38},{"id":82,"post_id":24,"tag_id":40},{"id":83,"post_id":24,"tag_id":41},{"id":84,"post_id":25,"tag_id":14},{"id":85,"post_id":25,"tag_id":35},{"id":86,"post_id":25,"tag_id":38},{"id":87,"post_id":25,"tag_id":42},{"id":88,"post_id":25,"tag_id":43},{"id":89,"post_id":25,"tag_id":44},{"id":90,"post_id":26,"tag_id":14},{"id":91,"post_id":26,"tag_id":35},{"id":92,"post_id":26,"tag_id":42},{"id":93,"post_id":26,"tag_id":45},{"id":94,"post_id":25,"tag_id":45},{"id":95,"post_id":27,"tag_id":14},{"id":96,"post_id":27,"tag_id":35},{"id":97,"post_id":27,"tag_id":46},{"id":98,"post_id":28,"tag_id":14},{"id":99,"post_id":28,"tag_id":47},{"id":101,"post_id":28,"tag_id":49},{"id":102,"post_id":28,"tag_id":50},{"id":103,"post_id":29,"tag_id":51},{"id":104,"post_id":29,"tag_id":52},{"id":105,"post_id":29,"tag_id":53},{"id":106,"post_id":30,"tag_id":5},{"id":107,"post_id":30,"tag_id":54},{"id":108,"post_id":30,"tag_id":55},{"id":109,"post_id":30,"tag_id":56},{"id":110,"post_id":31,"tag_id":5},{"id":111,"post_id":31,"tag_id":54},{"id":112,"post_id":31,"tag_id":55},{"id":113,"post_id":32,"tag_id":13},{"id":114,"post_id":32,"tag_id":14},{"id":115,"post_id":32,"tag_id":47},{"id":116,"post_id":32,"tag_id":49},{"id":117,"post_id":34,"tag_id":35},{"id":118,"post_id":34,"tag_id":57},{"id":119,"post_id":34,"tag_id":58},{"id":120,"post_id":34,"tag_id":59},{"id":121,"post_id":35,"tag_id":14},{"id":122,"post_id":35,"tag_id":35},{"id":123,"post_id":35,"tag_id":60},{"id":124,"post_id":37,"tag_id":12},{"id":125,"post_id":37,"tag_id":14},{"id":126,"post_id":37,"tag_id":35}]}}